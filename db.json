{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":0},{"_id":"source/img/github_build.png","path":"img/github_build.png","modified":1,"renderable":0},{"_id":"source/img/github_created.png","path":"img/github_created.png","modified":1,"renderable":0},{"_id":"source/img/wechatpay.png","path":"img/wechatpay.png","modified":1,"renderable":0},{"_id":"source/img/面向对象之创建对象.png","path":"img/面向对象之创建对象.png","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"source/img/面向对象之继承.png","path":"img/面向对象之继承.png","modified":1,"renderable":0},{"_id":"source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"88a4918e86713b6b5b4021b99199b827d3449a47","modified":1471782712591},{"_id":"source/favicon.ico","hash":"b0935c0ce568633ebbf94e654072f7eca90b547b","modified":1471782717404},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1471782720163},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1471782720408},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1471782720695},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1471782720987},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1471782721235},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1471782738182},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1471782738427},{"_id":"themes/next/_config.yml","hash":"33084dfae39877c2d643483469dcebdbe95873f2","modified":1471782721485},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1471782721737},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1471782721994},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1471782737929},{"_id":"source/_posts/Angular-UI-Router学习笔记.md","hash":"ebf681f184286b558bf17799d09bbf3954944e57","modified":1471782712852},{"_id":"source/_posts/build-first-blog.md","hash":"63ab0daa7088786b535a1972a550f1d0299f4c6f","modified":1471782713122},{"_id":"source/_posts/grunt-install.md","hash":"35d25f69a5548773011c3c4fd48177dd02ad3497","modified":1471782713375},{"_id":"source/_posts/gulp使用小例一.md","hash":"d2028398d2e9b37491fecff75f7807c19602cf0e","modified":1471782713642},{"_id":"source/_posts/gulp每个文件夹生成单独一个文件.md","hash":"a990121c7a9c226678b688066c2e420544a19369","modified":1471782713929},{"_id":"source/_posts/nodejs-install.md","hash":"86efaf65c2f72c9fccabd29f0f2e82a671a6f97b","modified":1471782714194},{"_id":"source/_posts/npm-setting.md","hash":"1f8d9ab3d557a18700207f012cd6230d3b224840","modified":1471782714456},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记（一）：ECMAScript基础.md","hash":"6a2382ef763308f631b6791c40e2634fe1d00bc2","modified":1471782714720},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记（三）：ECMAScript中的引用类型.md","hash":"f7476b66ccf9c8f4a1f1c16c57ae3c7d81321197","modified":1471782715010},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记（二）：ECMAScript中的原始类型.md","hash":"04e44460c8bdb6c03364f4a7e029bd820edf0580","modified":1471782715306},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记：函数表达式、闭包、私有变量 .md","hash":"f2815953505e8f685af10d0942d23805c6a389ea","modified":1471782715578},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记：面向对象之创建对象.md","hash":"a5c058cce01a18a18a8865a1fb709173c87b4bc5","modified":1471782715856},{"_id":"source/_posts/《JavaScript高级程序设计》阅读笔记：面向对象之继承.md","hash":"c3d1bc40db629fce7c93138849a8124d6471a173","modified":1471782716148},{"_id":"source/_posts/常用gulp插件介绍.md","hash":"16b0a3f5f1da1a96c44ca6b4eae5168ba50ef949","modified":1471782716464},{"_id":"source/_posts/流程图.md","hash":"0c9951a250a43a9f7770484871f30569168a8956","modified":1471782716786},{"_id":"source/categories/index.md","hash":"1e2cd5007d0a0c22e683a700b850ee1783946aa7","modified":1471782717095},{"_id":"source/img/avatar.jpg","hash":"951606d83c0b3848476f32461878b1316b3f3c0e","modified":1471782718024},{"_id":"source/img/github_build.png","hash":"7d05e356cf207fac34a1fe074a64bf9c17901e9b","modified":1471782718319},{"_id":"source/img/github_created.png","hash":"8c9b63ec5dacf6ae292498460b663ee5c5ad3d99","modified":1471782718614},{"_id":"source/img/wechatpay.png","hash":"791f2ef88728ecbfcf681d38a718eef87e35bf0e","modified":1471782718881},{"_id":"source/img/面向对象之创建对象.png","hash":"789ab2d070b392872e7559351a42b824d9453be8","modified":1471782719133},{"_id":"source/tags/index.md","hash":"8e93effb6b11e18f35a5b95a4cbd782a256d88df","modified":1471782719633},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1471782722248},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1471782722493},{"_id":"themes/next/languages/en.yml","hash":"a849c2da3dd386d77bdeda2c64203537d97370ca","modified":1471782722750},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1471782723003},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1471782723254},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1471782723501},{"_id":"themes/next/languages/pt-BR.yml","hash":"81498b783372f11b2149bd2b1731e78432760a0e","modified":1471782723750},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1471782724002},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1471782724254},{"_id":"themes/next/languages/zh-Hans.yml","hash":"7d0b30e1b056d16d1d13c593a5fbcf955557cfea","modified":1471782724505},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1471782724759},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1471782725006},{"_id":"themes/next/layout/_layout.swig","hash":"9245fe85ec0aa7c7df0294794a78f2f3ac7e3170","modified":1471782725254},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1471782736369},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1471782736620},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1471782736870},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1471782737120},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1471782737370},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1471782737640},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1471782738676},{"_id":"themes/next/source/404.html","hash":"2f6d7a7551aa497aaf9c48bd599791e45192c088","modified":1471782739685},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1471782781749},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1471782781998},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1471782782251},{"_id":"source/img/面向对象之继承.png","hash":"9bfe638a1b699685c294f7253c4fb14b4a65f4ff","modified":1471782719381},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782762556},{"_id":"source/img/alipay.jpg","hash":"8307652aaa09deb3e02a0c7704bd3a7e8d9f73b9","modified":1471782717731},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1471782725508},{"_id":"themes/next/layout/_macro/post.swig","hash":"8b4b147bd9cad5a524661030cf93195a6fb18307","modified":1471782725768},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1471782726019},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"8aa5212d803670179222dbc80e73eadd7328d8e5","modified":1471782726275},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1471782726523},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5d84f3938e99f1908a6a1d44dd530740625f0188","modified":1471782726778},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1471782727027},{"_id":"themes/next/layout/_partials/footer.swig","hash":"a2ffe1581a2892fa3547e8eb2e98ab6989639e92","modified":1471782727273},{"_id":"themes/next/layout/_partials/head.swig","hash":"881abebed3a7fa71827365b0ba0e84ec525eeb7f","modified":1471782727516},{"_id":"themes/next/layout/_partials/header.swig","hash":"c0697644817f1570093de9f17ea096295da8c5f1","modified":1471782728023},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1471782728280},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1471782728527},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1471782730595},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1471782730847},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1471782731101},{"_id":"themes/next/layout/_scripts/lean-analytics.swig","hash":"19afa1a4a829d6b789d0b87ecb0f4dbd6dc7e5df","modified":1471782731346},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1471782736118},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1471782738933},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1471782739190},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1471782739439},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1471782762306},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1471782762807},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1471782763058},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1471782763384},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1471782763636},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1471782763896},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1471782764150},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1471782764400},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1471782764651},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471782764906},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471782765160},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1471782765408},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1471782765657},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1471782765914},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782731848},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782732099},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782754719},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782755019},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782754443},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782761783},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471782761282},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1471782727770},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1471782728787},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1471782729034},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1471782729349},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1471782729594},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1471782729844},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1471782730095},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1471782730344},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1471782731597},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1471782732353},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1471782732605},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1471782734360},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1471782735118},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f6b46096208512b4d8680c024fcb68f03ceab008","modified":1471782735363},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1471782735610},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1471782735861},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1471782755274},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1471782754190},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1471782753941},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1471782761529},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1471782762036},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1471782761031},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1471782766164},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1471782766413},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1471782766663},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1471782766916},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1471782767167},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1471782767672},{"_id":"themes/next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1471782767924},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1471782768174},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1471782768423},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1471782772529},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1471782773547},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1471782773802},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1471782772790},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1471782774053},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1471782774300},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1471782774550},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1471782777370},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1471782774799},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1471782777622},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1471782778134},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1471782778641},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1471782779390},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1471782778384},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1471782778897},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1471782779142},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1471782780149},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1471782780479},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1471782780989},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1471782781246},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1471782781496},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1471782777881},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1471782732863},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1471782733111},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"3931f9c3bac3970a3f54c9d0072ae4c950aa176c","modified":1471782733358},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1471782733607},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1471782733859},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1471782734114},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"f8b6a3017ab79057ce99f1ccb512193d67f4a35f","modified":1471782734612},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"0a2f48971d86ea72e1a8fd1d8bbf2b7d423666b2","modified":1471782734863},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1471782739937},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1471782740190},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1471782740439},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1471782740695},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1471782743967},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1471782749549},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1471782752370},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1471782752674},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1471782752930},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1471782753186},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1471782753685},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1471782753433},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1471782755525},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1471782756026},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1471782755777},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1471782756272},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1471782756519},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1471782756769},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1471782757021},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1471782757775},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1471782758028},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1471782758278},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1471782758523},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1471782758774},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1471782759270},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1471782759778},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1471782759526},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1471782760027},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1471782760275},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1471782760526},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1471782760783},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1471782767418},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471782768674},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471782769181},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471782769432},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471782768929},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471782769680},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471782769929},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1471782771707},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1471782772003},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1471782772250},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1471782773043},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1471782773296},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1471782775047},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1471782775297},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1471782775550},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1471782776846},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1471782779641},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1471782779895},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1471782777112},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1471782775813},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1471782776585},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1471782780738},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1471782741199},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1471782741449},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1471782741703},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1471782741953},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1471782742204},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1471782740947},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1471782742454},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1471782742705},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1471782742966},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1471782743219},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1471782743472},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1471782743719},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1471782744214},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1471782744464},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1471782744714},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1471782744961},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1471782745218},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1471782745467},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1471782745717},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1471782745971},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1471782746281},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1471782746533},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1471782746789},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1471782747041},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1471782747294},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"34f622d339ac4f86c83e418b18367ada86f943ba","modified":1471782747545},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1471782747794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1471782748043},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1471782748293},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1471782748537},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1471782748799},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1471782749048},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1471782749297},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1471782749799},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1471782750050},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1471782750297},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1471782750545},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1471782750798},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1471782751044},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1471782751298},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1471782751559},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1471782751830},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1471782752097},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1471782757272},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1471782757521},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1471782759019},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471782770178},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1471782770424},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1471782770674},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1471782770927},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1471782771182},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1471782771431},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1471782776330},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1471782776067}],"Category":[{"name":"angularjs,ui,router","_id":"cis4lk7uq00041ov62qitmu60"},{"name":"hexo","_id":"cis4lk7v000091ov6ueb83yv6"},{"name":"自动管理,grunt","_id":"cis4lk7vb000f1ov6saa0icgt"},{"name":"自动管理,gulp","_id":"cis4lk7vf000l1ov6m6z2bfgo"},{"name":"环境,nodejs","_id":"cis4lk7vs000z1ov62i9gtxaf"},{"name":"环境,npm","_id":"cis4lk7vz00161ov6952k4flx"},{"name":"《JavaScript高级程序设计》阅读笔记","_id":"cis4lk7w1001c1ov6pm3b8xjt"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <title>找不到页面</title>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <title>找不到页面</title>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2016-08-21T12:31:52.591Z","updated":"2016-08-21T12:31:52.591Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cis4lk7si00001ov6r9d0qdun","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <title>&#x627E;&#x4E0D;&#x5230;&#x9875;&#x9762;</title>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"&#x56DE;&#x5230;&#x6211;&#x7684;&#x4E3B;&#x9875;\">\n</script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <title>找不到页面</title>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"title":"����","date":"2016-07-26T06:59:09.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: ����\ndate: 2016-07-26 14:59:09\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-08-21T12:31:57.095Z","path":"categories/index.html","layout":"page","_id":"cis4lk80n001w1ov60hizwwdh","content":"","excerpt":"","more":""},{"title":"��ǩ","date":"2016-07-26T06:54:37.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: ��ǩ\ndate: 2016-07-26 14:54:37\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-21T12:31:59.633Z","path":"tags/index.html","layout":"page","_id":"cis4lk80o001x1ov6z2f1tuvg","content":"","excerpt":"","more":""}],"Post":[{"title":"Angular-UI-Router 学习笔记","date":"2016-08-02T16:00:00.000Z","modifiedOn":"2016-08-02T16:00:00.000Z","toc":true,"_content":"\n----------\n路由 Route\n=============\n\n## 为什么用 Route\n\n - AJAX 请求不会留下 History 记录\n - 用户无法直接通过 URL进入应用中的指定页面(保存书签、链接分享给朋友)\n - AJAX 对 SEO 是个灾难\n\n```\nvar bookStoreApp = angular.module('bookStoreApp', [\n    'ngRoute', \n    'ngAnimate', \n    'bookStoreCtrls', \n    'bookStoreFilters',\n    'bookStoreServices', \n    'bookStoreDirectives'\n]);\nbookStoreApp.config(\n    // 路由机制\n    function($routeProvider) {\n        $routeProvider.when('/hello', {\n            templateUrl: 'tpls/hello.html',\n            controller: 'HelloCtrl'\n        }).when('/list/:bookId', {\n            templateUrl: 'tpls/bookList.html',\n            constoller: 'BookListCtrl'\n        }).otherwise({\n            redirectTo: '/hello'\n        });\n    }\n);\n```\n## 嵌套 View (Nested Routing for AngularJS)\n### AngularUI-Router AngularUI\n```\n<div ui-view></div>\n```\n## 前端路由的基本原理\n - 哈希 #\n - HTML5 中新的 history API\n - 路由的核心是给应用定义 \"状态\"\n - 使用路由机制会影响到应用的整体编码方式(需预先定义好状态)\n - 考虑兼容性问题与 \"优雅降级\"\n\n## Angular-UI-Router\n### ui-sref 指令链接到特定状态\n```\n<a ui-sref=\"home\">Home</a>\n<a ui-sref=\"about\">About</a>\n<a ui-sref=\"contacts.list\">Contacts</a>\n```\n### $state.includes 返回 *true* / *false*\n以上方法为查看当前状态是否在某父状态内，比如 *$state.includes('contacts')* 返回 *true* / *false*\n\n```\n<!-- 包含在 /contacts 状态内部，即其作为 parant state -->\n<li ng-class=\"{active: $state.includes('contacts')}\">\n    <a ui-serif=\"contacts.list\">Contacts</a>\n</li>\n```\n### ui-sref-active 查看当前激活状态并设置 *Class*\n```\n<li ui-sref-active=\"active\"><a ui-sref=\"about\">About</a></li>\n```\n### 包含模块\n```\nangular.module('uiRouter', ['ui.router']);\n```\n### 方便获得当前状态的方法，绑到根作用域\n```\napp.run(['$rootScope', '$state', '$stateParams',\n    function($rootScope, $state, $stateParams) {\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n    }\n]);\n```\n### 路由重定向 *$urlRouterProvider*\n```\napp.config(['$stateProvider', '$urlRouterProvider',\n    function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider\n            // 错误的路由重定向\n            .when('/c?id', '/contacts/:id')\n            .when('/user/:id', '/contacts/:id')\n            .otherwise('/');\n    }\n]);\n```\n### 状态配置\n```\n$stateProvider.\n    state('about', {\n        url: '/about',\n        template: '<h1>Welcome to UI-Router Demo</h1>',\n\n        // optional below\n        templateProvider: ['$timeout',\n            function($timeout) {\n                return $timeout(function() {\n                    return '<p class=\"lead\">UI-Router Resource</p>' +\n                            '<p>The second line</p>'\n                }, 100);\n            }\n        ],\n\n        templateUrl: 'about.html',\n\n        templateUrl: function() {\n            return 'about.html';\n        },\n\n        controller: 'UIRouterCtrl',\n\n        // below is a state controller picked from UI-Router official sample\n        controller: ['$scope', '$state', 'contacts', 'utils',\n            function ($scope, $state, contacts, utils) {\n                $scope.contacts = contacts;\n\n                $scope.goToRandom = function () {\n                    var randId = utils.newRandomKey($scope.contacts, 'id', $state.params.contactId);\n\n                    $state.go('contacts.details', { contactId: randId });\n                }\n            }\n        ]\n    });\n```\n\n### 嵌套配置 Configure\n\n##### Parent Router\n```\n$stateProvider.\n    .state('contacts', {\n\n        // abstract: true 表明此状态不能被显性激活，只能被子状态隐性激活\n        abstract: true,\n        url: '/contacts',\n        templateUrl: 'contacts.html',\n\n        // resolve 被使用来处理异步数据调用，以下是返回一个 promise -> contacts.all()\n        resolve: {\n            contacts: ['contacts',\n                function(contacts) {\n                    // 以下方法被放在 contacts.service.js 中，以 factory 存在\n                    return contacts.all();\n                }\n            ]\n        },\n\n        // below is a state controller picked from UI-Router official sample\n        controller: ['$scope', '$state', 'contacts', 'utils',\n            function ($scope, $state, contacts, utils) {\n                $scope.contacts = contacts;\n\n                $scope.goToRandom = function () {\n                    var randId = utils.newRandomKey($scope.contacts, 'id', $state.params.contactId);\n\n                    $state.go('contacts.details', { contactId: randId });\n                }\n            }\n        ]\n    })\n\n```\n##### Children Router (Nested Router)\n```\n$stateProvider\n    .state('contacts.list', {\n        url: '',\n        templateUrl: 'contacts.list.html'\n    })\n\n    .state('contacts.detail', {\n        url: '/{contactId:[0-9]{1,4}}',\n\n        // view 用在该状态下有多个 ui-view 的情况，可以对不同的 ui-view 使用特定的 template, controller, resolve data\n        // 绝对 view 使用 '@' 符号来区别，比如 'foo@bar' 表明名为 'foo' 的 ui-view 使用了 'bar' 状态的模板(template)，相对 view 则无\n        views: {\n            // 无名 view\n            '': {\n                templateUrl: 'contacts.detail.html',\n                controller: ['$scope', '$stateParams', 'utils',\n                    function ($scope, $stateParams, utils) {\n                        $scope.contact = utils.findById($scope.contacts, $stateParams.contactId);\n                    }\n                ]\n            },\n\n            // for \"ui-view='hint'\"\n            'hint@': {\n                template: 'This is contacts.defail populating the \"hint\" ui-view'\n            },\n            \n            // for \"ui-view='menuTip'\"\n            'menuTip': {\n                templateProvider: ['$stateParams',\n                    function($stateParams) {\n                        return '<hr><small class=\"muted\">Contact ID: ' + $stateParams.contactId + '</small>';\n                    }\n                ]\n            }\n        }\n    })\n```\nHTML Codes\n```\n\n<h2>All Contacts</h2>\n<ul>\n  <li ng-repeat=\"contact in contacts\">\n    <a ui-sref=\"contacts.detail({contactId:contact.id})\">{{contact.name}}</a>\n  </li>\n</ul>\n\n```\n\n","source":"_posts/Angular-UI-Router学习笔记.md","raw":"---\ntitle: Angular-UI-Router 学习笔记 \ncategory: angularjs,ui,router\ntags: angularjs\ndate: 2016-08-03\nmodifiedOn: 2016-08-03\ntoc: true\n---\n\n----------\n路由 Route\n=============\n\n## 为什么用 Route\n\n - AJAX 请求不会留下 History 记录\n - 用户无法直接通过 URL进入应用中的指定页面(保存书签、链接分享给朋友)\n - AJAX 对 SEO 是个灾难\n\n```\nvar bookStoreApp = angular.module('bookStoreApp', [\n    'ngRoute', \n    'ngAnimate', \n    'bookStoreCtrls', \n    'bookStoreFilters',\n    'bookStoreServices', \n    'bookStoreDirectives'\n]);\nbookStoreApp.config(\n    // 路由机制\n    function($routeProvider) {\n        $routeProvider.when('/hello', {\n            templateUrl: 'tpls/hello.html',\n            controller: 'HelloCtrl'\n        }).when('/list/:bookId', {\n            templateUrl: 'tpls/bookList.html',\n            constoller: 'BookListCtrl'\n        }).otherwise({\n            redirectTo: '/hello'\n        });\n    }\n);\n```\n## 嵌套 View (Nested Routing for AngularJS)\n### AngularUI-Router AngularUI\n```\n<div ui-view></div>\n```\n## 前端路由的基本原理\n - 哈希 #\n - HTML5 中新的 history API\n - 路由的核心是给应用定义 \"状态\"\n - 使用路由机制会影响到应用的整体编码方式(需预先定义好状态)\n - 考虑兼容性问题与 \"优雅降级\"\n\n## Angular-UI-Router\n### ui-sref 指令链接到特定状态\n```\n<a ui-sref=\"home\">Home</a>\n<a ui-sref=\"about\">About</a>\n<a ui-sref=\"contacts.list\">Contacts</a>\n```\n### $state.includes 返回 *true* / *false*\n以上方法为查看当前状态是否在某父状态内，比如 *$state.includes('contacts')* 返回 *true* / *false*\n\n```\n<!-- 包含在 /contacts 状态内部，即其作为 parant state -->\n<li ng-class=\"{active: $state.includes('contacts')}\">\n    <a ui-serif=\"contacts.list\">Contacts</a>\n</li>\n```\n### ui-sref-active 查看当前激活状态并设置 *Class*\n```\n<li ui-sref-active=\"active\"><a ui-sref=\"about\">About</a></li>\n```\n### 包含模块\n```\nangular.module('uiRouter', ['ui.router']);\n```\n### 方便获得当前状态的方法，绑到根作用域\n```\napp.run(['$rootScope', '$state', '$stateParams',\n    function($rootScope, $state, $stateParams) {\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n    }\n]);\n```\n### 路由重定向 *$urlRouterProvider*\n```\napp.config(['$stateProvider', '$urlRouterProvider',\n    function($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider\n            // 错误的路由重定向\n            .when('/c?id', '/contacts/:id')\n            .when('/user/:id', '/contacts/:id')\n            .otherwise('/');\n    }\n]);\n```\n### 状态配置\n```\n$stateProvider.\n    state('about', {\n        url: '/about',\n        template: '<h1>Welcome to UI-Router Demo</h1>',\n\n        // optional below\n        templateProvider: ['$timeout',\n            function($timeout) {\n                return $timeout(function() {\n                    return '<p class=\"lead\">UI-Router Resource</p>' +\n                            '<p>The second line</p>'\n                }, 100);\n            }\n        ],\n\n        templateUrl: 'about.html',\n\n        templateUrl: function() {\n            return 'about.html';\n        },\n\n        controller: 'UIRouterCtrl',\n\n        // below is a state controller picked from UI-Router official sample\n        controller: ['$scope', '$state', 'contacts', 'utils',\n            function ($scope, $state, contacts, utils) {\n                $scope.contacts = contacts;\n\n                $scope.goToRandom = function () {\n                    var randId = utils.newRandomKey($scope.contacts, 'id', $state.params.contactId);\n\n                    $state.go('contacts.details', { contactId: randId });\n                }\n            }\n        ]\n    });\n```\n\n### 嵌套配置 Configure\n\n##### Parent Router\n```\n$stateProvider.\n    .state('contacts', {\n\n        // abstract: true 表明此状态不能被显性激活，只能被子状态隐性激活\n        abstract: true,\n        url: '/contacts',\n        templateUrl: 'contacts.html',\n\n        // resolve 被使用来处理异步数据调用，以下是返回一个 promise -> contacts.all()\n        resolve: {\n            contacts: ['contacts',\n                function(contacts) {\n                    // 以下方法被放在 contacts.service.js 中，以 factory 存在\n                    return contacts.all();\n                }\n            ]\n        },\n\n        // below is a state controller picked from UI-Router official sample\n        controller: ['$scope', '$state', 'contacts', 'utils',\n            function ($scope, $state, contacts, utils) {\n                $scope.contacts = contacts;\n\n                $scope.goToRandom = function () {\n                    var randId = utils.newRandomKey($scope.contacts, 'id', $state.params.contactId);\n\n                    $state.go('contacts.details', { contactId: randId });\n                }\n            }\n        ]\n    })\n\n```\n##### Children Router (Nested Router)\n```\n$stateProvider\n    .state('contacts.list', {\n        url: '',\n        templateUrl: 'contacts.list.html'\n    })\n\n    .state('contacts.detail', {\n        url: '/{contactId:[0-9]{1,4}}',\n\n        // view 用在该状态下有多个 ui-view 的情况，可以对不同的 ui-view 使用特定的 template, controller, resolve data\n        // 绝对 view 使用 '@' 符号来区别，比如 'foo@bar' 表明名为 'foo' 的 ui-view 使用了 'bar' 状态的模板(template)，相对 view 则无\n        views: {\n            // 无名 view\n            '': {\n                templateUrl: 'contacts.detail.html',\n                controller: ['$scope', '$stateParams', 'utils',\n                    function ($scope, $stateParams, utils) {\n                        $scope.contact = utils.findById($scope.contacts, $stateParams.contactId);\n                    }\n                ]\n            },\n\n            // for \"ui-view='hint'\"\n            'hint@': {\n                template: 'This is contacts.defail populating the \"hint\" ui-view'\n            },\n            \n            // for \"ui-view='menuTip'\"\n            'menuTip': {\n                templateProvider: ['$stateParams',\n                    function($stateParams) {\n                        return '<hr><small class=\"muted\">Contact ID: ' + $stateParams.contactId + '</small>';\n                    }\n                ]\n            }\n        }\n    })\n```\nHTML Codes\n```\n\n<h2>All Contacts</h2>\n<ul>\n  <li ng-repeat=\"contact in contacts\">\n    <a ui-sref=\"contacts.detail({contactId:contact.id})\">{{contact.name}}</a>\n  </li>\n</ul>\n\n```\n\n","slug":"Angular-UI-Router学习笔记","published":1,"updated":"2016-08-21T12:31:52.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7ub00011ov6ax3lyg1b","content":"<hr>\n<h1 id=\"&#x8DEF;&#x7531;-route\"><a href=\"#&#x8DEF;&#x7531;-Route\" class=\"headerlink\" title=\"&#x8DEF;&#x7531; Route\"></a>&#x8DEF;&#x7531; Route</h1><h2 id=\"&#x4E3A;&#x4EC0;&#x4E48;&#x7528;-route\"><a href=\"#&#x4E3A;&#x4EC0;&#x4E48;&#x7528;-Route\" class=\"headerlink\" title=\"&#x4E3A;&#x4EC0;&#x4E48;&#x7528; Route\"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x7528; Route</h2><ul>\n<li>AJAX &#x8BF7;&#x6C42;&#x4E0D;&#x4F1A;&#x7559;&#x4E0B; History &#x8BB0;&#x5F55;</li>\n<li>&#x7528;&#x6237;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x901A;&#x8FC7; URL&#x8FDB;&#x5165;&#x5E94;&#x7528;&#x4E2D;&#x7684;&#x6307;&#x5B9A;&#x9875;&#x9762;(&#x4FDD;&#x5B58;&#x4E66;&#x7B7E;&#x3001;&#x94FE;&#x63A5;&#x5206;&#x4EAB;&#x7ED9;&#x670B;&#x53CB;)</li>\n<li>AJAX &#x5BF9; SEO &#x662F;&#x4E2A;&#x707E;&#x96BE;</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> bookStoreApp = angular.module(<span class=\"string\">&apos;bookStoreApp&apos;</span>, [</div><div class=\"line\">    <span class=\"string\">&apos;ngRoute&apos;</span>, </div><div class=\"line\">    <span class=\"string\">&apos;ngAnimate&apos;</span>, </div><div class=\"line\">    <span class=\"string\">&apos;bookStoreCtrls&apos;</span>, </div><div class=\"line\">    <span class=\"string\">&apos;bookStoreFilters&apos;</span>,</div><div class=\"line\">    <span class=\"string\">&apos;bookStoreServices&apos;</span>, </div><div class=\"line\">    <span class=\"string\">&apos;bookStoreDirectives&apos;</span></div><div class=\"line\">]);</div><div class=\"line\">bookStoreApp.config(</div><div class=\"line\">    <span class=\"comment\">// &#x8DEF;&#x7531;&#x673A;&#x5236;</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($routeProvider)</span> </span>{</div><div class=\"line\">        $routeProvider.when(<span class=\"string\">&apos;/hello&apos;</span>, {</div><div class=\"line\">            templateUrl: <span class=\"string\">&apos;tpls/hello.html&apos;</span>,</div><div class=\"line\">            controller: <span class=\"string\">&apos;HelloCtrl&apos;</span></div><div class=\"line\">        }).when(<span class=\"string\">&apos;/list/:bookId&apos;</span>, {</div><div class=\"line\">            templateUrl: <span class=\"string\">&apos;tpls/bookList.html&apos;</span>,</div><div class=\"line\">            constoller: <span class=\"string\">&apos;BookListCtrl&apos;</span></div><div class=\"line\">        }).otherwise({</div><div class=\"line\">            redirectTo: <span class=\"string\">&apos;/hello&apos;</span></div><div class=\"line\">        });</div><div class=\"line\">    }</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"&#x5D4C;&#x5957;-view-nested-routing-for-angularjs\"><a href=\"#&#x5D4C;&#x5957;-View-Nested-Routing-for-AngularJS\" class=\"headerlink\" title=\"&#x5D4C;&#x5957; View (Nested Routing for AngularJS)\"></a>&#x5D4C;&#x5957; View (Nested Routing for AngularJS)</h2><h3 id=\"angularui-router-angularui\"><a href=\"#AngularUI-Router-AngularUI\" class=\"headerlink\" title=\"AngularUI-Router AngularUI\"></a>AngularUI-Router AngularUI</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;div ui-view&gt;</span><span class=\"section\">&lt;/div&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"&#x524D;&#x7AEF;&#x8DEF;&#x7531;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;\"><a href=\"#&#x524D;&#x7AEF;&#x8DEF;&#x7531;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;\" class=\"headerlink\" title=\"&#x524D;&#x7AEF;&#x8DEF;&#x7531;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;\"></a>&#x524D;&#x7AEF;&#x8DEF;&#x7531;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;</h2><ul>\n<li>&#x54C8;&#x5E0C; #</li>\n<li>HTML5 &#x4E2D;&#x65B0;&#x7684; history API</li>\n<li>&#x8DEF;&#x7531;&#x7684;&#x6838;&#x5FC3;&#x662F;&#x7ED9;&#x5E94;&#x7528;&#x5B9A;&#x4E49; &#x201C;&#x72B6;&#x6001;&#x201D;</li>\n<li>&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x673A;&#x5236;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5E94;&#x7528;&#x7684;&#x6574;&#x4F53;&#x7F16;&#x7801;&#x65B9;&#x5F0F;(&#x9700;&#x9884;&#x5148;&#x5B9A;&#x4E49;&#x597D;&#x72B6;&#x6001;)</li>\n<li>&#x8003;&#x8651;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#x4E0E; &#x201C;&#x4F18;&#x96C5;&#x964D;&#x7EA7;&#x201D;</li>\n</ul>\n<h2 id=\"angular-ui-router\"><a href=\"#Angular-UI-Router\" class=\"headerlink\" title=\"Angular-UI-Router\"></a>Angular-UI-Router</h2><h3 id=\"ui-sref-&#x6307;&#x4EE4;&#x94FE;&#x63A5;&#x5230;&#x7279;&#x5B9A;&#x72B6;&#x6001;\"><a href=\"#ui-sref-&#x6307;&#x4EE4;&#x94FE;&#x63A5;&#x5230;&#x7279;&#x5B9A;&#x72B6;&#x6001;\" class=\"headerlink\" title=\"ui-sref &#x6307;&#x4EE4;&#x94FE;&#x63A5;&#x5230;&#x7279;&#x5B9A;&#x72B6;&#x6001;\"></a>ui-sref &#x6307;&#x4EE4;&#x94FE;&#x63A5;&#x5230;&#x7279;&#x5B9A;&#x72B6;&#x6001;</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">&quot;home&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">&quot;about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">&quot;contacts.list&quot;</span>&gt;</span>Contacts<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"stateincludes-&#x8FD4;&#x56DE;-true-false\"><a href=\"#state-includes-&#x8FD4;&#x56DE;-true-false\" class=\"headerlink\" title=\"$state.includes &#x8FD4;&#x56DE; true / false\"></a>$state.includes &#x8FD4;&#x56DE; <em>true</em> / <em>false</em></h3><p>&#x4EE5;&#x4E0A;&#x65B9;&#x6CD5;&#x4E3A;&#x67E5;&#x770B;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x662F;&#x5426;&#x5728;&#x67D0;&#x7236;&#x72B6;&#x6001;&#x5185;&#xFF0C;&#x6BD4;&#x5982; <em>$state.includes(&#x2018;contacts&#x2019;)</em> &#x8FD4;&#x56DE; <em>true</em> / <em>false</em></p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- &#x5305;&#x542B;&#x5728; /contacts &#x72B6;&#x6001;&#x5185;&#x90E8;&#xFF0C;&#x5373;&#x5176;&#x4F5C;&#x4E3A; parant state --&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">ng-class</span>=<span class=\"string\">&quot;</span></span><span class=\"template-variable\">{active: $state.includes(&apos;contacts&apos;)}</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-serif</span>=<span class=\"string\">&quot;contacts.list&quot;</span>&gt;</span>Contacts<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"ui-sref-active-&#x67E5;&#x770B;&#x5F53;&#x524D;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x5E76;&#x8BBE;&#x7F6E;-class\"><a href=\"#ui-sref-active-&#x67E5;&#x770B;&#x5F53;&#x524D;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x5E76;&#x8BBE;&#x7F6E;-Class\" class=\"headerlink\" title=\"ui-sref-active &#x67E5;&#x770B;&#x5F53;&#x524D;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x5E76;&#x8BBE;&#x7F6E; Class\"></a>ui-sref-active &#x67E5;&#x770B;&#x5F53;&#x524D;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x5E76;&#x8BBE;&#x7F6E; <em>Class</em></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li ui-sref-active=<span class=\"string\">&quot;active&quot;</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">&quot;about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"&#x5305;&#x542B;&#x6A21;&#x5757;\"><a href=\"#&#x5305;&#x542B;&#x6A21;&#x5757;\" class=\"headerlink\" title=\"&#x5305;&#x542B;&#x6A21;&#x5757;\"></a>&#x5305;&#x542B;&#x6A21;&#x5757;</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular<span class=\"selector-class\">.module</span>(<span class=\"string\">&apos;uiRouter&apos;</span>, [<span class=\"string\">&apos;ui.router&apos;</span>]);</div></pre></td></tr></table></figure>\n<h3 id=\"&#x65B9;&#x4FBF;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#x7ED1;&#x5230;&#x6839;&#x4F5C;&#x7528;&#x57DF;\"><a href=\"#&#x65B9;&#x4FBF;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7ED1;&#x5230;&#x6839;&#x4F5C;&#x7528;&#x57DF;\" class=\"headerlink\" title=\"&#x65B9;&#x4FBF;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7ED1;&#x5230;&#x6839;&#x4F5C;&#x7528;&#x57DF;\"></a>&#x65B9;&#x4FBF;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7ED1;&#x5230;&#x6839;&#x4F5C;&#x7528;&#x57DF;</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.run([<span class=\"string\">&apos;$rootScope&apos;</span>, <span class=\"string\">&apos;$state&apos;</span>, <span class=\"string\">&apos;$stateParams&apos;</span>,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($rootScope, $state, $stateParams)</span> </span>{</div><div class=\"line\">        $rootScope.$state = $state;</div><div class=\"line\">        $rootScope.$stateParams = $stateParams;</div><div class=\"line\">    }</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h3 id=\"&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411;-urlrouterprovider\"><a href=\"#&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411;-urlRouterProvider\" class=\"headerlink\" title=\"&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411; $urlRouterProvider\"></a>&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411; <em>$urlRouterProvider</em></h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">app</span><span class=\"selector-class\">.config</span>([<span class=\"string\">&apos;$stateProvider&apos;</span>, <span class=\"string\">&apos;$urlRouterProvider&apos;</span>,</div><div class=\"line\">    function($stateProvider, $urlRouterProvider) {</div><div class=\"line\">        $urlRouterProvider</div><div class=\"line\">            <span class=\"comment\">// &#x9519;&#x8BEF;&#x7684;&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411;</span></div><div class=\"line\">            <span class=\"selector-class\">.when</span>(<span class=\"string\">&apos;/c?id&apos;</span>, <span class=\"string\">&apos;/contacts/:id&apos;</span>)</div><div class=\"line\">            <span class=\"selector-class\">.when</span>(<span class=\"string\">&apos;/user/:id&apos;</span>, <span class=\"string\">&apos;/contacts/:id&apos;</span>)</div><div class=\"line\">            <span class=\"selector-class\">.otherwise</span>(<span class=\"string\">&apos;/&apos;</span>);</div><div class=\"line\">    }</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h3 id=\"&#x72B6;&#x6001;&#x914D;&#x7F6E;\"><a href=\"#&#x72B6;&#x6001;&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"&#x72B6;&#x6001;&#x914D;&#x7F6E;\"></a>&#x72B6;&#x6001;&#x914D;&#x7F6E;</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">$stateProvider.</div><div class=\"line\">    state(<span class=\"string\">&apos;about&apos;</span>, {</div><div class=\"line\">        url: <span class=\"string\">&apos;/about&apos;</span>,</div><div class=\"line\">        template: <span class=\"string\">&apos;&lt;h1&gt;Welcome to UI-Router Demo&lt;/h1&gt;&apos;</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// optional below</span></div><div class=\"line\">        templateProvider: [<span class=\"string\">&apos;$timeout&apos;</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($timeout)</span> </span>{</div><div class=\"line\">                <span class=\"keyword\">return</span> $timeout(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>{</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">&apos;&lt;p class=&quot;lead&quot;&gt;UI-Router Resource&lt;/p&gt;&apos;</span> +</div><div class=\"line\">                            <span class=\"string\">&apos;&lt;p&gt;The second line&lt;/p&gt;&apos;</span></div><div class=\"line\">                }, <span class=\"number\">100</span>);</div><div class=\"line\">            }</div><div class=\"line\">        ],</div><div class=\"line\"></div><div class=\"line\">        templateUrl: <span class=\"string\">&apos;about.html&apos;</span>,</div><div class=\"line\"></div><div class=\"line\">        templateUrl: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>{</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&apos;about.html&apos;</span>;</div><div class=\"line\">        },</div><div class=\"line\"></div><div class=\"line\">        controller: <span class=\"string\">&apos;UIRouterCtrl&apos;</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// below is a state controller picked from UI-Router official sample</span></div><div class=\"line\">        controller: [<span class=\"string\">&apos;$scope&apos;</span>, <span class=\"string\">&apos;$state&apos;</span>, <span class=\"string\">&apos;contacts&apos;</span>, <span class=\"string\">&apos;utils&apos;</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($scope, $state, contacts, utils)</span> </span>{</div><div class=\"line\">                $scope.contacts = contacts;</div><div class=\"line\"></div><div class=\"line\">                $scope.goToRandom = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>{</div><div class=\"line\">                    <span class=\"keyword\">var</span> randId = utils.newRandomKey($scope.contacts, <span class=\"string\">&apos;id&apos;</span>, $state.params.contactId);</div><div class=\"line\"></div><div class=\"line\">                    $state.go(<span class=\"string\">&apos;contacts.details&apos;</span>, { contactId: randId });</div><div class=\"line\">                }</div><div class=\"line\">            }</div><div class=\"line\">        ]</div><div class=\"line\">    });</div></pre></td></tr></table></figure>\n<h3 id=\"&#x5D4C;&#x5957;&#x914D;&#x7F6E;-configure\"><a href=\"#&#x5D4C;&#x5957;&#x914D;&#x7F6E;-Configure\" class=\"headerlink\" title=\"&#x5D4C;&#x5957;&#x914D;&#x7F6E; Configure\"></a>&#x5D4C;&#x5957;&#x914D;&#x7F6E; Configure</h3><h5 id=\"parent-router\"><a href=\"#Parent-Router\" class=\"headerlink\" title=\"Parent Router\"></a>Parent Router</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">$stateProvider.</div><div class=\"line\">    .state(<span class=\"string\">&apos;contacts&apos;</span>, {</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// abstract: true &#x8868;&#x660E;&#x6B64;&#x72B6;&#x6001;&#x4E0D;&#x80FD;&#x88AB;&#x663E;&#x6027;&#x6FC0;&#x6D3B;&#xFF0C;&#x53EA;&#x80FD;&#x88AB;&#x5B50;&#x72B6;&#x6001;&#x9690;&#x6027;&#x6FC0;&#x6D3B;</span></div><div class=\"line\">        <span class=\"keyword\">abstract</span>: <span class=\"keyword\">true</span>,</div><div class=\"line\">        url: <span class=\"string\">&apos;/contacts&apos;</span>,</div><div class=\"line\">        templateUrl: <span class=\"string\">&apos;contacts.html&apos;</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// resolve &#x88AB;&#x4F7F;&#x7528;&#x6765;&#x5904;&#x7406;&#x5F02;&#x6B65;&#x6570;&#x636E;&#x8C03;&#x7528;&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; promise -&gt; contacts.all()</span></div><div class=\"line\">        resolve: {</div><div class=\"line\">            contacts: [<span class=\"string\">&apos;contacts&apos;</span>,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(contacts)</span> </span>{</div><div class=\"line\">                    <span class=\"comment\">// &#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x88AB;&#x653E;&#x5728; contacts.service.js &#x4E2D;&#xFF0C;&#x4EE5; factory &#x5B58;&#x5728;</span></div><div class=\"line\">                    <span class=\"keyword\">return</span> contacts.all();</div><div class=\"line\">                }</div><div class=\"line\">            ]</div><div class=\"line\">        },</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// below is a state controller picked from UI-Router official sample</span></div><div class=\"line\">        controller: [<span class=\"string\">&apos;$scope&apos;</span>, <span class=\"string\">&apos;$state&apos;</span>, <span class=\"string\">&apos;contacts&apos;</span>, <span class=\"string\">&apos;utils&apos;</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($scope, $state, contacts, utils)</span> </span>{</div><div class=\"line\">                $scope.contacts = contacts;</div><div class=\"line\"></div><div class=\"line\">                $scope.goToRandom = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>{</div><div class=\"line\">                    <span class=\"keyword\">var</span> randId = utils.newRandomKey($scope.contacts, <span class=\"string\">&apos;id&apos;</span>, $state.params.contactId);</div><div class=\"line\"></div><div class=\"line\">                    $state.go(<span class=\"string\">&apos;contacts.details&apos;</span>, { contactId: randId });</div><div class=\"line\">                }</div><div class=\"line\">            }</div><div class=\"line\">        ]</div><div class=\"line\">    })</div></pre></td></tr></table></figure>\n<h5 id=\"children-router-nested-router\"><a href=\"#Children-Router-Nested-Router\" class=\"headerlink\" title=\"Children Router (Nested Router)\"></a>Children Router (Nested Router)</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$stateProvider</span></div><div class=\"line\">    .state(<span class=\"string\">&apos;contacts.list&apos;</span>, {</div><div class=\"line\">        url: <span class=\"string\">&apos;&apos;</span>,</div><div class=\"line\">        templateUrl: <span class=\"string\">&apos;contacts.list.html&apos;</span></div><div class=\"line\">    })</div><div class=\"line\"></div><div class=\"line\">    .state(<span class=\"string\">&apos;contacts.detail&apos;</span>, {</div><div class=\"line\">        url: <span class=\"string\">&apos;/{contactId:[0-9]{1,4}}&apos;</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"regexp\">//</span> view &#x7528;&#x5728;&#x8BE5;&#x72B6;&#x6001;&#x4E0B;&#x6709;&#x591A;&#x4E2A; ui-view &#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x4E0D;&#x540C;&#x7684; ui-view &#x4F7F;&#x7528;&#x7279;&#x5B9A;&#x7684; template, controller, resolve data</div><div class=\"line\">        <span class=\"regexp\">//</span> &#x7EDD;&#x5BF9; view &#x4F7F;&#x7528; <span class=\"string\">&apos;@&apos;</span> &#x7B26;&#x53F7;&#x6765;&#x533A;&#x522B;&#xFF0C;&#x6BD4;&#x5982; <span class=\"string\">&apos;foo@bar&apos;</span> &#x8868;&#x660E;&#x540D;&#x4E3A; <span class=\"string\">&apos;foo&apos;</span> &#x7684; ui-view &#x4F7F;&#x7528;&#x4E86; <span class=\"string\">&apos;bar&apos;</span> &#x72B6;&#x6001;&#x7684;&#x6A21;&#x677F;(template)&#xFF0C;&#x76F8;&#x5BF9; view &#x5219;&#x65E0;</div><div class=\"line\">        views: {</div><div class=\"line\">            <span class=\"regexp\">//</span> &#x65E0;&#x540D; view</div><div class=\"line\">            <span class=\"string\">&apos;&apos;</span>: {</div><div class=\"line\">                templateUrl: <span class=\"string\">&apos;contacts.detail.html&apos;</span>,</div><div class=\"line\">                controller: [<span class=\"string\">&apos;$scope&apos;</span>, <span class=\"string\">&apos;$stateParams&apos;</span>, <span class=\"string\">&apos;utils&apos;</span>,</div><div class=\"line\">                    <span class=\"keyword\">function</span> (<span class=\"variable\">$scope</span>, <span class=\"variable\">$stateParams</span>, utils) {</div><div class=\"line\">                        <span class=\"variable\">$scope</span>.contact = utils.findById(<span class=\"variable\">$scope</span>.contacts, <span class=\"variable\">$stateParams</span>.contactId);</div><div class=\"line\">                    }</div><div class=\"line\">                ]</div><div class=\"line\">            },</div><div class=\"line\"></div><div class=\"line\">            <span class=\"regexp\">//</span> <span class=\"keyword\">for</span> <span class=\"string\">&quot;ui-view=&apos;hint&apos;&quot;</span></div><div class=\"line\">            <span class=\"string\">&apos;hint@&apos;</span>: {</div><div class=\"line\">                template: <span class=\"string\">&apos;This is contacts.defail populating the &quot;hint&quot; ui-view&apos;</span></div><div class=\"line\">            },</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"regexp\">//</span> <span class=\"keyword\">for</span> <span class=\"string\">&quot;ui-view=&apos;menuTip&apos;&quot;</span></div><div class=\"line\">            <span class=\"string\">&apos;menuTip&apos;</span>: {</div><div class=\"line\">                templateProvider: [<span class=\"string\">&apos;$stateParams&apos;</span>,</div><div class=\"line\">                    <span class=\"keyword\">function</span>(<span class=\"variable\">$stateParams</span>) {</div><div class=\"line\">                        return <span class=\"string\">&apos;&lt;hr&gt;&lt;small class=&quot;muted&quot;&gt;Contact ID: &apos;</span> + <span class=\"variable\">$stateParams</span>.contactId + <span class=\"string\">&apos;&lt;/small&gt;&apos;</span>;</div><div class=\"line\">                    }</div><div class=\"line\">                ]</div><div class=\"line\">            }</div><div class=\"line\">        }</div><div class=\"line\">    })</div></pre></td></tr></table></figure>\n<p>HTML Codes<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>All Contacts<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">ng-repeat</span>=<span class=\"string\">&quot;contact in contacts&quot;</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">&quot;contacts.detail(</span></span><span class=\"template-variable\">{contactId:contact.id}</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)&quot;</span>&gt;</span></span><span class=\"template-variable\">{{contact.name}</span><span class=\"xml\">}<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<hr>\n<h1 id=\"路由-Route\"><a href=\"#路由-Route\" class=\"headerlink\" title=\"路由 Route\"></a>路由 Route</h1><h2 id=\"为什么用-Route\"><a href=\"#为什么用-Route\" class=\"headerlink\" title=\"为什么用 Route\"></a>为什么用 Route</h2><ul>\n<li>AJAX 请求不会留下 History 记录</li>\n<li>用户无法直接通过 URL进入应用中的指定页面(保存书签、链接分享给朋友)</li>\n<li>AJAX 对 SEO 是个灾难</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> bookStoreApp = angular.module(<span class=\"string\">'bookStoreApp'</span>, [</div><div class=\"line\">    <span class=\"string\">'ngRoute'</span>, </div><div class=\"line\">    <span class=\"string\">'ngAnimate'</span>, </div><div class=\"line\">    <span class=\"string\">'bookStoreCtrls'</span>, </div><div class=\"line\">    <span class=\"string\">'bookStoreFilters'</span>,</div><div class=\"line\">    <span class=\"string\">'bookStoreServices'</span>, </div><div class=\"line\">    <span class=\"string\">'bookStoreDirectives'</span></div><div class=\"line\">]);</div><div class=\"line\">bookStoreApp.config(</div><div class=\"line\">    <span class=\"comment\">// 路由机制</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($routeProvider)</span> </span>&#123;</div><div class=\"line\">        $routeProvider.when(<span class=\"string\">'/hello'</span>, &#123;</div><div class=\"line\">            templateUrl: <span class=\"string\">'tpls/hello.html'</span>,</div><div class=\"line\">            controller: <span class=\"string\">'HelloCtrl'</span></div><div class=\"line\">        &#125;).when(<span class=\"string\">'/list/:bookId'</span>, &#123;</div><div class=\"line\">            templateUrl: <span class=\"string\">'tpls/bookList.html'</span>,</div><div class=\"line\">            constoller: <span class=\"string\">'BookListCtrl'</span></div><div class=\"line\">        &#125;).otherwise(&#123;</div><div class=\"line\">            redirectTo: <span class=\"string\">'/hello'</span></div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"嵌套-View-Nested-Routing-for-AngularJS\"><a href=\"#嵌套-View-Nested-Routing-for-AngularJS\" class=\"headerlink\" title=\"嵌套 View (Nested Routing for AngularJS)\"></a>嵌套 View (Nested Routing for AngularJS)</h2><h3 id=\"AngularUI-Router-AngularUI\"><a href=\"#AngularUI-Router-AngularUI\" class=\"headerlink\" title=\"AngularUI-Router AngularUI\"></a>AngularUI-Router AngularUI</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">&lt;div ui-view&gt;</span><span class=\"section\">&lt;/div&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"前端路由的基本原理\"><a href=\"#前端路由的基本原理\" class=\"headerlink\" title=\"前端路由的基本原理\"></a>前端路由的基本原理</h2><ul>\n<li>哈希 #</li>\n<li>HTML5 中新的 history API</li>\n<li>路由的核心是给应用定义 “状态”</li>\n<li>使用路由机制会影响到应用的整体编码方式(需预先定义好状态)</li>\n<li>考虑兼容性问题与 “优雅降级”</li>\n</ul>\n<h2 id=\"Angular-UI-Router\"><a href=\"#Angular-UI-Router\" class=\"headerlink\" title=\"Angular-UI-Router\"></a>Angular-UI-Router</h2><h3 id=\"ui-sref-指令链接到特定状态\"><a href=\"#ui-sref-指令链接到特定状态\" class=\"headerlink\" title=\"ui-sref 指令链接到特定状态\"></a>ui-sref 指令链接到特定状态</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">\"home\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">\"about\"</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">\"contacts.list\"</span>&gt;</span>Contacts<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"state-includes-返回-true-false\"><a href=\"#state-includes-返回-true-false\" class=\"headerlink\" title=\"$state.includes 返回 true / false\"></a>$state.includes 返回 <em>true</em> / <em>false</em></h3><p>以上方法为查看当前状态是否在某父状态内，比如 <em>$state.includes(‘contacts’)</em> 返回 <em>true</em> / <em>false</em></p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- 包含在 /contacts 状态内部，即其作为 parant state --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">ng-class</span>=<span class=\"string\">\"</span></span></span><span class=\"template-variable\">&#123;active: $state.includes('contacts')&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-serif</span>=<span class=\"string\">\"contacts.list\"</span>&gt;</span>Contacts<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"ui-sref-active-查看当前激活状态并设置-Class\"><a href=\"#ui-sref-active-查看当前激活状态并设置-Class\" class=\"headerlink\" title=\"ui-sref-active 查看当前激活状态并设置 Class\"></a>ui-sref-active 查看当前激活状态并设置 <em>Class</em></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li ui-sref-active=<span class=\"string\">\"active\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">\"about\"</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"包含模块\"><a href=\"#包含模块\" class=\"headerlink\" title=\"包含模块\"></a>包含模块</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular<span class=\"selector-class\">.module</span>(<span class=\"string\">'uiRouter'</span>, [<span class=\"string\">'ui.router'</span>]);</div></pre></td></tr></table></figure>\n<h3 id=\"方便获得当前状态的方法，绑到根作用域\"><a href=\"#方便获得当前状态的方法，绑到根作用域\" class=\"headerlink\" title=\"方便获得当前状态的方法，绑到根作用域\"></a>方便获得当前状态的方法，绑到根作用域</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.run([<span class=\"string\">'$rootScope'</span>, <span class=\"string\">'$state'</span>, <span class=\"string\">'$stateParams'</span>,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($rootScope, $state, $stateParams)</span> </span>&#123;</div><div class=\"line\">        $rootScope.$state = $state;</div><div class=\"line\">        $rootScope.$stateParams = $stateParams;</div><div class=\"line\">    &#125;</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h3 id=\"路由重定向-urlRouterProvider\"><a href=\"#路由重定向-urlRouterProvider\" class=\"headerlink\" title=\"路由重定向 $urlRouterProvider\"></a>路由重定向 <em>$urlRouterProvider</em></h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">app</span><span class=\"selector-class\">.config</span>([<span class=\"string\">'$stateProvider'</span>, <span class=\"string\">'$urlRouterProvider'</span>,</div><div class=\"line\">    function($stateProvider, $urlRouterProvider) &#123;</div><div class=\"line\">        $urlRouterProvider</div><div class=\"line\">            <span class=\"comment\">// 错误的路由重定向</span></div><div class=\"line\">            <span class=\"selector-class\">.when</span>(<span class=\"string\">'/c?id'</span>, <span class=\"string\">'/contacts/:id'</span>)</div><div class=\"line\">            <span class=\"selector-class\">.when</span>(<span class=\"string\">'/user/:id'</span>, <span class=\"string\">'/contacts/:id'</span>)</div><div class=\"line\">            <span class=\"selector-class\">.otherwise</span>(<span class=\"string\">'/'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h3 id=\"状态配置\"><a href=\"#状态配置\" class=\"headerlink\" title=\"状态配置\"></a>状态配置</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">$stateProvider.</div><div class=\"line\">    state(<span class=\"string\">'about'</span>, &#123;</div><div class=\"line\">        url: <span class=\"string\">'/about'</span>,</div><div class=\"line\">        template: <span class=\"string\">'&lt;h1&gt;Welcome to UI-Router Demo&lt;/h1&gt;'</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// optional below</span></div><div class=\"line\">        templateProvider: [<span class=\"string\">'$timeout'</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">($timeout)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $timeout(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;p class=\"lead\"&gt;UI-Router Resource&lt;/p&gt;'</span> +</div><div class=\"line\">                            <span class=\"string\">'&lt;p&gt;The second line&lt;/p&gt;'</span></div><div class=\"line\">                &#125;, <span class=\"number\">100</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        ],</div><div class=\"line\"></div><div class=\"line\">        templateUrl: <span class=\"string\">'about.html'</span>,</div><div class=\"line\"></div><div class=\"line\">        templateUrl: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'about.html'</span>;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        controller: <span class=\"string\">'UIRouterCtrl'</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// below is a state controller picked from UI-Router official sample</span></div><div class=\"line\">        controller: [<span class=\"string\">'$scope'</span>, <span class=\"string\">'$state'</span>, <span class=\"string\">'contacts'</span>, <span class=\"string\">'utils'</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($scope, $state, contacts, utils)</span> </span>&#123;</div><div class=\"line\">                $scope.contacts = contacts;</div><div class=\"line\"></div><div class=\"line\">                $scope.goToRandom = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> randId = utils.newRandomKey($scope.contacts, <span class=\"string\">'id'</span>, $state.params.contactId);</div><div class=\"line\"></div><div class=\"line\">                    $state.go(<span class=\"string\">'contacts.details'</span>, &#123; contactId: randId &#125;);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"嵌套配置-Configure\"><a href=\"#嵌套配置-Configure\" class=\"headerlink\" title=\"嵌套配置 Configure\"></a>嵌套配置 Configure</h3><h5 id=\"Parent-Router\"><a href=\"#Parent-Router\" class=\"headerlink\" title=\"Parent Router\"></a>Parent Router</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">$stateProvider.</div><div class=\"line\">    .state(<span class=\"string\">'contacts'</span>, &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// abstract: true 表明此状态不能被显性激活，只能被子状态隐性激活</span></div><div class=\"line\">        <span class=\"keyword\">abstract</span>: <span class=\"keyword\">true</span>,</div><div class=\"line\">        url: <span class=\"string\">'/contacts'</span>,</div><div class=\"line\">        templateUrl: <span class=\"string\">'contacts.html'</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// resolve 被使用来处理异步数据调用，以下是返回一个 promise -&gt; contacts.all()</span></div><div class=\"line\">        resolve: &#123;</div><div class=\"line\">            contacts: [<span class=\"string\">'contacts'</span>,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(contacts)</span> </span>&#123;</div><div class=\"line\">                    <span class=\"comment\">// 以下方法被放在 contacts.service.js 中，以 factory 存在</span></div><div class=\"line\">                    <span class=\"keyword\">return</span> contacts.all();</div><div class=\"line\">                &#125;</div><div class=\"line\">            ]</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// below is a state controller picked from UI-Router official sample</span></div><div class=\"line\">        controller: [<span class=\"string\">'$scope'</span>, <span class=\"string\">'$state'</span>, <span class=\"string\">'contacts'</span>, <span class=\"string\">'utils'</span>,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($scope, $state, contacts, utils)</span> </span>&#123;</div><div class=\"line\">                $scope.contacts = contacts;</div><div class=\"line\"></div><div class=\"line\">                $scope.goToRandom = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> randId = utils.newRandomKey($scope.contacts, <span class=\"string\">'id'</span>, $state.params.contactId);</div><div class=\"line\"></div><div class=\"line\">                    $state.go(<span class=\"string\">'contacts.details'</span>, &#123; contactId: randId &#125;);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure>\n<h5 id=\"Children-Router-Nested-Router\"><a href=\"#Children-Router-Nested-Router\" class=\"headerlink\" title=\"Children Router (Nested Router)\"></a>Children Router (Nested Router)</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$stateProvider</span></div><div class=\"line\">    .state(<span class=\"string\">'contacts.list'</span>, &#123;</div><div class=\"line\">        url: <span class=\"string\">''</span>,</div><div class=\"line\">        templateUrl: <span class=\"string\">'contacts.list.html'</span></div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\">    .state(<span class=\"string\">'contacts.detail'</span>, &#123;</div><div class=\"line\">        url: <span class=\"string\">'/&#123;contactId:[0-9]&#123;1,4&#125;&#125;'</span>,</div><div class=\"line\"></div><div class=\"line\">        <span class=\"regexp\">//</span> view 用在该状态下有多个 ui-view 的情况，可以对不同的 ui-view 使用特定的 template, controller, resolve data</div><div class=\"line\">        <span class=\"regexp\">//</span> 绝对 view 使用 <span class=\"string\">'@'</span> 符号来区别，比如 <span class=\"string\">'foo@bar'</span> 表明名为 <span class=\"string\">'foo'</span> 的 ui-view 使用了 <span class=\"string\">'bar'</span> 状态的模板(template)，相对 view 则无</div><div class=\"line\">        views: &#123;</div><div class=\"line\">            <span class=\"regexp\">//</span> 无名 view</div><div class=\"line\">            <span class=\"string\">''</span>: &#123;</div><div class=\"line\">                templateUrl: <span class=\"string\">'contacts.detail.html'</span>,</div><div class=\"line\">                controller: [<span class=\"string\">'$scope'</span>, <span class=\"string\">'$stateParams'</span>, <span class=\"string\">'utils'</span>,</div><div class=\"line\">                    <span class=\"keyword\">function</span> (<span class=\"variable\">$scope</span>, <span class=\"variable\">$stateParams</span>, utils) &#123;</div><div class=\"line\">                        <span class=\"variable\">$scope</span>.contact = utils.findById(<span class=\"variable\">$scope</span>.contacts, <span class=\"variable\">$stateParams</span>.contactId);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                ]</div><div class=\"line\">            &#125;,</div><div class=\"line\"></div><div class=\"line\">            <span class=\"regexp\">//</span> <span class=\"keyword\">for</span> <span class=\"string\">\"ui-view='hint'\"</span></div><div class=\"line\">            <span class=\"string\">'hint@'</span>: &#123;</div><div class=\"line\">                template: <span class=\"string\">'This is contacts.defail populating the \"hint\" ui-view'</span></div><div class=\"line\">            &#125;,</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"regexp\">//</span> <span class=\"keyword\">for</span> <span class=\"string\">\"ui-view='menuTip'\"</span></div><div class=\"line\">            <span class=\"string\">'menuTip'</span>: &#123;</div><div class=\"line\">                templateProvider: [<span class=\"string\">'$stateParams'</span>,</div><div class=\"line\">                    <span class=\"keyword\">function</span>(<span class=\"variable\">$stateParams</span>) &#123;</div><div class=\"line\">                        return <span class=\"string\">'&lt;hr&gt;&lt;small class=\"muted\"&gt;Contact ID: '</span> + <span class=\"variable\">$stateParams</span>.contactId + <span class=\"string\">'&lt;/small&gt;'</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                ]</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure>\n<p>HTML Codes<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>All Contacts<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">ng-repeat</span>=<span class=\"string\">\"contact in contacts\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">ui-sref</span>=<span class=\"string\">\"contacts.detail(</span></span></span><span class=\"template-variable\">&#123;contactId:contact.id&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)\"</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;contact.name&#125;</span><span class=\"xml\">&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n"},{"title":"使用hexo搭建属于自己的博客","date":"2015-11-24T16:00:00.000Z","modifiedOn":"2015-11-24T16:00:00.000Z","_content":"\n------\n\n在搭建这个博客期间参考了很多资料，因为不是所有的资料都能完整并且顺利搭建出来，经过我本人实践，整理出来这篇文章，希望可以帮助大家减少不必要的麻烦，不用再到处找搭建方法，本文的共分为一下几章：\n\n> 第一节： 什么是hexo\n第二节： 为什么要用hexo\n第三节： 谁使用hexo\n第四节： 怎样搭建hexo博客\n第五节： 如何更换自己的主题\n第六节： 如何发表文章\n\n\n----------\n\n \n\n第一节：什么是hexo\n-----------\n\n hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，hexo：\n>快速、简单且功能强大的 Node.js 博客框架。\nA fast, simple & powerful blog framework, powered by Node.js.\n类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。\n\n类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。\n\n----------\n\n第二节：为什么要用hexo\n-------------\n\n还是引用作者的话：\n>不可思议的快速 ─ 只要一眨眼静态文件即生成完成\n支持 Markdown\n仅需一道指令即可部署到 GitHub Pages 和 Heroku\n已移植 Octopress 插件\n高扩展性、自订性\n兼容于 Windows, Mac & Linux\n\n我在加几个自己体会到的优点：\n\n - 易用：不仅部署简单，平时使用中仅需要hexo new hexo generate hexo server hexo deploy四个命令。不像Jekyll需要很多繁琐的git命令。\n - 轻：文件少、小，易理解，方便自定义。\n - 用户多：虽然赶不上Jekyll和Octopress，但遇到什么问题都能搜索到答案，或者找到同样使用hexo的用户进行参考和咨询。\n - 简单：我本人不太爱倒腾这东西，但是当我看到本博客的模板后，在看完教程后，都停不下来，用了一晚上就搭起来了\n - 省时：不必浪费时间在你不关注的东西上，专心写你的博客\n \n\n\n----------\n\n\n第三节：谁使用hexo\n-----------\n\n这是一个免费开源的博客程序，任何人都可以使用和修改。但是不同于wordpress，hexo由于需要使用**Github,Git,Markdown,Node.js**这样的工具，好多插件、widget都需要自己安装、设置。所以**适合那些有一定计算机基础，喜欢折腾的人**。\n\n----------\n\n第四节：怎样搭建hexo博客\n--------------\n>*注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo安装*。\n\n----------\n\n***安装Git***\n\n\n>下载 [msysgit][1] 并执行即可完成安装。\n\n----------\n***安装Node.js***\n\n\n>在Windows环境下安装[Node.js][2]非常简单，仅须下载安装文件并执行即可完成安装。\n\n----------\n\n***设置软件包国内镜像***\n\n    npm config set registry http://registry.npm.taobao.org\n\n----------\n***安装hexo***\n\n    npm install -g hexo\n\n----------\n***创建hexo文件夹***\n安装完成后，在你喜爱的文件夹下（如F:\\hexo），执行以下指令(在F:\\hexo内点击鼠标右键，选择Git bash)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。\n\n    hexo init\n\n执行完这一步后，你会发现文件夹下生成了一些文件和文件夹，用文本编辑器打开package.json文件，将里面的内容改为以下内容：\n\n    {\n      \"name\": \"hexo-site\",\n      \"version\": \"0.0.0\",\n      \"private\": true,\n      \"hexo\": {\n        \"version\": \"3.1.1\"\n      },\n      \"dependencies\": {\n        \"hexo\": \"^3.1.0\",\n        \"hexo-deployer-git\": \"0.0.4\",\n        \"hexo-deployer-heroku\": \"0.0.3\",\n        \"hexo-deployer-openshift\": \"0.0.1\",\n        \"hexo-deployer-rsync\": \"^0.1.1\",\n        \"hexo-generator-archive\": \"^0.1.3\",\n        \"hexo-generator-category\": \"^0.1.3\",\n        \"hexo-generator-feed\": \"^1.0.3\",\n        \"hexo-generator-index\": \"^0.1.3\",\n        \"hexo-generator-sitemap\": \"^1.0.1\",\n        \"hexo-generator-tag\": \"^0.1.2\",\n        \"hexo-renderer-ejs\": \"^0.1.0\",\n        \"hexo-renderer-marked\": \"^0.2.5\",\n        \"hexo-renderer-stylus\": \"^0.2.3\",\n        \"hexo-server\": \"^0.1.2\"\n      }\n    }\n\n----------\n***安装依赖包***\n\n    npm install\n\n----------\n\n***本地查看***\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在F:\\hexo)，然后到浏览器输入localhost:4000看看。\n\n    hexo generate\n    hexo server\n\n----------\n***注册Github账号***\n\n> 已有账号可以跳过，没有的，请在[此处][3]进行注册，很简单，这里就不介绍了。\n\n----------\n***创建repository***\n\n> 在自己Github主页右下角，创建一个新的repository。比如我的Github账号是ronghuaxueleng，那么我应该创建的repository名字应该是[ronghuaxueleng.github.io][4]\n\n![](/img/github_build.png)\n![](/img/github_created.png)\n\n----------\n***部署***\n\n编辑_config.yml(在F:\\hexo下)。你在部署时，要把下面的nothingcpd都换成你的账号名。\n\n    deploy:\n      type: git\n      repository: http://github.com/ronghuaxueleng/ronghuaxueleng.github.io.git\n      branch: master\n      ##注意：\"：\"后边需要有一个\"空格\"\n\n***执行下列指令即可完成部署。***\n\n    hexo generate\n    hexo deploy\n    \n----------\n\n第五节：如何更换自己的主题\n-------------\n\n***使用***\n\n 1. 安装\n\n> 在hexo主目录下\n$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\n2.配置\n\n> 修改hexo根目录下_config.yml ：\ntheme: yilia\n\n3.更新\n\n    cd themes/yilia\n    git pull\n\n----------\n***配置***\n主题配置文件在主题目录yalia下的_config.yml：\n\n    # Header\n    menu:\n      主页: /\n      所有文章: /archives\n      # 随笔: /tags/随笔\n    \n    # SubNav\n    subnav:\n      github: \"#\"\n      weibo: \"#\"\n      rss: \"#\"\n      facebook: \"#\"\n      # google: \"#\"\n      # twitter: \"#\"\n      # linkedin: \"#\"\n\n    rss: /atom.xml\n    \n    # Content\n    excerpt_link: more\n    fancybox: true\n    \n    # Miscellaneous\n    google_analytics: ''\n    favicon: /favicon.png\n\n    #你的头像\n    avatar: \"https://avatars2.githubusercontent.com/u/2024949?v=2&s=150\"\n    #是否开启分享\n    share: true\n    #是否开启多说评论，填写你在多说申请的项目名称\n    duoshuo: true\n    #是否开启云标签\n    tagcloud: true\n\n    #是否开启友情链接\n    #不开启——\n    #friends: false\n    #开启——\n    friends:\n      奥巴马的博客: http://localhost:4000/\n      卡卡的美丽传说: http://localhost:4000/\n      本泽马的博客: http://localhost:4000/\n      吉格斯的博客: http://localhost:4000/\n      习大大大不同: http://localhost:4000/\n      托蒂的博客: http://localhost:4000/\n    \n    #是否开启“关于我”。\n    #不开启——\n    #aboutme: false\n    #开启——\n    aboutme: 我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…\n\n----------\n***体验***\n\n    hexo generate\n    hexo server\n\n最后在浏览器中输入：localhost:4000 查看主题效果\n\n    hexo generate\n    hexo deploy\n    \n    最后在浏览器中输入： ronghuaxueleng.github.com \n    ps：ronghuaxueleng换成你自己的repo名字，查看效果\n    \n----------\n这里有hexo的各种主题，喜欢折腾的可以去看看\n\n    https://hexo.io/themes/\n\n\n第六节：如何发表文章\n----------\n\n> **1. step1：输入 hexo new \"my first post\"**\nps:引号可以不加，最好不加，此时 查看source/_posts/下面会产生post.md的文件，此文件需要用markdown语言编辑，后面会有一篇专门介绍markdown语法的blog\n以后每次运行上面的命令都会产生文件，会产生post1-1.md，post-2.md等依次增加\n\n>**step2: 在F:\\hexo\\source_posts中打开这个文件（打开方式用“记事本”即可）, 然后将下面内容 拷贝到里面**\n>\n     layout: post\n     title: \"我的博客情缘\"\n     date: 2014-12-17 13:15\n     comments: true\n     tags: \n        - 随笔\n        - 心情\n        - 个人\n    ---\n\n>**step3: 输入 hexo server**\n访问localhost:4000预览效果。（退出server用Ctrl+c）\n\n>**step4: 输入 hexo deploy**\n同步到github。访问网站看看效果。ronghuaxueleng.github.io(ronghuaxueleng换成你自己的repo)\n\n现在为止，我们已经搭建起博客，进行一些基本配置，设置了主题，并学会了怎么发表文章。\n\n\n  [1]: http://git-scm.com/download/win\n  [2]: https://nodejs.org/en/\n  [3]: https://github.com/\n  [4]: http://ronghuaxueleng.github.io","source":"_posts/build-first-blog.md","raw":"---\ntitle: 使用hexo搭建属于自己的博客\ncategory: hexo\ntags: hexo,博客,blog,搭建\ndate: 2015-11-25\nmodifiedOn: 2015-11-25\n---\n\n------\n\n在搭建这个博客期间参考了很多资料，因为不是所有的资料都能完整并且顺利搭建出来，经过我本人实践，整理出来这篇文章，希望可以帮助大家减少不必要的麻烦，不用再到处找搭建方法，本文的共分为一下几章：\n\n> 第一节： 什么是hexo\n第二节： 为什么要用hexo\n第三节： 谁使用hexo\n第四节： 怎样搭建hexo博客\n第五节： 如何更换自己的主题\n第六节： 如何发表文章\n\n\n----------\n\n \n\n第一节：什么是hexo\n-----------\n\n hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，hexo：\n>快速、简单且功能强大的 Node.js 博客框架。\nA fast, simple & powerful blog framework, powered by Node.js.\n类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。\n\n类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。\n\n----------\n\n第二节：为什么要用hexo\n-------------\n\n还是引用作者的话：\n>不可思议的快速 ─ 只要一眨眼静态文件即生成完成\n支持 Markdown\n仅需一道指令即可部署到 GitHub Pages 和 Heroku\n已移植 Octopress 插件\n高扩展性、自订性\n兼容于 Windows, Mac & Linux\n\n我在加几个自己体会到的优点：\n\n - 易用：不仅部署简单，平时使用中仅需要hexo new hexo generate hexo server hexo deploy四个命令。不像Jekyll需要很多繁琐的git命令。\n - 轻：文件少、小，易理解，方便自定义。\n - 用户多：虽然赶不上Jekyll和Octopress，但遇到什么问题都能搜索到答案，或者找到同样使用hexo的用户进行参考和咨询。\n - 简单：我本人不太爱倒腾这东西，但是当我看到本博客的模板后，在看完教程后，都停不下来，用了一晚上就搭起来了\n - 省时：不必浪费时间在你不关注的东西上，专心写你的博客\n \n\n\n----------\n\n\n第三节：谁使用hexo\n-----------\n\n这是一个免费开源的博客程序，任何人都可以使用和修改。但是不同于wordpress，hexo由于需要使用**Github,Git,Markdown,Node.js**这样的工具，好多插件、widget都需要自己安装、设置。所以**适合那些有一定计算机基础，喜欢折腾的人**。\n\n----------\n\n第四节：怎样搭建hexo博客\n--------------\n>*注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo安装*。\n\n----------\n\n***安装Git***\n\n\n>下载 [msysgit][1] 并执行即可完成安装。\n\n----------\n***安装Node.js***\n\n\n>在Windows环境下安装[Node.js][2]非常简单，仅须下载安装文件并执行即可完成安装。\n\n----------\n\n***设置软件包国内镜像***\n\n    npm config set registry http://registry.npm.taobao.org\n\n----------\n***安装hexo***\n\n    npm install -g hexo\n\n----------\n***创建hexo文件夹***\n安装完成后，在你喜爱的文件夹下（如F:\\hexo），执行以下指令(在F:\\hexo内点击鼠标右键，选择Git bash)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。\n\n    hexo init\n\n执行完这一步后，你会发现文件夹下生成了一些文件和文件夹，用文本编辑器打开package.json文件，将里面的内容改为以下内容：\n\n    {\n      \"name\": \"hexo-site\",\n      \"version\": \"0.0.0\",\n      \"private\": true,\n      \"hexo\": {\n        \"version\": \"3.1.1\"\n      },\n      \"dependencies\": {\n        \"hexo\": \"^3.1.0\",\n        \"hexo-deployer-git\": \"0.0.4\",\n        \"hexo-deployer-heroku\": \"0.0.3\",\n        \"hexo-deployer-openshift\": \"0.0.1\",\n        \"hexo-deployer-rsync\": \"^0.1.1\",\n        \"hexo-generator-archive\": \"^0.1.3\",\n        \"hexo-generator-category\": \"^0.1.3\",\n        \"hexo-generator-feed\": \"^1.0.3\",\n        \"hexo-generator-index\": \"^0.1.3\",\n        \"hexo-generator-sitemap\": \"^1.0.1\",\n        \"hexo-generator-tag\": \"^0.1.2\",\n        \"hexo-renderer-ejs\": \"^0.1.0\",\n        \"hexo-renderer-marked\": \"^0.2.5\",\n        \"hexo-renderer-stylus\": \"^0.2.3\",\n        \"hexo-server\": \"^0.1.2\"\n      }\n    }\n\n----------\n***安装依赖包***\n\n    npm install\n\n----------\n\n***本地查看***\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在F:\\hexo)，然后到浏览器输入localhost:4000看看。\n\n    hexo generate\n    hexo server\n\n----------\n***注册Github账号***\n\n> 已有账号可以跳过，没有的，请在[此处][3]进行注册，很简单，这里就不介绍了。\n\n----------\n***创建repository***\n\n> 在自己Github主页右下角，创建一个新的repository。比如我的Github账号是ronghuaxueleng，那么我应该创建的repository名字应该是[ronghuaxueleng.github.io][4]\n\n![](/img/github_build.png)\n![](/img/github_created.png)\n\n----------\n***部署***\n\n编辑_config.yml(在F:\\hexo下)。你在部署时，要把下面的nothingcpd都换成你的账号名。\n\n    deploy:\n      type: git\n      repository: http://github.com/ronghuaxueleng/ronghuaxueleng.github.io.git\n      branch: master\n      ##注意：\"：\"后边需要有一个\"空格\"\n\n***执行下列指令即可完成部署。***\n\n    hexo generate\n    hexo deploy\n    \n----------\n\n第五节：如何更换自己的主题\n-------------\n\n***使用***\n\n 1. 安装\n\n> 在hexo主目录下\n$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\n2.配置\n\n> 修改hexo根目录下_config.yml ：\ntheme: yilia\n\n3.更新\n\n    cd themes/yilia\n    git pull\n\n----------\n***配置***\n主题配置文件在主题目录yalia下的_config.yml：\n\n    # Header\n    menu:\n      主页: /\n      所有文章: /archives\n      # 随笔: /tags/随笔\n    \n    # SubNav\n    subnav:\n      github: \"#\"\n      weibo: \"#\"\n      rss: \"#\"\n      facebook: \"#\"\n      # google: \"#\"\n      # twitter: \"#\"\n      # linkedin: \"#\"\n\n    rss: /atom.xml\n    \n    # Content\n    excerpt_link: more\n    fancybox: true\n    \n    # Miscellaneous\n    google_analytics: ''\n    favicon: /favicon.png\n\n    #你的头像\n    avatar: \"https://avatars2.githubusercontent.com/u/2024949?v=2&s=150\"\n    #是否开启分享\n    share: true\n    #是否开启多说评论，填写你在多说申请的项目名称\n    duoshuo: true\n    #是否开启云标签\n    tagcloud: true\n\n    #是否开启友情链接\n    #不开启——\n    #friends: false\n    #开启——\n    friends:\n      奥巴马的博客: http://localhost:4000/\n      卡卡的美丽传说: http://localhost:4000/\n      本泽马的博客: http://localhost:4000/\n      吉格斯的博客: http://localhost:4000/\n      习大大大不同: http://localhost:4000/\n      托蒂的博客: http://localhost:4000/\n    \n    #是否开启“关于我”。\n    #不开启——\n    #aboutme: false\n    #开启——\n    aboutme: 我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…\n\n----------\n***体验***\n\n    hexo generate\n    hexo server\n\n最后在浏览器中输入：localhost:4000 查看主题效果\n\n    hexo generate\n    hexo deploy\n    \n    最后在浏览器中输入： ronghuaxueleng.github.com \n    ps：ronghuaxueleng换成你自己的repo名字，查看效果\n    \n----------\n这里有hexo的各种主题，喜欢折腾的可以去看看\n\n    https://hexo.io/themes/\n\n\n第六节：如何发表文章\n----------\n\n> **1. step1：输入 hexo new \"my first post\"**\nps:引号可以不加，最好不加，此时 查看source/_posts/下面会产生post.md的文件，此文件需要用markdown语言编辑，后面会有一篇专门介绍markdown语法的blog\n以后每次运行上面的命令都会产生文件，会产生post1-1.md，post-2.md等依次增加\n\n>**step2: 在F:\\hexo\\source_posts中打开这个文件（打开方式用“记事本”即可）, 然后将下面内容 拷贝到里面**\n>\n     layout: post\n     title: \"我的博客情缘\"\n     date: 2014-12-17 13:15\n     comments: true\n     tags: \n        - 随笔\n        - 心情\n        - 个人\n    ---\n\n>**step3: 输入 hexo server**\n访问localhost:4000预览效果。（退出server用Ctrl+c）\n\n>**step4: 输入 hexo deploy**\n同步到github。访问网站看看效果。ronghuaxueleng.github.io(ronghuaxueleng换成你自己的repo)\n\n现在为止，我们已经搭建起博客，进行一些基本配置，设置了主题，并学会了怎么发表文章。\n\n\n  [1]: http://git-scm.com/download/win\n  [2]: https://nodejs.org/en/\n  [3]: https://github.com/\n  [4]: http://ronghuaxueleng.github.io","slug":"build-first-blog","published":1,"updated":"2016-08-21T12:31:53.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7ug00021ov6i6tawigp","content":"<hr>\n<p>&#x5728;&#x642D;&#x5EFA;&#x8FD9;&#x4E2A;&#x535A;&#x5BA2;&#x671F;&#x95F4;&#x53C2;&#x8003;&#x4E86;&#x5F88;&#x591A;&#x8D44;&#x6599;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x8D44;&#x6599;&#x90FD;&#x80FD;&#x5B8C;&#x6574;&#x5E76;&#x4E14;&#x987A;&#x5229;&#x642D;&#x5EFA;&#x51FA;&#x6765;&#xFF0C;&#x7ECF;&#x8FC7;&#x6211;&#x672C;&#x4EBA;&#x5B9E;&#x8DF5;&#xFF0C;&#x6574;&#x7406;&#x51FA;&#x6765;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x5927;&#x5BB6;&#x51CF;&#x5C11;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x9EBB;&#x70E6;&#xFF0C;&#x4E0D;&#x7528;&#x518D;&#x5230;&#x5904;&#x627E;&#x642D;&#x5EFA;&#x65B9;&#x6CD5;&#xFF0C;&#x672C;&#x6587;&#x7684;&#x5171;&#x5206;&#x4E3A;&#x4E00;&#x4E0B;&#x51E0;&#x7AE0;&#xFF1A;</p>\n<blockquote>\n<p>&#x7B2C;&#x4E00;&#x8282;&#xFF1A; &#x4EC0;&#x4E48;&#x662F;hexo<br>&#x7B2C;&#x4E8C;&#x8282;&#xFF1A; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;hexo<br>&#x7B2C;&#x4E09;&#x8282;&#xFF1A; &#x8C01;&#x4F7F;&#x7528;hexo<br>&#x7B2C;&#x56DB;&#x8282;&#xFF1A; &#x600E;&#x6837;&#x642D;&#x5EFA;hexo&#x535A;&#x5BA2;<br>&#x7B2C;&#x4E94;&#x8282;&#xFF1A; &#x5982;&#x4F55;&#x66F4;&#x6362;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x9898;<br>&#x7B2C;&#x516D;&#x8282;&#xFF1A; &#x5982;&#x4F55;&#x53D1;&#x8868;&#x6587;&#x7AE0;</p>\n</blockquote>\n<hr>\n<h2 id=\"&#x7B2C;&#x4E00;&#x8282;&#x4EC0;&#x4E48;&#x662F;hexo\"><a href=\"#&#x7B2C;&#x4E00;&#x8282;&#xFF1A;&#x4EC0;&#x4E48;&#x662F;hexo\" class=\"headerlink\" title=\"&#x7B2C;&#x4E00;&#x8282;&#xFF1A;&#x4EC0;&#x4E48;&#x662F;hexo\"></a>&#x7B2C;&#x4E00;&#x8282;&#xFF1A;&#x4EC0;&#x4E48;&#x662F;hexo</h2><p> hexo&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;Node.js&#x7684;&#x9759;&#x6001;&#x535A;&#x5BA2;&#x7A0B;&#x5E8F;&#xFF0C;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x751F;&#x6210;&#x9759;&#x6001;&#x7F51;&#x9875;&#x6258;&#x7BA1;&#x5728;github&#x548C;Heroku&#x4E0A;&#x3002;&#x4F5C;&#x8005;&#x662F;&#x6765;&#x81EA;&#x53F0;&#x6E7E;&#x7684;@tommy351&#x3002;&#x5F15;&#x7528;@tommy351&#x7684;&#x8BDD;&#xFF0C;hexo&#xFF1A;</p>\n<blockquote>\n<p>&#x5FEB;&#x901F;&#x3001;&#x7B80;&#x5355;&#x4E14;&#x529F;&#x80FD;&#x5F3A;&#x5927;&#x7684; Node.js &#x535A;&#x5BA2;&#x6846;&#x67B6;&#x3002;<br>A fast, simple &amp; powerful blog framework, powered by Node.js.<br>&#x7C7B;&#x4F3C;&#x4E8E;jekyll&#x3001;Octopress&#x3001;Wordpress&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;hexo&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x6258;&#x7BA1;&#x5230;github&#x6216;Heroku&#x4E0A;&#xFF0C;&#x7ED1;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x7528;markdown&#x5199;&#x6587;&#x7AE0;&#x3002;&#x672C;&#x535A;&#x5BA2;&#x5373;&#x4F7F;&#x7528;hexo&#x521B;&#x5EFA;&#x5E76;&#x6258;&#x7BA1;&#x5728;github&#x4E0A;&#x3002;</p>\n</blockquote>\n<p>&#x7C7B;&#x4F3C;&#x4E8E;jekyll&#x3001;Octopress&#x3001;Wordpress&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;hexo&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x6258;&#x7BA1;&#x5230;github&#x6216;Heroku&#x4E0A;&#xFF0C;&#x7ED1;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x7528;markdown&#x5199;&#x6587;&#x7AE0;&#x3002;</p>\n<hr>\n<h2 id=\"&#x7B2C;&#x4E8C;&#x8282;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;hexo\"><a href=\"#&#x7B2C;&#x4E8C;&#x8282;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;hexo\" class=\"headerlink\" title=\"&#x7B2C;&#x4E8C;&#x8282;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;hexo\"></a>&#x7B2C;&#x4E8C;&#x8282;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;hexo</h2><p>&#x8FD8;&#x662F;&#x5F15;&#x7528;&#x4F5C;&#x8005;&#x7684;&#x8BDD;&#xFF1A;</p>\n<blockquote>\n<p>&#x4E0D;&#x53EF;&#x601D;&#x8BAE;&#x7684;&#x5FEB;&#x901F; &#x2500; &#x53EA;&#x8981;&#x4E00;&#x7728;&#x773C;&#x9759;&#x6001;&#x6587;&#x4EF6;&#x5373;&#x751F;&#x6210;&#x5B8C;&#x6210;<br>&#x652F;&#x6301; Markdown<br>&#x4EC5;&#x9700;&#x4E00;&#x9053;&#x6307;&#x4EE4;&#x5373;&#x53EF;&#x90E8;&#x7F72;&#x5230; GitHub Pages &#x548C; Heroku<br>&#x5DF2;&#x79FB;&#x690D; Octopress &#x63D2;&#x4EF6;<br>&#x9AD8;&#x6269;&#x5C55;&#x6027;&#x3001;&#x81EA;&#x8BA2;&#x6027;<br>&#x517C;&#x5BB9;&#x4E8E; Windows, Mac &amp; Linux</p>\n</blockquote>\n<p>&#x6211;&#x5728;&#x52A0;&#x51E0;&#x4E2A;&#x81EA;&#x5DF1;&#x4F53;&#x4F1A;&#x5230;&#x7684;&#x4F18;&#x70B9;&#xFF1A;</p>\n<ul>\n<li>&#x6613;&#x7528;&#xFF1A;&#x4E0D;&#x4EC5;&#x90E8;&#x7F72;&#x7B80;&#x5355;&#xFF0C;&#x5E73;&#x65F6;&#x4F7F;&#x7528;&#x4E2D;&#x4EC5;&#x9700;&#x8981;hexo new hexo generate hexo server hexo deploy&#x56DB;&#x4E2A;&#x547D;&#x4EE4;&#x3002;&#x4E0D;&#x50CF;Jekyll&#x9700;&#x8981;&#x5F88;&#x591A;&#x7E41;&#x7410;&#x7684;git&#x547D;&#x4EE4;&#x3002;</li>\n<li>&#x8F7B;&#xFF1A;&#x6587;&#x4EF6;&#x5C11;&#x3001;&#x5C0F;&#xFF0C;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x65B9;&#x4FBF;&#x81EA;&#x5B9A;&#x4E49;&#x3002;</li>\n<li>&#x7528;&#x6237;&#x591A;&#xFF1A;&#x867D;&#x7136;&#x8D76;&#x4E0D;&#x4E0A;Jekyll&#x548C;Octopress&#xFF0C;&#x4F46;&#x9047;&#x5230;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x90FD;&#x80FD;&#x641C;&#x7D22;&#x5230;&#x7B54;&#x6848;&#xFF0C;&#x6216;&#x8005;&#x627E;&#x5230;&#x540C;&#x6837;&#x4F7F;&#x7528;hexo&#x7684;&#x7528;&#x6237;&#x8FDB;&#x884C;&#x53C2;&#x8003;&#x548C;&#x54A8;&#x8BE2;&#x3002;</li>\n<li>&#x7B80;&#x5355;&#xFF1A;&#x6211;&#x672C;&#x4EBA;&#x4E0D;&#x592A;&#x7231;&#x5012;&#x817E;&#x8FD9;&#x4E1C;&#x897F;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x6211;&#x770B;&#x5230;&#x672C;&#x535A;&#x5BA2;&#x7684;&#x6A21;&#x677F;&#x540E;&#xFF0C;&#x5728;&#x770B;&#x5B8C;&#x6559;&#x7A0B;&#x540E;&#xFF0C;&#x90FD;&#x505C;&#x4E0D;&#x4E0B;&#x6765;&#xFF0C;&#x7528;&#x4E86;&#x4E00;&#x665A;&#x4E0A;&#x5C31;&#x642D;&#x8D77;&#x6765;&#x4E86;</li>\n<li>&#x7701;&#x65F6;&#xFF1A;&#x4E0D;&#x5FC5;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#x5728;&#x4F60;&#x4E0D;&#x5173;&#x6CE8;&#x7684;&#x4E1C;&#x897F;&#x4E0A;&#xFF0C;&#x4E13;&#x5FC3;&#x5199;&#x4F60;&#x7684;&#x535A;&#x5BA2;</li>\n</ul>\n<hr>\n<h2 id=\"&#x7B2C;&#x4E09;&#x8282;&#x8C01;&#x4F7F;&#x7528;hexo\"><a href=\"#&#x7B2C;&#x4E09;&#x8282;&#xFF1A;&#x8C01;&#x4F7F;&#x7528;hexo\" class=\"headerlink\" title=\"&#x7B2C;&#x4E09;&#x8282;&#xFF1A;&#x8C01;&#x4F7F;&#x7528;hexo\"></a>&#x7B2C;&#x4E09;&#x8282;&#xFF1A;&#x8C01;&#x4F7F;&#x7528;hexo</h2><p>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x514D;&#x8D39;&#x5F00;&#x6E90;&#x7684;&#x535A;&#x5BA2;&#x7A0B;&#x5E8F;&#xFF0C;&#x4EFB;&#x4F55;&#x4EBA;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x548C;&#x4FEE;&#x6539;&#x3002;&#x4F46;&#x662F;&#x4E0D;&#x540C;&#x4E8E;wordpress&#xFF0C;hexo&#x7531;&#x4E8E;&#x9700;&#x8981;&#x4F7F;&#x7528;<strong>Github,Git,Markdown,Node.js</strong>&#x8FD9;&#x6837;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x597D;&#x591A;&#x63D2;&#x4EF6;&#x3001;widget&#x90FD;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5B89;&#x88C5;&#x3001;&#x8BBE;&#x7F6E;&#x3002;&#x6240;&#x4EE5;<strong>&#x9002;&#x5408;&#x90A3;&#x4E9B;&#x6709;&#x4E00;&#x5B9A;&#x8BA1;&#x7B97;&#x673A;&#x57FA;&#x7840;&#xFF0C;&#x559C;&#x6B22;&#x6298;&#x817E;&#x7684;&#x4EBA;</strong>&#x3002;</p>\n<hr>\n<h2 id=\"&#x7B2C;&#x56DB;&#x8282;&#x600E;&#x6837;&#x642D;&#x5EFA;hexo&#x535A;&#x5BA2;\"><a href=\"#&#x7B2C;&#x56DB;&#x8282;&#xFF1A;&#x600E;&#x6837;&#x642D;&#x5EFA;hexo&#x535A;&#x5BA2;\" class=\"headerlink\" title=\"&#x7B2C;&#x56DB;&#x8282;&#xFF1A;&#x600E;&#x6837;&#x642D;&#x5EFA;hexo&#x535A;&#x5BA2;\"></a>&#x7B2C;&#x56DB;&#x8282;&#xFF1A;&#x600E;&#x6837;&#x642D;&#x5EFA;hexo&#x535A;&#x5BA2;</h2><blockquote>\n<p><em>&#x6CE8;&#x610F;&#xFF1A;&#x672C;&#x8282;&#x6559;&#x7A0B;&#x53EA;&#x9488;&#x5BF9;Windows&#x7528;&#x6237;&#xFF0C;Linux&#x548C;Mac&#x7528;&#x6237;&#x8BF7;&#x79FB;&#x6B65;hexo&#x5B89;&#x88C5;</em>&#x3002;</p>\n</blockquote>\n<hr>\n<p><strong><em>&#x5B89;&#x88C5;Git</em></strong></p>\n<blockquote>\n<p>&#x4E0B;&#x8F7D; <a href=\"http://git-scm.com/download/win\" target=\"_blank\" rel=\"external\">msysgit</a> &#x5E76;&#x6267;&#x884C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002;</p>\n</blockquote>\n<hr>\n<p><strong><em>&#x5B89;&#x88C5;Node.js</em></strong></p>\n<blockquote>\n<p>&#x5728;Windows&#x73AF;&#x5883;&#x4E0B;&#x5B89;&#x88C5;<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a>&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x4EC5;&#x987B;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x6587;&#x4EF6;&#x5E76;&#x6267;&#x884C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002;</p>\n</blockquote>\n<hr>\n<p><strong><em>&#x8BBE;&#x7F6E;&#x8F6F;&#x4EF6;&#x5305;&#x56FD;&#x5185;&#x955C;&#x50CF;</em></strong></p>\n<pre><code>npm config set registry http://registry.npm.taobao.org\n</code></pre><hr>\n<p><strong><em>&#x5B89;&#x88C5;hexo</em></strong></p>\n<pre><code>npm install -g hexo\n</code></pre><hr>\n<p><strong><em>&#x521B;&#x5EFA;hexo&#x6587;&#x4EF6;&#x5939;</em></strong><br>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5728;&#x4F60;&#x559C;&#x7231;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF08;&#x5982;F:\\hexo&#xFF09;&#xFF0C;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x6307;&#x4EE4;(&#x5728;F:\\hexo&#x5185;&#x70B9;&#x51FB;&#x9F20;&#x6807;&#x53F3;&#x952E;&#xFF0C;&#x9009;&#x62E9;Git bash)&#xFF0C;Hexo&#x5373;&#x4F1A;&#x81EA;&#x52A8;&#x5728;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x5939;&#x5EFA;&#x7ACB;&#x7F51;&#x7AD9;&#x6240;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x3002;</p>\n<pre><code>hexo init\n</code></pre><p>&#x6267;&#x884C;&#x5B8C;&#x8FD9;&#x4E00;&#x6B65;&#x540E;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x548C;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x7528;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x6253;&#x5F00;package.json&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x6539;&#x4E3A;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;</p>\n<pre><code>{\n  &quot;name&quot;: &quot;hexo-site&quot;,\n  &quot;version&quot;: &quot;0.0.0&quot;,\n  &quot;private&quot;: true,\n  &quot;hexo&quot;: {\n    &quot;version&quot;: &quot;3.1.1&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;hexo&quot;: &quot;^3.1.0&quot;,\n    &quot;hexo-deployer-git&quot;: &quot;0.0.4&quot;,\n    &quot;hexo-deployer-heroku&quot;: &quot;0.0.3&quot;,\n    &quot;hexo-deployer-openshift&quot;: &quot;0.0.1&quot;,\n    &quot;hexo-deployer-rsync&quot;: &quot;^0.1.1&quot;,\n    &quot;hexo-generator-archive&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-feed&quot;: &quot;^1.0.3&quot;,\n    &quot;hexo-generator-index&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-sitemap&quot;: &quot;^1.0.1&quot;,\n    &quot;hexo-generator-tag&quot;: &quot;^0.1.2&quot;,\n    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,\n    &quot;hexo-renderer-marked&quot;: &quot;^0.2.5&quot;,\n    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.3&quot;,\n    &quot;hexo-server&quot;: &quot;^0.1.2&quot;\n  }\n}\n</code></pre><hr>\n<p><strong><em>&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x5305;</em></strong></p>\n<pre><code>npm install\n</code></pre><hr>\n<p><strong><em>&#x672C;&#x5730;&#x67E5;&#x770B;</em></strong><br>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x642D;&#x5EFA;&#x8D77;&#x672C;&#x5730;&#x7684;hexo&#x535A;&#x5BA2;&#x4E86;&#xFF0C;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;(&#x5728;F:\\hexo)&#xFF0C;&#x7136;&#x540E;&#x5230;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165;localhost:4000&#x770B;&#x770B;&#x3002;</p>\n<pre><code>hexo generate\nhexo server\n</code></pre><hr>\n<p><strong><em>&#x6CE8;&#x518C;Github&#x8D26;&#x53F7;</em></strong></p>\n<blockquote>\n<p>&#x5DF2;&#x6709;&#x8D26;&#x53F7;&#x53EF;&#x4EE5;&#x8DF3;&#x8FC7;&#xFF0C;&#x6CA1;&#x6709;&#x7684;&#xFF0C;&#x8BF7;&#x5728;<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">&#x6B64;&#x5904;</a>&#x8FDB;&#x884C;&#x6CE8;&#x518C;&#xFF0C;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x4ECB;&#x7ECD;&#x4E86;&#x3002;</p>\n</blockquote>\n<hr>\n<p><strong><em>&#x521B;&#x5EFA;repository</em></strong></p>\n<blockquote>\n<p>&#x5728;&#x81EA;&#x5DF1;Github&#x4E3B;&#x9875;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;repository&#x3002;&#x6BD4;&#x5982;&#x6211;&#x7684;Github&#x8D26;&#x53F7;&#x662F;ronghuaxueleng&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5E94;&#x8BE5;&#x521B;&#x5EFA;&#x7684;repository&#x540D;&#x5B57;&#x5E94;&#x8BE5;&#x662F;<a href=\"http://ronghuaxueleng.github.io\">ronghuaxueleng.github.io</a></p>\n</blockquote>\n<p><img src=\"/img/github_build.png\" alt=\"\"><br><img src=\"/img/github_created.png\" alt=\"\"></p>\n<hr>\n<p><strong><em>&#x90E8;&#x7F72;</em></strong></p>\n<p>&#x7F16;&#x8F91;_config.yml(&#x5728;F:\\hexo&#x4E0B;)&#x3002;&#x4F60;&#x5728;&#x90E8;&#x7F72;&#x65F6;&#xFF0C;&#x8981;&#x628A;&#x4E0B;&#x9762;&#x7684;nothingcpd&#x90FD;&#x6362;&#x6210;&#x4F60;&#x7684;&#x8D26;&#x53F7;&#x540D;&#x3002;</p>\n<pre><code>deploy:\n  type: git\n  repository: http://github.com/ronghuaxueleng/ronghuaxueleng.github.io.git\n  branch: master\n  ##&#x6CE8;&#x610F;&#xFF1A;&quot;&#xFF1A;&quot;&#x540E;&#x8FB9;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A;&quot;&#x7A7A;&#x683C;&quot;\n</code></pre><p><strong><em>&#x6267;&#x884C;&#x4E0B;&#x5217;&#x6307;&#x4EE4;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x90E8;&#x7F72;&#x3002;</em></strong></p>\n<pre><code>hexo generate\nhexo deploy\n</code></pre><hr>\n<h2 id=\"&#x7B2C;&#x4E94;&#x8282;&#x5982;&#x4F55;&#x66F4;&#x6362;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x9898;\"><a href=\"#&#x7B2C;&#x4E94;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x66F4;&#x6362;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x9898;\" class=\"headerlink\" title=\"&#x7B2C;&#x4E94;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x66F4;&#x6362;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x9898;\"></a>&#x7B2C;&#x4E94;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x66F4;&#x6362;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x9898;</h2><p><strong><em>&#x4F7F;&#x7528;</em></strong></p>\n<ol>\n<li>&#x5B89;&#x88C5;</li>\n</ol>\n<blockquote>\n<p>&#x5728;hexo&#x4E3B;&#x76EE;&#x5F55;&#x4E0B;<br>$ git clone <a href=\"https://github.com/litten/hexo-theme-yilia.git\" target=\"_blank\" rel=\"external\">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</p>\n</blockquote>\n<p>2.&#x914D;&#x7F6E;</p>\n<blockquote>\n<p>&#x4FEE;&#x6539;hexo&#x6839;&#x76EE;&#x5F55;&#x4E0B;_config.yml &#xFF1A;<br>theme: yilia</p>\n</blockquote>\n<p>3.&#x66F4;&#x65B0;</p>\n<pre><code>cd themes/yilia\ngit pull\n</code></pre><hr>\n<p><strong><em>&#x914D;&#x7F6E;</em></strong><br>&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5728;&#x4E3B;&#x9898;&#x76EE;&#x5F55;yalia&#x4E0B;&#x7684;_config.yml&#xFF1A;</p>\n<pre><code># Header\nmenu:\n  &#x4E3B;&#x9875;: /\n  &#x6240;&#x6709;&#x6587;&#x7AE0;: /archives\n  # &#x968F;&#x7B14;: /tags/&#x968F;&#x7B14;\n\n# SubNav\nsubnav:\n  github: &quot;#&quot;\n  weibo: &quot;#&quot;\n  rss: &quot;#&quot;\n  facebook: &quot;#&quot;\n  # google: &quot;#&quot;\n  # twitter: &quot;#&quot;\n  # linkedin: &quot;#&quot;\n\nrss: /atom.xml\n\n# Content\nexcerpt_link: more\nfancybox: true\n\n# Miscellaneous\ngoogle_analytics: &apos;&apos;\nfavicon: /favicon.png\n\n#&#x4F60;&#x7684;&#x5934;&#x50CF;\navatar: &quot;https://avatars2.githubusercontent.com/u/2024949?v=2&amp;s=150&quot;\n#&#x662F;&#x5426;&#x5F00;&#x542F;&#x5206;&#x4EAB;\nshare: true\n#&#x662F;&#x5426;&#x5F00;&#x542F;&#x591A;&#x8BF4;&#x8BC4;&#x8BBA;&#xFF0C;&#x586B;&#x5199;&#x4F60;&#x5728;&#x591A;&#x8BF4;&#x7533;&#x8BF7;&#x7684;&#x9879;&#x76EE;&#x540D;&#x79F0;\nduoshuo: true\n#&#x662F;&#x5426;&#x5F00;&#x542F;&#x4E91;&#x6807;&#x7B7E;\ntagcloud: true\n\n#&#x662F;&#x5426;&#x5F00;&#x542F;&#x53CB;&#x60C5;&#x94FE;&#x63A5;\n#&#x4E0D;&#x5F00;&#x542F;&#x2014;&#x2014;\n#friends: false\n#&#x5F00;&#x542F;&#x2014;&#x2014;\nfriends:\n  &#x5965;&#x5DF4;&#x9A6C;&#x7684;&#x535A;&#x5BA2;: http://localhost:4000/\n  &#x5361;&#x5361;&#x7684;&#x7F8E;&#x4E3D;&#x4F20;&#x8BF4;: http://localhost:4000/\n  &#x672C;&#x6CFD;&#x9A6C;&#x7684;&#x535A;&#x5BA2;: http://localhost:4000/\n  &#x5409;&#x683C;&#x65AF;&#x7684;&#x535A;&#x5BA2;: http://localhost:4000/\n  &#x4E60;&#x5927;&#x5927;&#x5927;&#x4E0D;&#x540C;: http://localhost:4000/\n  &#x6258;&#x8482;&#x7684;&#x535A;&#x5BA2;: http://localhost:4000/\n\n#&#x662F;&#x5426;&#x5F00;&#x542F;&#x201C;&#x5173;&#x4E8E;&#x6211;&#x201D;&#x3002;\n#&#x4E0D;&#x5F00;&#x542F;&#x2014;&#x2014;\n#aboutme: false\n#&#x5F00;&#x542F;&#x2014;&#x2014;\naboutme: &#x6211;&#x662F;&#x8C01;&#xFF0C;&#x6211;&#x4ECE;&#x54EA;&#x91CC;&#x6765;&#xFF0C;&#x6211;&#x5230;&#x54EA;&#x91CC;&#x53BB;&#xFF1F;&#x6211;&#x5C31;&#x662F;&#x6211;&#xFF0C;&#x662F;&#x989C;&#x8272;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x5403;&#x8D27;&#x2026;\n</code></pre><hr>\n<p><strong><em>&#x4F53;&#x9A8C;</em></strong></p>\n<pre><code>hexo generate\nhexo server\n</code></pre><p>&#x6700;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8F93;&#x5165;&#xFF1A;localhost:4000 &#x67E5;&#x770B;&#x4E3B;&#x9898;&#x6548;&#x679C;</p>\n<pre><code>hexo generate\nhexo deploy\n\n&#x6700;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8F93;&#x5165;&#xFF1A; ronghuaxueleng.github.com \nps&#xFF1A;ronghuaxueleng&#x6362;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;repo&#x540D;&#x5B57;&#xFF0C;&#x67E5;&#x770B;&#x6548;&#x679C;\n</code></pre><hr>\n<p>&#x8FD9;&#x91CC;&#x6709;hexo&#x7684;&#x5404;&#x79CD;&#x4E3B;&#x9898;&#xFF0C;&#x559C;&#x6B22;&#x6298;&#x817E;&#x7684;&#x53EF;&#x4EE5;&#x53BB;&#x770B;&#x770B;</p>\n<pre><code>https://hexo.io/themes/\n</code></pre><h2 id=\"&#x7B2C;&#x516D;&#x8282;&#x5982;&#x4F55;&#x53D1;&#x8868;&#x6587;&#x7AE0;\"><a href=\"#&#x7B2C;&#x516D;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x53D1;&#x8868;&#x6587;&#x7AE0;\" class=\"headerlink\" title=\"&#x7B2C;&#x516D;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x53D1;&#x8868;&#x6587;&#x7AE0;\"></a>&#x7B2C;&#x516D;&#x8282;&#xFF1A;&#x5982;&#x4F55;&#x53D1;&#x8868;&#x6587;&#x7AE0;</h2><blockquote>\n<p><strong>1. step1&#xFF1A;&#x8F93;&#x5165; hexo new &#x201C;my first post&#x201D;</strong><br>ps:&#x5F15;&#x53F7;&#x53EF;&#x4EE5;&#x4E0D;&#x52A0;&#xFF0C;&#x6700;&#x597D;&#x4E0D;&#x52A0;&#xFF0C;&#x6B64;&#x65F6; &#x67E5;&#x770B;source/_posts/&#x4E0B;&#x9762;&#x4F1A;&#x4EA7;&#x751F;post.md&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6B64;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x7528;markdown&#x8BED;&#x8A00;&#x7F16;&#x8F91;&#xFF0C;&#x540E;&#x9762;&#x4F1A;&#x6709;&#x4E00;&#x7BC7;&#x4E13;&#x95E8;&#x4ECB;&#x7ECD;markdown&#x8BED;&#x6CD5;&#x7684;blog<br>&#x4EE5;&#x540E;&#x6BCF;&#x6B21;&#x8FD0;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x6587;&#x4EF6;&#xFF0C;&#x4F1A;&#x4EA7;&#x751F;post1-1.md&#xFF0C;post-2.md&#x7B49;&#x4F9D;&#x6B21;&#x589E;&#x52A0;</p>\n<p><strong>step2: &#x5728;F:\\hexo\\source_posts&#x4E2D;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF08;&#x6253;&#x5F00;&#x65B9;&#x5F0F;&#x7528;&#x201C;&#x8BB0;&#x4E8B;&#x672C;&#x201D;&#x5373;&#x53EF;&#xFF09;, &#x7136;&#x540E;&#x5C06;&#x4E0B;&#x9762;&#x5185;&#x5BB9; &#x62F7;&#x8D1D;&#x5230;&#x91CC;&#x9762;</strong></p>\n<pre><code> layout: post\n title: &quot;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x60C5;&#x7F18;&quot;\n date: 2014-12-17 13:15\n comments: true\n tags: \n    - &#x968F;&#x7B14;\n    - &#x5FC3;&#x60C5;\n    - &#x4E2A;&#x4EBA;\n---\n</code></pre><p><strong>step3: &#x8F93;&#x5165; hexo server</strong><br>&#x8BBF;&#x95EE;localhost:4000&#x9884;&#x89C8;&#x6548;&#x679C;&#x3002;&#xFF08;&#x9000;&#x51FA;server&#x7528;Ctrl+c&#xFF09;</p>\n<p><strong>step4: &#x8F93;&#x5165; hexo deploy</strong><br>&#x540C;&#x6B65;&#x5230;github&#x3002;&#x8BBF;&#x95EE;&#x7F51;&#x7AD9;&#x770B;&#x770B;&#x6548;&#x679C;&#x3002;ronghuaxueleng.github.io(ronghuaxueleng&#x6362;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;repo)</p>\n</blockquote>\n<p>&#x73B0;&#x5728;&#x4E3A;&#x6B62;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x642D;&#x5EFA;&#x8D77;&#x535A;&#x5BA2;&#xFF0C;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x914D;&#x7F6E;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E86;&#x4E3B;&#x9898;&#xFF0C;&#x5E76;&#x5B66;&#x4F1A;&#x4E86;&#x600E;&#x4E48;&#x53D1;&#x8868;&#x6587;&#x7AE0;&#x3002;</p>\n","excerpt":"","more":"<hr>\n<p>在搭建这个博客期间参考了很多资料，因为不是所有的资料都能完整并且顺利搭建出来，经过我本人实践，整理出来这篇文章，希望可以帮助大家减少不必要的麻烦，不用再到处找搭建方法，本文的共分为一下几章：</p>\n<blockquote>\n<p>第一节： 什么是hexo<br>第二节： 为什么要用hexo<br>第三节： 谁使用hexo<br>第四节： 怎样搭建hexo博客<br>第五节： 如何更换自己的主题<br>第六节： 如何发表文章</p>\n</blockquote>\n<hr>\n<h2 id=\"第一节：什么是hexo\"><a href=\"#第一节：什么是hexo\" class=\"headerlink\" title=\"第一节：什么是hexo\"></a>第一节：什么是hexo</h2><p> hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，hexo：</p>\n<blockquote>\n<p>快速、简单且功能强大的 Node.js 博客框架。<br>A fast, simple &amp; powerful blog framework, powered by Node.js.<br>类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。</p>\n</blockquote>\n<p>类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。</p>\n<hr>\n<h2 id=\"第二节：为什么要用hexo\"><a href=\"#第二节：为什么要用hexo\" class=\"headerlink\" title=\"第二节：为什么要用hexo\"></a>第二节：为什么要用hexo</h2><p>还是引用作者的话：</p>\n<blockquote>\n<p>不可思议的快速 ─ 只要一眨眼静态文件即生成完成<br>支持 Markdown<br>仅需一道指令即可部署到 GitHub Pages 和 Heroku<br>已移植 Octopress 插件<br>高扩展性、自订性<br>兼容于 Windows, Mac &amp; Linux</p>\n</blockquote>\n<p>我在加几个自己体会到的优点：</p>\n<ul>\n<li>易用：不仅部署简单，平时使用中仅需要hexo new hexo generate hexo server hexo deploy四个命令。不像Jekyll需要很多繁琐的git命令。</li>\n<li>轻：文件少、小，易理解，方便自定义。</li>\n<li>用户多：虽然赶不上Jekyll和Octopress，但遇到什么问题都能搜索到答案，或者找到同样使用hexo的用户进行参考和咨询。</li>\n<li>简单：我本人不太爱倒腾这东西，但是当我看到本博客的模板后，在看完教程后，都停不下来，用了一晚上就搭起来了</li>\n<li>省时：不必浪费时间在你不关注的东西上，专心写你的博客</li>\n</ul>\n<hr>\n<h2 id=\"第三节：谁使用hexo\"><a href=\"#第三节：谁使用hexo\" class=\"headerlink\" title=\"第三节：谁使用hexo\"></a>第三节：谁使用hexo</h2><p>这是一个免费开源的博客程序，任何人都可以使用和修改。但是不同于wordpress，hexo由于需要使用<strong>Github,Git,Markdown,Node.js</strong>这样的工具，好多插件、widget都需要自己安装、设置。所以<strong>适合那些有一定计算机基础，喜欢折腾的人</strong>。</p>\n<hr>\n<h2 id=\"第四节：怎样搭建hexo博客\"><a href=\"#第四节：怎样搭建hexo博客\" class=\"headerlink\" title=\"第四节：怎样搭建hexo博客\"></a>第四节：怎样搭建hexo博客</h2><blockquote>\n<p><em>注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo安装</em>。</p>\n</blockquote>\n<hr>\n<p><strong><em>安装Git</em></strong></p>\n<blockquote>\n<p>下载 <a href=\"http://git-scm.com/download/win\">msysgit</a> 并执行即可完成安装。</p>\n</blockquote>\n<hr>\n<p><strong><em>安装Node.js</em></strong></p>\n<blockquote>\n<p>在Windows环境下安装<a href=\"https://nodejs.org/en/\">Node.js</a>非常简单，仅须下载安装文件并执行即可完成安装。</p>\n</blockquote>\n<hr>\n<p><strong><em>设置软件包国内镜像</em></strong></p>\n<pre><code>npm config set registry http://registry.npm.taobao.org\n</code></pre><hr>\n<p><strong><em>安装hexo</em></strong></p>\n<pre><code>npm install -g hexo\n</code></pre><hr>\n<p><strong><em>创建hexo文件夹</em></strong><br>安装完成后，在你喜爱的文件夹下（如F:\\hexo），执行以下指令(在F:\\hexo内点击鼠标右键，选择Git bash)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。</p>\n<pre><code>hexo init\n</code></pre><p>执行完这一步后，你会发现文件夹下生成了一些文件和文件夹，用文本编辑器打开package.json文件，将里面的内容改为以下内容：</p>\n<pre><code>{\n  &quot;name&quot;: &quot;hexo-site&quot;,\n  &quot;version&quot;: &quot;0.0.0&quot;,\n  &quot;private&quot;: true,\n  &quot;hexo&quot;: {\n    &quot;version&quot;: &quot;3.1.1&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;hexo&quot;: &quot;^3.1.0&quot;,\n    &quot;hexo-deployer-git&quot;: &quot;0.0.4&quot;,\n    &quot;hexo-deployer-heroku&quot;: &quot;0.0.3&quot;,\n    &quot;hexo-deployer-openshift&quot;: &quot;0.0.1&quot;,\n    &quot;hexo-deployer-rsync&quot;: &quot;^0.1.1&quot;,\n    &quot;hexo-generator-archive&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-feed&quot;: &quot;^1.0.3&quot;,\n    &quot;hexo-generator-index&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-sitemap&quot;: &quot;^1.0.1&quot;,\n    &quot;hexo-generator-tag&quot;: &quot;^0.1.2&quot;,\n    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,\n    &quot;hexo-renderer-marked&quot;: &quot;^0.2.5&quot;,\n    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.3&quot;,\n    &quot;hexo-server&quot;: &quot;^0.1.2&quot;\n  }\n}\n</code></pre><hr>\n<p><strong><em>安装依赖包</em></strong></p>\n<pre><code>npm install\n</code></pre><hr>\n<p><strong><em>本地查看</em></strong><br>现在我们已经搭建起本地的hexo博客了，执行以下命令(在F:\\hexo)，然后到浏览器输入localhost:4000看看。</p>\n<pre><code>hexo generate\nhexo server\n</code></pre><hr>\n<p><strong><em>注册Github账号</em></strong></p>\n<blockquote>\n<p>已有账号可以跳过，没有的，请在<a href=\"https://github.com/\">此处</a>进行注册，很简单，这里就不介绍了。</p>\n</blockquote>\n<hr>\n<p><strong><em>创建repository</em></strong></p>\n<blockquote>\n<p>在自己Github主页右下角，创建一个新的repository。比如我的Github账号是ronghuaxueleng，那么我应该创建的repository名字应该是<a href=\"http://ronghuaxueleng.github.io\">ronghuaxueleng.github.io</a></p>\n</blockquote>\n<p><img src=\"/img/github_build.png\" alt=\"\"><br><img src=\"/img/github_created.png\" alt=\"\"></p>\n<hr>\n<p><strong><em>部署</em></strong></p>\n<p>编辑_config.yml(在F:\\hexo下)。你在部署时，要把下面的nothingcpd都换成你的账号名。</p>\n<pre><code>deploy:\n  type: git\n  repository: http://github.com/ronghuaxueleng/ronghuaxueleng.github.io.git\n  branch: master\n  ##注意：&quot;：&quot;后边需要有一个&quot;空格&quot;\n</code></pre><p><strong><em>执行下列指令即可完成部署。</em></strong></p>\n<pre><code>hexo generate\nhexo deploy\n</code></pre><hr>\n<h2 id=\"第五节：如何更换自己的主题\"><a href=\"#第五节：如何更换自己的主题\" class=\"headerlink\" title=\"第五节：如何更换自己的主题\"></a>第五节：如何更换自己的主题</h2><p><strong><em>使用</em></strong></p>\n<ol>\n<li>安装</li>\n</ol>\n<blockquote>\n<p>在hexo主目录下<br>$ git clone <a href=\"https://github.com/litten/hexo-theme-yilia.git\">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</p>\n</blockquote>\n<p>2.配置</p>\n<blockquote>\n<p>修改hexo根目录下_config.yml ：<br>theme: yilia</p>\n</blockquote>\n<p>3.更新</p>\n<pre><code>cd themes/yilia\ngit pull\n</code></pre><hr>\n<p><strong><em>配置</em></strong><br>主题配置文件在主题目录yalia下的_config.yml：</p>\n<pre><code># Header\nmenu:\n  主页: /\n  所有文章: /archives\n  # 随笔: /tags/随笔\n\n# SubNav\nsubnav:\n  github: &quot;#&quot;\n  weibo: &quot;#&quot;\n  rss: &quot;#&quot;\n  facebook: &quot;#&quot;\n  # google: &quot;#&quot;\n  # twitter: &quot;#&quot;\n  # linkedin: &quot;#&quot;\n\nrss: /atom.xml\n\n# Content\nexcerpt_link: more\nfancybox: true\n\n# Miscellaneous\ngoogle_analytics: &apos;&apos;\nfavicon: /favicon.png\n\n#你的头像\navatar: &quot;https://avatars2.githubusercontent.com/u/2024949?v=2&amp;s=150&quot;\n#是否开启分享\nshare: true\n#是否开启多说评论，填写你在多说申请的项目名称\nduoshuo: true\n#是否开启云标签\ntagcloud: true\n\n#是否开启友情链接\n#不开启——\n#friends: false\n#开启——\nfriends:\n  奥巴马的博客: http://localhost:4000/\n  卡卡的美丽传说: http://localhost:4000/\n  本泽马的博客: http://localhost:4000/\n  吉格斯的博客: http://localhost:4000/\n  习大大大不同: http://localhost:4000/\n  托蒂的博客: http://localhost:4000/\n\n#是否开启“关于我”。\n#不开启——\n#aboutme: false\n#开启——\naboutme: 我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…\n</code></pre><hr>\n<p><strong><em>体验</em></strong></p>\n<pre><code>hexo generate\nhexo server\n</code></pre><p>最后在浏览器中输入：localhost:4000 查看主题效果</p>\n<pre><code>hexo generate\nhexo deploy\n\n最后在浏览器中输入： ronghuaxueleng.github.com \nps：ronghuaxueleng换成你自己的repo名字，查看效果\n</code></pre><hr>\n<p>这里有hexo的各种主题，喜欢折腾的可以去看看</p>\n<pre><code>https://hexo.io/themes/\n</code></pre><h2 id=\"第六节：如何发表文章\"><a href=\"#第六节：如何发表文章\" class=\"headerlink\" title=\"第六节：如何发表文章\"></a>第六节：如何发表文章</h2><blockquote>\n<p><strong>1. step1：输入 hexo new “my first post”</strong><br>ps:引号可以不加，最好不加，此时 查看source/_posts/下面会产生post.md的文件，此文件需要用markdown语言编辑，后面会有一篇专门介绍markdown语法的blog<br>以后每次运行上面的命令都会产生文件，会产生post1-1.md，post-2.md等依次增加</p>\n<p><strong>step2: 在F:\\hexo\\source_posts中打开这个文件（打开方式用“记事本”即可）, 然后将下面内容 拷贝到里面</strong></p>\n<pre><code> layout: post\n title: &quot;我的博客情缘&quot;\n date: 2014-12-17 13:15\n comments: true\n tags: \n    - 随笔\n    - 心情\n    - 个人\n---\n</code></pre><p><strong>step3: 输入 hexo server</strong><br>访问localhost:4000预览效果。（退出server用Ctrl+c）</p>\n<p><strong>step4: 输入 hexo deploy</strong><br>同步到github。访问网站看看效果。ronghuaxueleng.github.io(ronghuaxueleng换成你自己的repo)</p>\n</blockquote>\n<p>现在为止，我们已经搭建起博客，进行一些基本配置，设置了主题，并学会了怎么发表文章。</p>\n"},{"title":"Grunt：任务自动管理工具","date":"2016-03-20T16:00:00.000Z","modifiedOn":"2016-03-20T16:00:00.000Z","toc":true,"_content":"\n------\n在Javascript的开发过程中，经常会遇到一些重复性的任务，比如合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等。通常，我们需要使用不同的工具，来完成不同的任务，既重复劳动又非常耗时。Grunt就是为了解决这个问题而发明的工具，可以帮助我们自动管理和运行各种任务。\n\n简单说，Grunt是一个自动任务运行器，会按照预先设定的顺序自动运行一系列的任务。这可以简化工作流程，减轻重复性工作带来的负担。\n\n# 安装\n\nGrunt基于Node.js，安装之前要先安装Node.js，然后运行下面的命令。\n\n```javascript\n\nsudo npm install grunt-cli -g\n\n```\n\ngrunt-cli表示安装的是grunt的命令行界面，参数g表示全局安装。\n\nGrunt使用模块结构，除了安装命令行界面以外，还要根据需要安装相应的模块。这些模块应该采用局部安装，因为不同项目可能需要同一个模块的不同版本。\n\n首先，在项目的根目录下，创建一个文本文件package.json，指定当前项目所需的模块。下面就是一个例子。\n\n```javascript\n\n{\n  \"name\": \"my-project-name\",\n  \"version\": \"0.1.0\",\n  \"author\": \"Your Name\",\n  \"devDependencies\": {\n    \"grunt\": \"0.x.x\",\n    \"grunt-contrib-jshint\": \"*\",\n    \"grunt-contrib-concat\": \"~0.1.1\",\n    \"grunt-contrib-uglify\": \"~0.1.0\",\n    \"grunt-contrib-watch\": \"~0.1.4\"\n  }\n}\n\n```\n\n上面这个package.json文件中，除了注明项目的名称和版本以外，还在devDependencies属性中指定了项目依赖的grunt模块和版本：grunt核心模块为最新的0.x.x版，jshint插件为最新版本，concat插件不低于0.1.1版，uglify插件不低于0.1.0版，watch插件不低于0.1.4版。\n\n然后，在项目的根目录下运行下面的命令，这些插件就会被自动安装在node_modules子目录。\n\n```javascript\n\nnpm install\n\n```\n\n上面这种方法是针对已有package.json的情况。如果想要自动生成package.json文件，可以使用npm init命令，按照屏幕提示回答所需模块的名称和版本即可。\n\n```javascript\n\nnpm init\n\n```\n\n如果已有的package.json文件不包括Grunt模块，可以在直接安装Grunt模块的时候，加上--save-dev参数，该模块就会自动被加入package.json文件。\n\n```javascript\n\nnpm install <module> --save-dev\n\n```\n\n比如，对应上面package.json文件指定的模块，需要运行以下npm命令。\n\n```javascript\n\nnpm install grunt --save-dev\nnpm install grunt-contrib-jshint --save-dev\nnpm install grunt-contrib-concat --save-dev\nnpm install grunt-contrib-uglify --save-dev\nnpm install grunt-contrib-watch --save-dev\n\n```\n\n# 命令脚本文件Gruntfile.js \n\n模块安装完以后，下一步在项目的根目录下，新建脚本文件Gruntfile.js。它是grunt的配置文件，就好像package.json是npm的配置文件一样。Gruntfile.js就是一般的Node.js模块的写法。\n\n```javascript\n\nmodule.exports = function(grunt) {\n\n  // 配置Grunt各种模块的参数\n  grunt.initConfig({\n    jshint: { /* jshint的参数 */ },\n    concat: { /* concat的参数 */ },\n    uglify: { /* uglify的参数 */ },\n    watch:  { /* watch的参数 */ }\n  });\n\n  // 从node_modules目录加载模块文件\n  grunt.loadNpmTasks('grunt-contrib-jshint');\n  grunt.loadNpmTasks('grunt-contrib-concat');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n\n  // 每行registerTask定义一个任务\n  grunt.registerTask('default', ['jshint', 'concat', 'uglify']);\n  grunt.registerTask('check', ['jshint']);\n\n};\n\n```\n\n上面的代码用到了grunt代码的三个方法：\n\n- **grunt.initConfig**：定义各种模块的参数，每一个成员项对应一个同名模块。\n\n- **grunt.loadNpmTasks**：加载完成任务所需的模块。\n\n- **grunt.registerTask**：定义具体的任务。第一个参数为任务名，第二个参数是一个数组，表示该任务需要依次使用的模块。default任务名表示，如果直接输入grunt命令，后面不跟任何参数，这时所调用的模块（该例为jshint，concat和uglify）；该例的check任务则表示使用jshint插件对代码进行语法检查。\n\n上面的代码一共加载了四个模块：jshint（检查语法错误）、concat（合并文件）、uglify（压缩代码）和watch（自动执行）。接下来，有两种使用方法。\n\n（1）命令行执行某个模块，比如\n\n```javascript\n\ngrunt jshint\n\n```\n\n上面代码表示运行jshint模块。\n\n（2）命令行执行某个任务。比如\n\n```javascript\n\ngrunt check\n\n```\n\n上面代码表示运行check任务。如果运行成功，就会显示“Done, without errors.”。\n\n如果没有给出任务名，只键入grunt，就表示执行默认的default任务。\n\n# Gruntfile.js实例：grunt-contrib-cssmin模块\n\n下面通过cssmin模块，演示如何编写Gruntfile.js文件。cssmin模块的作用是最小化CSS文件。\n\n首先，在项目的根目录下安装该模块。\n\n```javascript\n\nnpm install grunt-contrib-cssmin --save-dev\n\n```\n\n然后，新建文件Gruntfile.js。\n\n```javascript\n\nmodule.exports = function(grunt) {\n\n  grunt.initConfig({\n    cssmin: {\n      minify: {\n        expand: true,\n\t\tcwd: 'css/',\n\t\tsrc: ['*.css', '!*.min.css'],\n\t\tdest: 'css/',\n\t\text: '.min.css'\n\t  },\n      combine: {\n\t    files: {\n\t\t  'css/out.min.css': ['css/part1.min.css', 'css/part2.min.css']\n\t\t}\n\t  }\n    }\n  });\n\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n\n  grunt.registerTask('default', ['cssmin:minify','cssmin:combine']);\n\n};\n\n```\n\n下面详细解释上面代码中的三个方法，下面一个个来看。\n\n**（1）grunt.loadNpmTasks**\n\ngrunt.loadNpmTasks方法载入模块文件。\n\n```javascript\n\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n\n```\n\n你需要使用几个模块，这里就要写几条grunt.loadNpmTasks语句，将各个模块一一加载。\n\n如果加载模块很多，这部分会非常冗长。而且，还存在一个问题，就是凡是在这里加载的模块，也同时出现在package.json文件中。如果使用npm命令卸载模块以后，模块会自动从package.json文件中消失，但是必须手动从Gruntfile.js文件中清除，这样很不方便，一旦忘记，还会出现运行错误。这里有一个解决办法，就是安装load-grunt-tasks模块，然后在Gruntfile.js文件中，用下面的语句替代所有的grunt.loadNpmTasks语句。\n\n```javascript\n\nrequire('load-grunt-tasks')(grunt);\n\n```\n\n这条语句的作用是自动分析package.json文件，自动加载所找到的grunt模块。\n\n**（2）grunt.initConfig**\n\ngrunt.initConfig方法用于模块配置，它接受一个对象作为参数。该对象的成员与使用的同名模块一一对应。由于我们要配置的是cssmin模块，所以里面有一个cssmin成员（属性）。\n\ncssmin（属性）指向一个对象，该对象又包含多个成员。除了一些系统设定的成员（比如options），其他自定义的成员称为目标（target）。一个模块可以有多个目标（target），上面代码里面，cssmin模块共有两个目标，一个是“minify”，用于压缩css文件；另一个是“combine”，用于将多个css文件合并一个文件。\n\n每个目标的具体设置，需要参考该模板的文档。就cssmin来讲，minify目标的参数具体含义如下：\n\n- **expand**：如果设为true，就表示下面文件名的占位符（即\\*号）都要扩展成具体的文件名。\n\n- **cwd**：需要处理的文件（input）所在的目录。\n\n- **src**：表示需要处理的文件。如果采用数组形式，数组的每一项就是一个文件名，可以使用通配符。\n\n- **dest**：表示处理后的文件名或所在目录。\n\n- **ext**：表示处理后的文件后缀名。\n\n除了上面这些参数，还有一些参数也是grunt所有模块通用的。\n\n- **filter**：一个返回布尔值的函数，用于过滤文件名。只有返回值为true的文件，才会被grunt处理。\n\n- **dot**：是否匹配以点号（.）开头的系统文件。\n\n- **makeBase**：如果设置为true，就只匹配文件路径的最后一部分。比如，a?b可以匹配/xyz/123/acb，而不匹配/xyz/acb/123。\n\n关于通配符，含义如下：\n\n- \\*：匹配任意数量的字符，不包括/。\n- ?：匹配单个字符，不包括/。\n- \\*\\*：匹配任意数量的字符，包括/。\n- {}：允许使用逗号分隔的列表，表示“or”（或）关系。\n- !：用于模式的开头，表示只返回不匹配的情况。\n\n比如，foo/\\*.js匹配foo目录下面的文件名以.js结尾的文件，foo/\\*\\*/\\*.js匹配foo目录和它的所有子目录下面的文件名以.js结尾的文件，!\\*.css表示匹配所有后缀名不为“.css”的文件。\n\n使用通配符设置src属性的更多例子：\n\n```javascript\n\n{src: 'foo/th*.js'}grunt-contrib-uglify\n\n{src: 'foo/{a,b}*.js'}\n\n{src: ['foo/a*.js', 'foo/b*.js']}\n\n```\n\n至于combine目标，就只有一个files参数，表示输出文件是css子目录下的out.min.css，输入文件则是css子目录下的part1.min.css和part2.min.css。\n\nfiles参数的格式可以是一个对象，也可以是一个数组。\n\n```javascript\n\nfiles: {\n        'dest/b.js': ['src/bb.js', 'src/bbb.js'],\n        'dest/b1.js': ['src/bb1.js', 'src/bbb1.js'],\n},\n\n// or\n\nfiles: [\n        {src: ['src/aa.js', 'src/aaa.js'], dest: 'dest/a.js'},\n        {src: ['src/aa1.js', 'src/aaa1.js'], dest: 'dest/a1.js'},\n],\n\n```\n\n如果minify目标和combine目标的属性设置有重合的部分，可以另行定义一个与minify和combine平行的options属性。\n\n```javascript\n\n grunt.initConfig({\n    cssmin: {\n\t  options: { /* ... */ },\n      minify: { /* ... */ },\n      combine: { /* ... */ }\n    }\n  });\n\n```\n\n**（3）grunt.registerTask**\n\ngrunt.registerTask方法定义如何调用具体的任务。“default”任务表示如果不提供参数，直接输入grunt命令，则先运行“cssmin:minify”，后运行“cssmin:combine”，即先压缩再合并。如果只执行压缩，或者只执行合并，则需要在grunt命令后面指明“模块名:目标名”。\n\n```javascript\n\ngrunt # 默认情况下，先压缩后合并\n\ngrunt cssmin:minify # 只压缩不合并\n\ngrunt css:combine # 只合并不压缩\n\n```\n\n如果不指明目标，只是指明模块，就表示将所有目标依次运行一遍。\n\n```javascript\n\ngrunt cssmin\n\n```\n\n# 常用模块设置\n\ngrunt的[模块](http://gruntjs.com/plugins)已经超过了2000个，且还在快速增加。下面是一些常用的模块（按字母排序）。\n\n- **grunt-contrib-clean**：删除文件。\n- **grunt-contrib-compass**：使用compass编译sass文件。\n- **grunt-contrib-concat**：合并文件。\n- **grunt-contrib-copy**：复制文件。\n- **grunt-contrib-cssmin**：压缩以及合并CSS文件。\n- **grunt-contrib-imagemin**：图像压缩模块。\n- **grunt-contrib-jshint**：检查JavaScript语法。\n- **grunt-contrib-uglify**：压缩以及合并JavaScript文件。\n- **grunt-contrib-watch**：监视文件变动，做出相应动作。\n\n模块的前缀如果是grunt-contrib，就表示该模块由grunt开发团队维护；如果前缀是grunt（比如grunt-pakmanager），就表示由第三方开发者维护。\n\n以下选几个模块，看看它们配置参数的写法，也就是说如何在grunt.initConfig方法中配置各个模块。\n\n## grunt-contrib-jshint\n\njshint用来检查语法错误，比如分号的使用是否正确、有没有忘记写括号等等。它在grunt.initConfig方法里面的配置代码如下。\n\n```javascript\n\njshint: {\n\toptions: {\n\t\teqeqeq: true,\n\t\ttrailing: true\n\t},\n\tfiles: ['Gruntfile.js', 'lib/**/*.js']\n},\n\n```\n\n上面代码先指定jshint的[检查项目](http://www.jshint.com/docs/options/)，eqeqeq表示要用严格相等运算符取代相等运算符，trailing表示行尾不得有多余的空格。然后，指定files属性，表示检查目标是Gruntfile.js文件，以及lib目录的所有子目录下面的JavaScript文件。\n\n## grunt-contrib-concat\n\nconcat用来合并同类文件，它不仅可以合并JavaScript文件，还可以合并CSS文件。\n\n```javascript\n\nconcat: {\n  js: {\n    src: ['lib/module1.js', 'lib/module2.js', 'lib/plugin.js'],\n    dest: 'dist/script.js'\n  }\n  css: {\n    src: ['style/normalize.css', 'style/base.css', 'style/theme.css'],\n    dest: 'dist/screen.css'\n  }\n},\n\n```\n\njs目标用于合并JavaScript文件，css目标用语合并CSS文件。两者的src属性指定需要合并的文件（input），dest属性指定输出的目标文件（output）。\n\n## grunt-contrib-uglify\n\nuglify模块用来压缩代码，减小文件体积。\n\n```javascript\n\nuglify: {\n  options: {\n    banner: bannerContent,\n    sourceMapRoot: '../',\n    sourceMap: 'distrib/'+name+'.min.js.map',\n    sourceMapUrl: name+'.min.js.map'\n  },\n  target : {\n\texpand: true,\n\tcwd: 'js/origin',\n\tsrc : '*.js',\n\tdest : 'js/'\n  }\n},\n\n```\n\n上面代码中的options属性指定压缩后文件的文件头，以及sourceMap设置；target目标指定输入和输出文件。\n\n## grunt-contrib-copy\n\n[copy模块](https://github.com/gruntjs/grunt-contrib-copy)用于复制文件与目录。\n\n```javascript\n\ncopy: {\n  main: {\n    src: 'src/*',\n    dest: 'dest/',\n  },\n},\n\n```\n\n上面代码将src子目录（只包含它下面的第一层文件和子目录），拷贝到dest子目录下面（即dest/src目录）。如果要更准确控制拷贝行为，比如只拷贝文件、不拷贝目录、不保持目录结构，可以写成下面这样：\n\n```javascript\n\ncopy: {\n  main: {\n    expand: true,\n    cwd: 'src/',\n    src: '**',\n    dest: 'dest/',\n    flatten: true,\n    filter: 'isFile',\n  },\n},\n\n```\n\n## grunt-contrib-watch\n\n[watch模块](https://github.com/gruntjs/grunt-contrib-watch)用来在后台运行，监听指定事件，然后自动运行指定的任务。\n\n```javascript\n\nwatch: {\n   scripts: {\n    files: '**/*.js',\n    tasks: 'jshint',\n\toptions: {\n      livereload: true,\n    },\n   },\n   css: {\n    files: '**/*.sass',\n    tasks: ['sass'],\n    options: {\n      livereload: true,\n    },\n   },\n},\n\n```\n\n设置好上面的代码，打开另一个进程，运行grunt watch。此后，任何的js代码变动，文件保存后就会自动运行jshint任务；任何sass文件变动，文件保存后就会自动运行sass任务。\n\n需要注意的是，这两个任务的options参数之中，都设置了livereload，表示任务运行结束后，自动在浏览器中重载（reload）。这需要在浏览器中安装[livereload插件](http://livereload.com/)。安装后，livereload的默认端口为localhost:35729，但是也可以用livereload: 1337的形式重设端口（localhost:1337）。\n\n# 其他模块\n\n下面是另外一些有用的模块。\n\n## grunt-contrib-clean\n\n该模块用于删除文件或目录。\n\n```javascript\n\nclean: {\n  build: {\n    src: [\"path/to/dir/one\", \"path/to/dir/two\"]\n  }\n}\n\n```\n\n## grunt-autoprefixer\n\n该模块用于为CSS语句加上浏览器前缀。\n\n```javascript\n\nautoprefixer: {\n  build: {\n    expand: true,\n    cwd: 'build',\n    src: [ '**/*.css' ],\n    dest: 'build'\n  }\n},\n\n```\n\n## grunt-contrib-connect\n\n该模块用于在本机运行一个Web Server。\n\n```javascript\n\nconnect: {\n  server: {\n    options: {\n      port: 4000,\n      base: 'build',\n      hostname: '*'\n    }\n  }\n}\n\n```\n\nconnect模块会随着grunt运行结束而结束，为了使它一直处于运行状态，可以把它放在watch模块之前运行。因为watch模块需要手动中止，所以connect模块也就会一直运行。\n\n## grunt-htmlhint\n\n该模块用于检查HTML语法。\n\n```javascript\n\nhtmlhint: {\n    build: {\n        options: {\n            'tag-pair': true,\n            'tagname-lowercase': true,\n            'attr-lowercase': true,\n            'attr-value-double-quotes': true,\n            'spec-char-escape': true,\n            'id-unique': true,\n            'head-script-disabled': true,\n        },\n        src: ['index.html']\n    }\n}\n\n```\n\n上面代码用于检查index.html文件：HTML标记是否配对、标记名和属性名是否小写、属性值是否包括在双引号之中、特殊字符是否转义、HTML元素的id属性是否为唯一值、head部分是否没有script标记。\n\n## grunt-contrib-sass模块\n\n该模块用于将SASS文件转为CSS文件。\n\n```javascript\n\nsass: {\n    build: {\n\t\toptions: {\n            style: 'compressed'\n        },\n        files: {\n            'build/css/master.css': 'assets/sass/master.scss'\n        }\n    }\n}\n\n```\n\n上面代码指定输出文件为build/css/master.css，输入文件为assets/sass/master.scss。\n\n## grunt-markdown\n\n该模块用于将markdown文档转为HTML文档。\n\n```javascript\n\nmarkdown: {\n    all: {\n      files: [\n        {\n          expand: true,\n          src: '*.md',\n          dest: 'docs/html/',\n          ext: '.html'\n        }\n      ],\n      options: {\n        template: 'templates/index.html',\n      }\n    }\n},\n\n```\n\n上面代码指定将md后缀名的文件，转为docs/html/目录下的html文件。template属性指定转换时采用的模板，模板样式如下。\n\n```html\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Document</title>\n</head>\n<body>\n \n    <div id=\"main\" class=\"container\">\n        <%=content%>\n    </div>\n \n</body>\n</html>\n\n```\n","source":"_posts/grunt-install.md","raw":"---\ntitle: Grunt：任务自动管理工具\ncategory: 自动管理,grunt\ntags: tool,grunt,javascript,自动管理\ndate: 2016-03-21\nmodifiedOn: 2016-03-21\ntoc: true\n---\n\n------\n在Javascript的开发过程中，经常会遇到一些重复性的任务，比如合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等。通常，我们需要使用不同的工具，来完成不同的任务，既重复劳动又非常耗时。Grunt就是为了解决这个问题而发明的工具，可以帮助我们自动管理和运行各种任务。\n\n简单说，Grunt是一个自动任务运行器，会按照预先设定的顺序自动运行一系列的任务。这可以简化工作流程，减轻重复性工作带来的负担。\n\n# 安装\n\nGrunt基于Node.js，安装之前要先安装Node.js，然后运行下面的命令。\n\n```javascript\n\nsudo npm install grunt-cli -g\n\n```\n\ngrunt-cli表示安装的是grunt的命令行界面，参数g表示全局安装。\n\nGrunt使用模块结构，除了安装命令行界面以外，还要根据需要安装相应的模块。这些模块应该采用局部安装，因为不同项目可能需要同一个模块的不同版本。\n\n首先，在项目的根目录下，创建一个文本文件package.json，指定当前项目所需的模块。下面就是一个例子。\n\n```javascript\n\n{\n  \"name\": \"my-project-name\",\n  \"version\": \"0.1.0\",\n  \"author\": \"Your Name\",\n  \"devDependencies\": {\n    \"grunt\": \"0.x.x\",\n    \"grunt-contrib-jshint\": \"*\",\n    \"grunt-contrib-concat\": \"~0.1.1\",\n    \"grunt-contrib-uglify\": \"~0.1.0\",\n    \"grunt-contrib-watch\": \"~0.1.4\"\n  }\n}\n\n```\n\n上面这个package.json文件中，除了注明项目的名称和版本以外，还在devDependencies属性中指定了项目依赖的grunt模块和版本：grunt核心模块为最新的0.x.x版，jshint插件为最新版本，concat插件不低于0.1.1版，uglify插件不低于0.1.0版，watch插件不低于0.1.4版。\n\n然后，在项目的根目录下运行下面的命令，这些插件就会被自动安装在node_modules子目录。\n\n```javascript\n\nnpm install\n\n```\n\n上面这种方法是针对已有package.json的情况。如果想要自动生成package.json文件，可以使用npm init命令，按照屏幕提示回答所需模块的名称和版本即可。\n\n```javascript\n\nnpm init\n\n```\n\n如果已有的package.json文件不包括Grunt模块，可以在直接安装Grunt模块的时候，加上--save-dev参数，该模块就会自动被加入package.json文件。\n\n```javascript\n\nnpm install <module> --save-dev\n\n```\n\n比如，对应上面package.json文件指定的模块，需要运行以下npm命令。\n\n```javascript\n\nnpm install grunt --save-dev\nnpm install grunt-contrib-jshint --save-dev\nnpm install grunt-contrib-concat --save-dev\nnpm install grunt-contrib-uglify --save-dev\nnpm install grunt-contrib-watch --save-dev\n\n```\n\n# 命令脚本文件Gruntfile.js \n\n模块安装完以后，下一步在项目的根目录下，新建脚本文件Gruntfile.js。它是grunt的配置文件，就好像package.json是npm的配置文件一样。Gruntfile.js就是一般的Node.js模块的写法。\n\n```javascript\n\nmodule.exports = function(grunt) {\n\n  // 配置Grunt各种模块的参数\n  grunt.initConfig({\n    jshint: { /* jshint的参数 */ },\n    concat: { /* concat的参数 */ },\n    uglify: { /* uglify的参数 */ },\n    watch:  { /* watch的参数 */ }\n  });\n\n  // 从node_modules目录加载模块文件\n  grunt.loadNpmTasks('grunt-contrib-jshint');\n  grunt.loadNpmTasks('grunt-contrib-concat');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n\n  // 每行registerTask定义一个任务\n  grunt.registerTask('default', ['jshint', 'concat', 'uglify']);\n  grunt.registerTask('check', ['jshint']);\n\n};\n\n```\n\n上面的代码用到了grunt代码的三个方法：\n\n- **grunt.initConfig**：定义各种模块的参数，每一个成员项对应一个同名模块。\n\n- **grunt.loadNpmTasks**：加载完成任务所需的模块。\n\n- **grunt.registerTask**：定义具体的任务。第一个参数为任务名，第二个参数是一个数组，表示该任务需要依次使用的模块。default任务名表示，如果直接输入grunt命令，后面不跟任何参数，这时所调用的模块（该例为jshint，concat和uglify）；该例的check任务则表示使用jshint插件对代码进行语法检查。\n\n上面的代码一共加载了四个模块：jshint（检查语法错误）、concat（合并文件）、uglify（压缩代码）和watch（自动执行）。接下来，有两种使用方法。\n\n（1）命令行执行某个模块，比如\n\n```javascript\n\ngrunt jshint\n\n```\n\n上面代码表示运行jshint模块。\n\n（2）命令行执行某个任务。比如\n\n```javascript\n\ngrunt check\n\n```\n\n上面代码表示运行check任务。如果运行成功，就会显示“Done, without errors.”。\n\n如果没有给出任务名，只键入grunt，就表示执行默认的default任务。\n\n# Gruntfile.js实例：grunt-contrib-cssmin模块\n\n下面通过cssmin模块，演示如何编写Gruntfile.js文件。cssmin模块的作用是最小化CSS文件。\n\n首先，在项目的根目录下安装该模块。\n\n```javascript\n\nnpm install grunt-contrib-cssmin --save-dev\n\n```\n\n然后，新建文件Gruntfile.js。\n\n```javascript\n\nmodule.exports = function(grunt) {\n\n  grunt.initConfig({\n    cssmin: {\n      minify: {\n        expand: true,\n\t\tcwd: 'css/',\n\t\tsrc: ['*.css', '!*.min.css'],\n\t\tdest: 'css/',\n\t\text: '.min.css'\n\t  },\n      combine: {\n\t    files: {\n\t\t  'css/out.min.css': ['css/part1.min.css', 'css/part2.min.css']\n\t\t}\n\t  }\n    }\n  });\n\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n\n  grunt.registerTask('default', ['cssmin:minify','cssmin:combine']);\n\n};\n\n```\n\n下面详细解释上面代码中的三个方法，下面一个个来看。\n\n**（1）grunt.loadNpmTasks**\n\ngrunt.loadNpmTasks方法载入模块文件。\n\n```javascript\n\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n\n```\n\n你需要使用几个模块，这里就要写几条grunt.loadNpmTasks语句，将各个模块一一加载。\n\n如果加载模块很多，这部分会非常冗长。而且，还存在一个问题，就是凡是在这里加载的模块，也同时出现在package.json文件中。如果使用npm命令卸载模块以后，模块会自动从package.json文件中消失，但是必须手动从Gruntfile.js文件中清除，这样很不方便，一旦忘记，还会出现运行错误。这里有一个解决办法，就是安装load-grunt-tasks模块，然后在Gruntfile.js文件中，用下面的语句替代所有的grunt.loadNpmTasks语句。\n\n```javascript\n\nrequire('load-grunt-tasks')(grunt);\n\n```\n\n这条语句的作用是自动分析package.json文件，自动加载所找到的grunt模块。\n\n**（2）grunt.initConfig**\n\ngrunt.initConfig方法用于模块配置，它接受一个对象作为参数。该对象的成员与使用的同名模块一一对应。由于我们要配置的是cssmin模块，所以里面有一个cssmin成员（属性）。\n\ncssmin（属性）指向一个对象，该对象又包含多个成员。除了一些系统设定的成员（比如options），其他自定义的成员称为目标（target）。一个模块可以有多个目标（target），上面代码里面，cssmin模块共有两个目标，一个是“minify”，用于压缩css文件；另一个是“combine”，用于将多个css文件合并一个文件。\n\n每个目标的具体设置，需要参考该模板的文档。就cssmin来讲，minify目标的参数具体含义如下：\n\n- **expand**：如果设为true，就表示下面文件名的占位符（即\\*号）都要扩展成具体的文件名。\n\n- **cwd**：需要处理的文件（input）所在的目录。\n\n- **src**：表示需要处理的文件。如果采用数组形式，数组的每一项就是一个文件名，可以使用通配符。\n\n- **dest**：表示处理后的文件名或所在目录。\n\n- **ext**：表示处理后的文件后缀名。\n\n除了上面这些参数，还有一些参数也是grunt所有模块通用的。\n\n- **filter**：一个返回布尔值的函数，用于过滤文件名。只有返回值为true的文件，才会被grunt处理。\n\n- **dot**：是否匹配以点号（.）开头的系统文件。\n\n- **makeBase**：如果设置为true，就只匹配文件路径的最后一部分。比如，a?b可以匹配/xyz/123/acb，而不匹配/xyz/acb/123。\n\n关于通配符，含义如下：\n\n- \\*：匹配任意数量的字符，不包括/。\n- ?：匹配单个字符，不包括/。\n- \\*\\*：匹配任意数量的字符，包括/。\n- {}：允许使用逗号分隔的列表，表示“or”（或）关系。\n- !：用于模式的开头，表示只返回不匹配的情况。\n\n比如，foo/\\*.js匹配foo目录下面的文件名以.js结尾的文件，foo/\\*\\*/\\*.js匹配foo目录和它的所有子目录下面的文件名以.js结尾的文件，!\\*.css表示匹配所有后缀名不为“.css”的文件。\n\n使用通配符设置src属性的更多例子：\n\n```javascript\n\n{src: 'foo/th*.js'}grunt-contrib-uglify\n\n{src: 'foo/{a,b}*.js'}\n\n{src: ['foo/a*.js', 'foo/b*.js']}\n\n```\n\n至于combine目标，就只有一个files参数，表示输出文件是css子目录下的out.min.css，输入文件则是css子目录下的part1.min.css和part2.min.css。\n\nfiles参数的格式可以是一个对象，也可以是一个数组。\n\n```javascript\n\nfiles: {\n        'dest/b.js': ['src/bb.js', 'src/bbb.js'],\n        'dest/b1.js': ['src/bb1.js', 'src/bbb1.js'],\n},\n\n// or\n\nfiles: [\n        {src: ['src/aa.js', 'src/aaa.js'], dest: 'dest/a.js'},\n        {src: ['src/aa1.js', 'src/aaa1.js'], dest: 'dest/a1.js'},\n],\n\n```\n\n如果minify目标和combine目标的属性设置有重合的部分，可以另行定义一个与minify和combine平行的options属性。\n\n```javascript\n\n grunt.initConfig({\n    cssmin: {\n\t  options: { /* ... */ },\n      minify: { /* ... */ },\n      combine: { /* ... */ }\n    }\n  });\n\n```\n\n**（3）grunt.registerTask**\n\ngrunt.registerTask方法定义如何调用具体的任务。“default”任务表示如果不提供参数，直接输入grunt命令，则先运行“cssmin:minify”，后运行“cssmin:combine”，即先压缩再合并。如果只执行压缩，或者只执行合并，则需要在grunt命令后面指明“模块名:目标名”。\n\n```javascript\n\ngrunt # 默认情况下，先压缩后合并\n\ngrunt cssmin:minify # 只压缩不合并\n\ngrunt css:combine # 只合并不压缩\n\n```\n\n如果不指明目标，只是指明模块，就表示将所有目标依次运行一遍。\n\n```javascript\n\ngrunt cssmin\n\n```\n\n# 常用模块设置\n\ngrunt的[模块](http://gruntjs.com/plugins)已经超过了2000个，且还在快速增加。下面是一些常用的模块（按字母排序）。\n\n- **grunt-contrib-clean**：删除文件。\n- **grunt-contrib-compass**：使用compass编译sass文件。\n- **grunt-contrib-concat**：合并文件。\n- **grunt-contrib-copy**：复制文件。\n- **grunt-contrib-cssmin**：压缩以及合并CSS文件。\n- **grunt-contrib-imagemin**：图像压缩模块。\n- **grunt-contrib-jshint**：检查JavaScript语法。\n- **grunt-contrib-uglify**：压缩以及合并JavaScript文件。\n- **grunt-contrib-watch**：监视文件变动，做出相应动作。\n\n模块的前缀如果是grunt-contrib，就表示该模块由grunt开发团队维护；如果前缀是grunt（比如grunt-pakmanager），就表示由第三方开发者维护。\n\n以下选几个模块，看看它们配置参数的写法，也就是说如何在grunt.initConfig方法中配置各个模块。\n\n## grunt-contrib-jshint\n\njshint用来检查语法错误，比如分号的使用是否正确、有没有忘记写括号等等。它在grunt.initConfig方法里面的配置代码如下。\n\n```javascript\n\njshint: {\n\toptions: {\n\t\teqeqeq: true,\n\t\ttrailing: true\n\t},\n\tfiles: ['Gruntfile.js', 'lib/**/*.js']\n},\n\n```\n\n上面代码先指定jshint的[检查项目](http://www.jshint.com/docs/options/)，eqeqeq表示要用严格相等运算符取代相等运算符，trailing表示行尾不得有多余的空格。然后，指定files属性，表示检查目标是Gruntfile.js文件，以及lib目录的所有子目录下面的JavaScript文件。\n\n## grunt-contrib-concat\n\nconcat用来合并同类文件，它不仅可以合并JavaScript文件，还可以合并CSS文件。\n\n```javascript\n\nconcat: {\n  js: {\n    src: ['lib/module1.js', 'lib/module2.js', 'lib/plugin.js'],\n    dest: 'dist/script.js'\n  }\n  css: {\n    src: ['style/normalize.css', 'style/base.css', 'style/theme.css'],\n    dest: 'dist/screen.css'\n  }\n},\n\n```\n\njs目标用于合并JavaScript文件，css目标用语合并CSS文件。两者的src属性指定需要合并的文件（input），dest属性指定输出的目标文件（output）。\n\n## grunt-contrib-uglify\n\nuglify模块用来压缩代码，减小文件体积。\n\n```javascript\n\nuglify: {\n  options: {\n    banner: bannerContent,\n    sourceMapRoot: '../',\n    sourceMap: 'distrib/'+name+'.min.js.map',\n    sourceMapUrl: name+'.min.js.map'\n  },\n  target : {\n\texpand: true,\n\tcwd: 'js/origin',\n\tsrc : '*.js',\n\tdest : 'js/'\n  }\n},\n\n```\n\n上面代码中的options属性指定压缩后文件的文件头，以及sourceMap设置；target目标指定输入和输出文件。\n\n## grunt-contrib-copy\n\n[copy模块](https://github.com/gruntjs/grunt-contrib-copy)用于复制文件与目录。\n\n```javascript\n\ncopy: {\n  main: {\n    src: 'src/*',\n    dest: 'dest/',\n  },\n},\n\n```\n\n上面代码将src子目录（只包含它下面的第一层文件和子目录），拷贝到dest子目录下面（即dest/src目录）。如果要更准确控制拷贝行为，比如只拷贝文件、不拷贝目录、不保持目录结构，可以写成下面这样：\n\n```javascript\n\ncopy: {\n  main: {\n    expand: true,\n    cwd: 'src/',\n    src: '**',\n    dest: 'dest/',\n    flatten: true,\n    filter: 'isFile',\n  },\n},\n\n```\n\n## grunt-contrib-watch\n\n[watch模块](https://github.com/gruntjs/grunt-contrib-watch)用来在后台运行，监听指定事件，然后自动运行指定的任务。\n\n```javascript\n\nwatch: {\n   scripts: {\n    files: '**/*.js',\n    tasks: 'jshint',\n\toptions: {\n      livereload: true,\n    },\n   },\n   css: {\n    files: '**/*.sass',\n    tasks: ['sass'],\n    options: {\n      livereload: true,\n    },\n   },\n},\n\n```\n\n设置好上面的代码，打开另一个进程，运行grunt watch。此后，任何的js代码变动，文件保存后就会自动运行jshint任务；任何sass文件变动，文件保存后就会自动运行sass任务。\n\n需要注意的是，这两个任务的options参数之中，都设置了livereload，表示任务运行结束后，自动在浏览器中重载（reload）。这需要在浏览器中安装[livereload插件](http://livereload.com/)。安装后，livereload的默认端口为localhost:35729，但是也可以用livereload: 1337的形式重设端口（localhost:1337）。\n\n# 其他模块\n\n下面是另外一些有用的模块。\n\n## grunt-contrib-clean\n\n该模块用于删除文件或目录。\n\n```javascript\n\nclean: {\n  build: {\n    src: [\"path/to/dir/one\", \"path/to/dir/two\"]\n  }\n}\n\n```\n\n## grunt-autoprefixer\n\n该模块用于为CSS语句加上浏览器前缀。\n\n```javascript\n\nautoprefixer: {\n  build: {\n    expand: true,\n    cwd: 'build',\n    src: [ '**/*.css' ],\n    dest: 'build'\n  }\n},\n\n```\n\n## grunt-contrib-connect\n\n该模块用于在本机运行一个Web Server。\n\n```javascript\n\nconnect: {\n  server: {\n    options: {\n      port: 4000,\n      base: 'build',\n      hostname: '*'\n    }\n  }\n}\n\n```\n\nconnect模块会随着grunt运行结束而结束，为了使它一直处于运行状态，可以把它放在watch模块之前运行。因为watch模块需要手动中止，所以connect模块也就会一直运行。\n\n## grunt-htmlhint\n\n该模块用于检查HTML语法。\n\n```javascript\n\nhtmlhint: {\n    build: {\n        options: {\n            'tag-pair': true,\n            'tagname-lowercase': true,\n            'attr-lowercase': true,\n            'attr-value-double-quotes': true,\n            'spec-char-escape': true,\n            'id-unique': true,\n            'head-script-disabled': true,\n        },\n        src: ['index.html']\n    }\n}\n\n```\n\n上面代码用于检查index.html文件：HTML标记是否配对、标记名和属性名是否小写、属性值是否包括在双引号之中、特殊字符是否转义、HTML元素的id属性是否为唯一值、head部分是否没有script标记。\n\n## grunt-contrib-sass模块\n\n该模块用于将SASS文件转为CSS文件。\n\n```javascript\n\nsass: {\n    build: {\n\t\toptions: {\n            style: 'compressed'\n        },\n        files: {\n            'build/css/master.css': 'assets/sass/master.scss'\n        }\n    }\n}\n\n```\n\n上面代码指定输出文件为build/css/master.css，输入文件为assets/sass/master.scss。\n\n## grunt-markdown\n\n该模块用于将markdown文档转为HTML文档。\n\n```javascript\n\nmarkdown: {\n    all: {\n      files: [\n        {\n          expand: true,\n          src: '*.md',\n          dest: 'docs/html/',\n          ext: '.html'\n        }\n      ],\n      options: {\n        template: 'templates/index.html',\n      }\n    }\n},\n\n```\n\n上面代码指定将md后缀名的文件，转为docs/html/目录下的html文件。template属性指定转换时采用的模板，模板样式如下。\n\n```html\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Document</title>\n</head>\n<body>\n \n    <div id=\"main\" class=\"container\">\n        <%=content%>\n    </div>\n \n</body>\n</html>\n\n```\n","slug":"grunt-install","published":1,"updated":"2016-08-21T12:31:53.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7ur00051ov6ytj4845o","content":"<hr>\n<p>&#x5728;Javascript&#x7684;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7ECF;&#x5E38;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x91CD;&#x590D;&#x6027;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x6BD4;&#x5982;&#x5408;&#x5E76;&#x6587;&#x4EF6;&#x3001;&#x538B;&#x7F29;&#x4EE3;&#x7801;&#x3001;&#x68C0;&#x67E5;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#x3001;&#x5C06;Sass&#x4EE3;&#x7801;&#x8F6C;&#x6210;CSS&#x4EE3;&#x7801;&#x7B49;&#x7B49;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x6765;&#x5B8C;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x65E2;&#x91CD;&#x590D;&#x52B3;&#x52A8;&#x53C8;&#x975E;&#x5E38;&#x8017;&#x65F6;&#x3002;Grunt&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x800C;&#x53D1;&#x660E;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x81EA;&#x52A8;&#x7BA1;&#x7406;&#x548C;&#x8FD0;&#x884C;&#x5404;&#x79CD;&#x4EFB;&#x52A1;&#x3002;</p>\n<p>&#x7B80;&#x5355;&#x8BF4;&#xFF0C;Grunt&#x662F;&#x4E00;&#x4E2A;&#x81EA;&#x52A8;&#x4EFB;&#x52A1;&#x8FD0;&#x884C;&#x5668;&#xFF0C;&#x4F1A;&#x6309;&#x7167;&#x9884;&#x5148;&#x8BBE;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#x81EA;&#x52A8;&#x8FD0;&#x884C;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x8FD9;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#xFF0C;&#x51CF;&#x8F7B;&#x91CD;&#x590D;&#x6027;&#x5DE5;&#x4F5C;&#x5E26;&#x6765;&#x7684;&#x8D1F;&#x62C5;&#x3002;</p>\n<h1 id=\"&#x5B89;&#x88C5;\"><a href=\"#&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;\"></a>&#x5B89;&#x88C5;</h1><p>Grunt&#x57FA;&#x4E8E;Node.js&#xFF0C;&#x5B89;&#x88C5;&#x4E4B;&#x524D;&#x8981;&#x5148;&#x5B89;&#x88C5;Node.js&#xFF0C;&#x7136;&#x540E;&#x8FD0;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">sudo npm install grunt-cli -g</div></pre></td></tr></table></figure>\n<p>grunt-cli&#x8868;&#x793A;&#x5B89;&#x88C5;&#x7684;&#x662F;grunt&#x7684;&#x547D;&#x4EE4;&#x884C;&#x754C;&#x9762;&#xFF0C;&#x53C2;&#x6570;g&#x8868;&#x793A;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#x3002;</p>\n<p>Grunt&#x4F7F;&#x7528;&#x6A21;&#x5757;&#x7ED3;&#x6784;&#xFF0C;&#x9664;&#x4E86;&#x5B89;&#x88C5;&#x547D;&#x4EE4;&#x884C;&#x754C;&#x9762;&#x4EE5;&#x5916;&#xFF0C;&#x8FD8;&#x8981;&#x6839;&#x636E;&#x9700;&#x8981;&#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x6A21;&#x5757;&#x3002;&#x8FD9;&#x4E9B;&#x6A21;&#x5757;&#x5E94;&#x8BE5;&#x91C7;&#x7528;&#x5C40;&#x90E8;&#x5B89;&#x88C5;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;&#x9879;&#x76EE;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x540C;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x3002;</p>\n<p>&#x9996;&#x5148;&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6587;&#x4EF6;package.json&#xFF0C;&#x6307;&#x5B9A;&#x5F53;&#x524D;&#x9879;&#x76EE;&#x6240;&#x9700;&#x7684;&#x6A21;&#x5757;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">{</div><div class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;my-project-name&quot;</span>,</div><div class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.1.0&quot;</span>,</div><div class=\"line\">  <span class=\"string\">&quot;author&quot;</span>: <span class=\"string\">&quot;Your Name&quot;</span>,</div><div class=\"line\">  <span class=\"string\">&quot;devDependencies&quot;</span>: {</div><div class=\"line\">    <span class=\"string\">&quot;grunt&quot;</span>: <span class=\"string\">&quot;0.x.x&quot;</span>,</div><div class=\"line\">    <span class=\"string\">&quot;grunt-contrib-jshint&quot;</span>: <span class=\"string\">&quot;*&quot;</span>,</div><div class=\"line\">    <span class=\"string\">&quot;grunt-contrib-concat&quot;</span>: <span class=\"string\">&quot;~0.1.1&quot;</span>,</div><div class=\"line\">    <span class=\"string\">&quot;grunt-contrib-uglify&quot;</span>: <span class=\"string\">&quot;~0.1.0&quot;</span>,</div><div class=\"line\">    <span class=\"string\">&quot;grunt-contrib-watch&quot;</span>: <span class=\"string\">&quot;~0.1.4&quot;</span></div><div class=\"line\">  }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;package.json&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x9664;&#x4E86;&#x6CE8;&#x660E;&#x9879;&#x76EE;&#x7684;&#x540D;&#x79F0;&#x548C;&#x7248;&#x672C;&#x4EE5;&#x5916;&#xFF0C;&#x8FD8;&#x5728;devDependencies&#x5C5E;&#x6027;&#x4E2D;&#x6307;&#x5B9A;&#x4E86;&#x9879;&#x76EE;&#x4F9D;&#x8D56;&#x7684;grunt&#x6A21;&#x5757;&#x548C;&#x7248;&#x672C;&#xFF1A;grunt&#x6838;&#x5FC3;&#x6A21;&#x5757;&#x4E3A;&#x6700;&#x65B0;&#x7684;0.x.x&#x7248;&#xFF0C;jshint&#x63D2;&#x4EF6;&#x4E3A;&#x6700;&#x65B0;&#x7248;&#x672C;&#xFF0C;concat&#x63D2;&#x4EF6;&#x4E0D;&#x4F4E;&#x4E8E;0.1.1&#x7248;&#xFF0C;uglify&#x63D2;&#x4EF6;&#x4E0D;&#x4F4E;&#x4E8E;0.1.0&#x7248;&#xFF0C;watch&#x63D2;&#x4EF6;&#x4E0D;&#x4F4E;&#x4E8E;0.1.4&#x7248;&#x3002;</p>\n<p>&#x7136;&#x540E;&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x8FD0;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x8FD9;&#x4E9B;&#x63D2;&#x4EF6;&#x5C31;&#x4F1A;&#x88AB;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#x5728;node_modules&#x5B50;&#x76EE;&#x5F55;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x9488;&#x5BF9;&#x5DF2;&#x6709;package.json&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x60F3;&#x8981;&#x81EA;&#x52A8;&#x751F;&#x6210;package.json&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;npm init&#x547D;&#x4EE4;&#xFF0C;&#x6309;&#x7167;&#x5C4F;&#x5E55;&#x63D0;&#x793A;&#x56DE;&#x7B54;&#x6240;&#x9700;&#x6A21;&#x5757;&#x7684;&#x540D;&#x79F0;&#x548C;&#x7248;&#x672C;&#x5373;&#x53EF;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<p>&#x5982;&#x679C;&#x5DF2;&#x6709;&#x7684;package.json&#x6587;&#x4EF6;&#x4E0D;&#x5305;&#x62EC;Grunt&#x6A21;&#x5757;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x76F4;&#x63A5;&#x5B89;&#x88C5;Grunt&#x6A21;&#x5757;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x52A0;&#x4E0A;&#x2013;save-dev&#x53C2;&#x6570;&#xFF0C;&#x8BE5;&#x6A21;&#x5757;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x88AB;&#x52A0;&#x5165;package.json&#x6587;&#x4EF6;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install &lt;<span class=\"built_in\">module</span>&gt; --save-dev</div></pre></td></tr></table></figure>\n<p>&#x6BD4;&#x5982;&#xFF0C;&#x5BF9;&#x5E94;&#x4E0A;&#x9762;package.json&#x6587;&#x4EF6;&#x6307;&#x5B9A;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x9700;&#x8981;&#x8FD0;&#x884C;&#x4EE5;&#x4E0B;npm&#x547D;&#x4EE4;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install grunt --save-dev</div><div class=\"line\">npm install grunt-contrib-jshint --save-dev</div><div class=\"line\">npm install grunt-contrib-concat --save-dev</div><div class=\"line\">npm install grunt-contrib-uglify --save-dev</div><div class=\"line\">npm install grunt-contrib-watch --save-dev</div></pre></td></tr></table></figure>\n<h1 id=\"&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;gruntfilejs\"><a href=\"#&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;Gruntfile-js\" class=\"headerlink\" title=\"&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;Gruntfile.js\"></a>&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;Gruntfile.js</h1><p>&#x6A21;&#x5757;&#x5B89;&#x88C5;&#x5B8C;&#x4EE5;&#x540E;&#xFF0C;&#x4E0B;&#x4E00;&#x6B65;&#x5728;&#x9879;&#x76EE;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x65B0;&#x5EFA;&#x811A;&#x672C;&#x6587;&#x4EF6;Gruntfile.js&#x3002;&#x5B83;&#x662F;grunt&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5C31;&#x597D;&#x50CF;package.json&#x662F;npm&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E00;&#x6837;&#x3002;Gruntfile.js&#x5C31;&#x662F;&#x4E00;&#x822C;&#x7684;Node.js&#x6A21;&#x5757;&#x7684;&#x5199;&#x6CD5;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// &#x914D;&#x7F6E;Grunt&#x5404;&#x79CD;&#x6A21;&#x5757;&#x7684;&#x53C2;&#x6570;</span></div><div class=\"line\">  grunt.initConfig({</div><div class=\"line\">    jshint: { <span class=\"comment\">/* jshint&#x7684;&#x53C2;&#x6570; */</span> },</div><div class=\"line\">    concat: { <span class=\"comment\">/* concat&#x7684;&#x53C2;&#x6570; */</span> },</div><div class=\"line\">    uglify: { <span class=\"comment\">/* uglify&#x7684;&#x53C2;&#x6570; */</span> },</div><div class=\"line\">    watch:  { <span class=\"comment\">/* watch&#x7684;&#x53C2;&#x6570; */</span> }</div><div class=\"line\">  });</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// &#x4ECE;node_modules&#x76EE;&#x5F55;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x6587;&#x4EF6;</span></div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-jshint&apos;</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-concat&apos;</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-uglify&apos;</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-watch&apos;</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// &#x6BCF;&#x884C;registerTask&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;</span></div><div class=\"line\">  grunt.registerTask(<span class=\"string\">&apos;default&apos;</span>, [<span class=\"string\">&apos;jshint&apos;</span>, <span class=\"string\">&apos;concat&apos;</span>, <span class=\"string\">&apos;uglify&apos;</span>]);</div><div class=\"line\">  grunt.registerTask(<span class=\"string\">&apos;check&apos;</span>, [<span class=\"string\">&apos;jshint&apos;</span>]);</div><div class=\"line\"></div><div class=\"line\">};</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x7528;&#x5230;&#x4E86;grunt&#x4EE3;&#x7801;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;</p>\n<ul>\n<li><p><strong>grunt.initConfig</strong>&#xFF1A;&#x5B9A;&#x4E49;&#x5404;&#x79CD;&#x6A21;&#x5757;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x9879;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x6A21;&#x5757;&#x3002;</p>\n</li>\n<li><p><strong>grunt.loadNpmTasks</strong>&#xFF1A;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6240;&#x9700;&#x7684;&#x6A21;&#x5757;&#x3002;</p>\n</li>\n<li><p><strong>grunt.registerTask</strong>&#xFF1A;&#x5B9A;&#x4E49;&#x5177;&#x4F53;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x4EFB;&#x52A1;&#x540D;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x4EFB;&#x52A1;&#x9700;&#x8981;&#x4F9D;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x6A21;&#x5757;&#x3002;default&#x4EFB;&#x52A1;&#x540D;&#x8868;&#x793A;&#xFF0C;&#x5982;&#x679C;&#x76F4;&#x63A5;&#x8F93;&#x5165;grunt&#x547D;&#x4EE4;&#xFF0C;&#x540E;&#x9762;&#x4E0D;&#x8DDF;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x65F6;&#x6240;&#x8C03;&#x7528;&#x7684;&#x6A21;&#x5757;&#xFF08;&#x8BE5;&#x4F8B;&#x4E3A;jshint&#xFF0C;concat&#x548C;uglify&#xFF09;&#xFF1B;&#x8BE5;&#x4F8B;&#x7684;check&#x4EFB;&#x52A1;&#x5219;&#x8868;&#x793A;&#x4F7F;&#x7528;jshint&#x63D2;&#x4EF6;&#x5BF9;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x8BED;&#x6CD5;&#x68C0;&#x67E5;&#x3002;</p>\n</li>\n</ul>\n<p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E00;&#x5171;&#x52A0;&#x8F7D;&#x4E86;&#x56DB;&#x4E2A;&#x6A21;&#x5757;&#xFF1A;jshint&#xFF08;&#x68C0;&#x67E5;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF09;&#x3001;concat&#xFF08;&#x5408;&#x5E76;&#x6587;&#x4EF6;&#xFF09;&#x3001;uglify&#xFF08;&#x538B;&#x7F29;&#x4EE3;&#x7801;&#xFF09;&#x548C;watch&#xFF08;&#x81EA;&#x52A8;&#x6267;&#x884C;&#xFF09;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x3002;</p>\n<p>&#xFF08;1&#xFF09;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x67D0;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x6BD4;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt jshint</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x8FD0;&#x884C;jshint&#x6A21;&#x5757;&#x3002;</p>\n<p>&#xFF08;2&#xFF09;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x67D0;&#x4E2A;&#x4EFB;&#x52A1;&#x3002;&#x6BD4;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt check</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x8FD0;&#x884C;check&#x4EFB;&#x52A1;&#x3002;&#x5982;&#x679C;&#x8FD0;&#x884C;&#x6210;&#x529F;&#xFF0C;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x201C;Done, without errors.&#x201D;&#x3002;</p>\n<p>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x4EFB;&#x52A1;&#x540D;&#xFF0C;&#x53EA;&#x952E;&#x5165;grunt&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x6267;&#x884C;&#x9ED8;&#x8BA4;&#x7684;default&#x4EFB;&#x52A1;&#x3002;</p>\n<h1 id=\"gruntfilejs&#x5B9E;&#x4F8B;grunt-contrib-cssmin&#x6A21;&#x5757;\"><a href=\"#Gruntfile-js&#x5B9E;&#x4F8B;&#xFF1A;grunt-contrib-cssmin&#x6A21;&#x5757;\" class=\"headerlink\" title=\"Gruntfile.js&#x5B9E;&#x4F8B;&#xFF1A;grunt-contrib-cssmin&#x6A21;&#x5757;\"></a>Gruntfile.js&#x5B9E;&#x4F8B;&#xFF1A;grunt-contrib-cssmin&#x6A21;&#x5757;</h1><p>&#x4E0B;&#x9762;&#x901A;&#x8FC7;cssmin&#x6A21;&#x5757;&#xFF0C;&#x6F14;&#x793A;&#x5982;&#x4F55;&#x7F16;&#x5199;Gruntfile.js&#x6587;&#x4EF6;&#x3002;cssmin&#x6A21;&#x5757;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x6700;&#x5C0F;&#x5316;CSS&#x6587;&#x4EF6;&#x3002;</p>\n<p>&#x9996;&#x5148;&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x5B89;&#x88C5;&#x8BE5;&#x6A21;&#x5757;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install grunt-contrib-cssmin --save-dev</div></pre></td></tr></table></figure>\n<p>&#x7136;&#x540E;&#xFF0C;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;Gruntfile.js&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>{</div><div class=\"line\"></div><div class=\"line\">  grunt.initConfig({</div><div class=\"line\">    cssmin: {</div><div class=\"line\">      minify: {</div><div class=\"line\">        expand: <span class=\"literal\">true</span>,</div><div class=\"line\">\t\tcwd: <span class=\"string\">&apos;css/&apos;</span>,</div><div class=\"line\">\t\tsrc: [<span class=\"string\">&apos;*.css&apos;</span>, <span class=\"string\">&apos;!*.min.css&apos;</span>],</div><div class=\"line\">\t\tdest: <span class=\"string\">&apos;css/&apos;</span>,</div><div class=\"line\">\t\text: <span class=\"string\">&apos;.min.css&apos;</span></div><div class=\"line\">\t  },</div><div class=\"line\">      combine: {</div><div class=\"line\">\t    files: {</div><div class=\"line\">\t\t  <span class=\"string\">&apos;css/out.min.css&apos;</span>: [<span class=\"string\">&apos;css/part1.min.css&apos;</span>, <span class=\"string\">&apos;css/part2.min.css&apos;</span>]</div><div class=\"line\">\t\t}</div><div class=\"line\">\t  }</div><div class=\"line\">    }</div><div class=\"line\">  });</div><div class=\"line\"></div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-cssmin&apos;</span>);</div><div class=\"line\"></div><div class=\"line\">  grunt.registerTask(<span class=\"string\">&apos;default&apos;</span>, [<span class=\"string\">&apos;cssmin:minify&apos;</span>,<span class=\"string\">&apos;cssmin:combine&apos;</span>]);</div><div class=\"line\"></div><div class=\"line\">};</div></pre></td></tr></table></figure>\n<p>&#x4E0B;&#x9762;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x4E0B;&#x9762;&#x4E00;&#x4E2A;&#x4E2A;&#x6765;&#x770B;&#x3002;</p>\n<p><strong>&#xFF08;1&#xFF09;grunt.loadNpmTasks</strong></p>\n<p>grunt.loadNpmTasks&#x65B9;&#x6CD5;&#x8F7D;&#x5165;&#x6A21;&#x5757;&#x6587;&#x4EF6;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt.loadNpmTasks(<span class=\"string\">&apos;grunt-contrib-cssmin&apos;</span>);</div></pre></td></tr></table></figure>\n<p>&#x4F60;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x51E0;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x8981;&#x5199;&#x51E0;&#x6761;grunt.loadNpmTasks&#x8BED;&#x53E5;&#xFF0C;&#x5C06;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x4E00;&#x4E00;&#x52A0;&#x8F7D;&#x3002;</p>\n<p>&#x5982;&#x679C;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x5F88;&#x591A;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x4F1A;&#x975E;&#x5E38;&#x5197;&#x957F;&#x3002;&#x800C;&#x4E14;&#xFF0C;&#x8FD8;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;&#x51E1;&#x662F;&#x5728;&#x8FD9;&#x91CC;&#x52A0;&#x8F7D;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x4E5F;&#x540C;&#x65F6;&#x51FA;&#x73B0;&#x5728;package.json&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x5982;&#x679C;&#x4F7F;&#x7528;npm&#x547D;&#x4EE4;&#x5378;&#x8F7D;&#x6A21;&#x5757;&#x4EE5;&#x540E;&#xFF0C;&#x6A21;&#x5757;&#x4F1A;&#x81EA;&#x52A8;&#x4ECE;package.json&#x6587;&#x4EF6;&#x4E2D;&#x6D88;&#x5931;&#xFF0C;&#x4F46;&#x662F;&#x5FC5;&#x987B;&#x624B;&#x52A8;&#x4ECE;Gruntfile.js&#x6587;&#x4EF6;&#x4E2D;&#x6E05;&#x9664;&#xFF0C;&#x8FD9;&#x6837;&#x5F88;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x4E00;&#x65E6;&#x5FD8;&#x8BB0;&#xFF0C;&#x8FD8;&#x4F1A;&#x51FA;&#x73B0;&#x8FD0;&#x884C;&#x9519;&#x8BEF;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x5B89;&#x88C5;load-grunt-tasks&#x6A21;&#x5757;&#xFF0C;&#x7136;&#x540E;&#x5728;Gruntfile.js&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x8BED;&#x53E5;&#x66FF;&#x4EE3;&#x6240;&#x6709;&#x7684;grunt.loadNpmTasks&#x8BED;&#x53E5;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&apos;load-grunt-tasks&apos;</span>)(grunt);</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6761;&#x8BED;&#x53E5;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x81EA;&#x52A8;&#x5206;&#x6790;package.json&#x6587;&#x4EF6;&#xFF0C;&#x81EA;&#x52A8;&#x52A0;&#x8F7D;&#x6240;&#x627E;&#x5230;&#x7684;grunt&#x6A21;&#x5757;&#x3002;</p>\n<p><strong>&#xFF08;2&#xFF09;grunt.initConfig</strong></p>\n<p>grunt.initConfig&#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x6A21;&#x5757;&#x914D;&#x7F6E;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;&#x4E0E;&#x4F7F;&#x7528;&#x7684;&#x540C;&#x540D;&#x6A21;&#x5757;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x3002;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x8981;&#x914D;&#x7F6E;&#x7684;&#x662F;cssmin&#x6A21;&#x5757;&#xFF0C;&#x6240;&#x4EE5;&#x91CC;&#x9762;&#x6709;&#x4E00;&#x4E2A;cssmin&#x6210;&#x5458;&#xFF08;&#x5C5E;&#x6027;&#xFF09;&#x3002;</p>\n<p>cssmin&#xFF08;&#x5C5E;&#x6027;&#xFF09;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x53C8;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x6210;&#x5458;&#x3002;&#x9664;&#x4E86;&#x4E00;&#x4E9B;&#x7CFB;&#x7EDF;&#x8BBE;&#x5B9A;&#x7684;&#x6210;&#x5458;&#xFF08;&#x6BD4;&#x5982;options&#xFF09;&#xFF0C;&#x5176;&#x4ED6;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6210;&#x5458;&#x79F0;&#x4E3A;&#x76EE;&#x6807;&#xFF08;target&#xFF09;&#x3002;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x76EE;&#x6807;&#xFF08;target&#xFF09;&#xFF0C;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x91CC;&#x9762;&#xFF0C;cssmin&#x6A21;&#x5757;&#x5171;&#x6709;&#x4E24;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x201C;minify&#x201D;&#xFF0C;&#x7528;&#x4E8E;&#x538B;&#x7F29;css&#x6587;&#x4EF6;&#xFF1B;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x201C;combine&#x201D;&#xFF0C;&#x7528;&#x4E8E;&#x5C06;&#x591A;&#x4E2A;css&#x6587;&#x4EF6;&#x5408;&#x5E76;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x3002;</p>\n<p>&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x7684;&#x5177;&#x4F53;&#x8BBE;&#x7F6E;&#xFF0C;&#x9700;&#x8981;&#x53C2;&#x8003;&#x8BE5;&#x6A21;&#x677F;&#x7684;&#x6587;&#x6863;&#x3002;&#x5C31;cssmin&#x6765;&#x8BB2;&#xFF0C;minify&#x76EE;&#x6807;&#x7684;&#x53C2;&#x6570;&#x5177;&#x4F53;&#x542B;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>\n<ul>\n<li><p><strong>expand</strong>&#xFF1A;&#x5982;&#x679C;&#x8BBE;&#x4E3A;true&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x4E0B;&#x9762;&#x6587;&#x4EF6;&#x540D;&#x7684;&#x5360;&#x4F4D;&#x7B26;&#xFF08;&#x5373;*&#x53F7;&#xFF09;&#x90FD;&#x8981;&#x6269;&#x5C55;&#x6210;&#x5177;&#x4F53;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x3002;</p>\n</li>\n<li><p><strong>cwd</strong>&#xFF1A;&#x9700;&#x8981;&#x5904;&#x7406;&#x7684;&#x6587;&#x4EF6;&#xFF08;input&#xFF09;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x3002;</p>\n</li>\n<li><p><strong>src</strong>&#xFF1A;&#x8868;&#x793A;&#x9700;&#x8981;&#x5904;&#x7406;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528;&#x6570;&#x7EC4;&#x5F62;&#x5F0F;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E00;&#x9879;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x901A;&#x914D;&#x7B26;&#x3002;</p>\n</li>\n<li><p><strong>dest</strong>&#xFF1A;&#x8868;&#x793A;&#x5904;&#x7406;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x6216;&#x6240;&#x5728;&#x76EE;&#x5F55;&#x3002;</p>\n</li>\n<li><p><strong>ext</strong>&#xFF1A;&#x8868;&#x793A;&#x5904;&#x7406;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x540E;&#x7F00;&#x540D;&#x3002;</p>\n</li>\n</ul>\n<p>&#x9664;&#x4E86;&#x4E0A;&#x9762;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#x4E5F;&#x662F;grunt&#x6240;&#x6709;&#x6A21;&#x5757;&#x901A;&#x7528;&#x7684;&#x3002;</p>\n<ul>\n<li><p><strong>filter</strong>&#xFF1A;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x5E03;&#x5C14;&#x503C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x8FC7;&#x6EE4;&#x6587;&#x4EF6;&#x540D;&#x3002;&#x53EA;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;true&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x624D;&#x4F1A;&#x88AB;grunt&#x5904;&#x7406;&#x3002;</p>\n</li>\n<li><p><strong>dot</strong>&#xFF1A;&#x662F;&#x5426;&#x5339;&#x914D;&#x4EE5;&#x70B9;&#x53F7;&#xFF08;.&#xFF09;&#x5F00;&#x5934;&#x7684;&#x7CFB;&#x7EDF;&#x6587;&#x4EF6;&#x3002;</p>\n</li>\n<li><p><strong>makeBase</strong>&#xFF1A;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;true&#xFF0C;&#x5C31;&#x53EA;&#x5339;&#x914D;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x6BD4;&#x5982;&#xFF0C;a?b&#x53EF;&#x4EE5;&#x5339;&#x914D;/xyz/123/acb&#xFF0C;&#x800C;&#x4E0D;&#x5339;&#x914D;/xyz/acb/123&#x3002;</p>\n</li>\n</ul>\n<p>&#x5173;&#x4E8E;&#x901A;&#x914D;&#x7B26;&#xFF0C;&#x542B;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>\n<ul>\n<li>*&#xFF1A;&#x5339;&#x914D;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;/&#x3002;</li>\n<li>?&#xFF1A;&#x5339;&#x914D;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;/&#x3002;</li>\n<li>**&#xFF1A;&#x5339;&#x914D;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5305;&#x62EC;/&#x3002;</li>\n<li>{}&#xFF1A;&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x9017;&#x53F7;&#x5206;&#x9694;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x8868;&#x793A;&#x201C;or&#x201D;&#xFF08;&#x6216;&#xFF09;&#x5173;&#x7CFB;&#x3002;</li>\n<li>!&#xFF1A;&#x7528;&#x4E8E;&#x6A21;&#x5F0F;&#x7684;&#x5F00;&#x5934;&#xFF0C;&#x8868;&#x793A;&#x53EA;&#x8FD4;&#x56DE;&#x4E0D;&#x5339;&#x914D;&#x7684;&#x60C5;&#x51B5;&#x3002;</li>\n</ul>\n<p>&#x6BD4;&#x5982;&#xFF0C;foo/*.js&#x5339;&#x914D;foo&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x4EE5;.js&#x7ED3;&#x5C3E;&#x7684;&#x6587;&#x4EF6;&#xFF0C;foo/**/*.js&#x5339;&#x914D;foo&#x76EE;&#x5F55;&#x548C;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5B50;&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x4EE5;.js&#x7ED3;&#x5C3E;&#x7684;&#x6587;&#x4EF6;&#xFF0C;!*.css&#x8868;&#x793A;&#x5339;&#x914D;&#x6240;&#x6709;&#x540E;&#x7F00;&#x540D;&#x4E0D;&#x4E3A;&#x201C;.css&#x201D;&#x7684;&#x6587;&#x4EF6;&#x3002;</p>\n<p>&#x4F7F;&#x7528;&#x901A;&#x914D;&#x7B26;&#x8BBE;&#x7F6E;src&#x5C5E;&#x6027;&#x7684;&#x66F4;&#x591A;&#x4F8B;&#x5B50;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">{src: <span class=\"string\">&apos;foo/th*.js&apos;</span>}grunt-contrib-uglify</div><div class=\"line\"></div><div class=\"line\">{src: <span class=\"string\">&apos;foo/{a,b}*.js&apos;</span>}</div><div class=\"line\"></div><div class=\"line\">{src: [<span class=\"string\">&apos;foo/a*.js&apos;</span>, <span class=\"string\">&apos;foo/b*.js&apos;</span>]}</div></pre></td></tr></table></figure>\n<p>&#x81F3;&#x4E8E;combine&#x76EE;&#x6807;&#xFF0C;&#x5C31;&#x53EA;&#x6709;&#x4E00;&#x4E2A;files&#x53C2;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x662F;css&#x5B50;&#x76EE;&#x5F55;&#x4E0B;&#x7684;out.min.css&#xFF0C;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5219;&#x662F;css&#x5B50;&#x76EE;&#x5F55;&#x4E0B;&#x7684;part1.min.css&#x548C;part2.min.css&#x3002;</p>\n<p>files&#x53C2;&#x6570;&#x7684;&#x683C;&#x5F0F;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">files: {</div><div class=\"line\">        <span class=\"string\">&apos;dest/b.js&apos;</span>: [<span class=\"string\">&apos;src/bb.js&apos;</span>, <span class=\"string\">&apos;src/bbb.js&apos;</span>],</div><div class=\"line\">        <span class=\"string\">&apos;dest/b1.js&apos;</span>: [<span class=\"string\">&apos;src/bb1.js&apos;</span>, <span class=\"string\">&apos;src/bbb1.js&apos;</span>],</div><div class=\"line\">},</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// or</span></div><div class=\"line\"></div><div class=\"line\">files: [</div><div class=\"line\">        {src: [<span class=\"string\">&apos;src/aa.js&apos;</span>, <span class=\"string\">&apos;src/aaa.js&apos;</span>], dest: <span class=\"string\">&apos;dest/a.js&apos;</span>},</div><div class=\"line\">        {src: [<span class=\"string\">&apos;src/aa1.js&apos;</span>, <span class=\"string\">&apos;src/aaa1.js&apos;</span>], dest: <span class=\"string\">&apos;dest/a1.js&apos;</span>},</div><div class=\"line\">],</div></pre></td></tr></table></figure>\n<p>&#x5982;&#x679C;minify&#x76EE;&#x6807;&#x548C;combine&#x76EE;&#x6807;&#x7684;&#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x6709;&#x91CD;&#x5408;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x53EF;&#x4EE5;&#x53E6;&#x884C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4E0E;minify&#x548C;combine&#x5E73;&#x884C;&#x7684;options&#x5C5E;&#x6027;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt.initConfig({</div><div class=\"line\">   cssmin: {</div><div class=\"line\">  options: { <span class=\"comment\">/* ... */</span> },</div><div class=\"line\">     minify: { <span class=\"comment\">/* ... */</span> },</div><div class=\"line\">     combine: { <span class=\"comment\">/* ... */</span> }</div><div class=\"line\">   }</div><div class=\"line\"> });</div></pre></td></tr></table></figure>\n<p><strong>&#xFF08;3&#xFF09;grunt.registerTask</strong></p>\n<p>grunt.registerTask&#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x5982;&#x4F55;&#x8C03;&#x7528;&#x5177;&#x4F53;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x201C;default&#x201D;&#x4EFB;&#x52A1;&#x8868;&#x793A;&#x5982;&#x679C;&#x4E0D;&#x63D0;&#x4F9B;&#x53C2;&#x6570;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x5165;grunt&#x547D;&#x4EE4;&#xFF0C;&#x5219;&#x5148;&#x8FD0;&#x884C;&#x201C;cssmin:minify&#x201D;&#xFF0C;&#x540E;&#x8FD0;&#x884C;&#x201C;cssmin:combine&#x201D;&#xFF0C;&#x5373;&#x5148;&#x538B;&#x7F29;&#x518D;&#x5408;&#x5E76;&#x3002;&#x5982;&#x679C;&#x53EA;&#x6267;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x6267;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5728;grunt&#x547D;&#x4EE4;&#x540E;&#x9762;&#x6307;&#x660E;&#x201C;&#x6A21;&#x5757;&#x540D;:&#x76EE;&#x6807;&#x540D;&#x201D;&#x3002;</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt # &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5148;&#x538B;&#x7F29;&#x540E;&#x5408;&#x5E76;</div><div class=\"line\"></div><div class=\"line\">grunt cssmin:minify # &#x53EA;&#x538B;&#x7F29;&#x4E0D;&#x5408;&#x5E76;</div><div class=\"line\"></div><div class=\"line\">grunt css:combine # &#x53EA;&#x5408;&#x5E76;&#x4E0D;&#x538B;&#x7F29;</div></pre></td></tr></table></figure>\n<p>&#x5982;&#x679C;&#x4E0D;&#x6307;&#x660E;&#x76EE;&#x6807;&#xFF0C;&#x53EA;&#x662F;&#x6307;&#x660E;&#x6A21;&#x5757;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x5C06;&#x6240;&#x6709;&#x76EE;&#x6807;&#x4F9D;&#x6B21;&#x8FD0;&#x884C;&#x4E00;&#x904D;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt cssmin</div></pre></td></tr></table></figure>\n<h1 id=\"&#x5E38;&#x7528;&#x6A21;&#x5757;&#x8BBE;&#x7F6E;\"><a href=\"#&#x5E38;&#x7528;&#x6A21;&#x5757;&#x8BBE;&#x7F6E;\" class=\"headerlink\" title=\"&#x5E38;&#x7528;&#x6A21;&#x5757;&#x8BBE;&#x7F6E;\"></a>&#x5E38;&#x7528;&#x6A21;&#x5757;&#x8BBE;&#x7F6E;</h1><p>grunt&#x7684;<a href=\"http://gruntjs.com/plugins\" target=\"_blank\" rel=\"external\">&#x6A21;&#x5757;</a>&#x5DF2;&#x7ECF;&#x8D85;&#x8FC7;&#x4E86;2000&#x4E2A;&#xFF0C;&#x4E14;&#x8FD8;&#x5728;&#x5FEB;&#x901F;&#x589E;&#x52A0;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x6A21;&#x5757;&#xFF08;&#x6309;&#x5B57;&#x6BCD;&#x6392;&#x5E8F;&#xFF09;&#x3002;</p>\n<ul>\n<li><strong>grunt-contrib-clean</strong>&#xFF1A;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-compass</strong>&#xFF1A;&#x4F7F;&#x7528;compass&#x7F16;&#x8BD1;sass&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-concat</strong>&#xFF1A;&#x5408;&#x5E76;&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-copy</strong>&#xFF1A;&#x590D;&#x5236;&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-cssmin</strong>&#xFF1A;&#x538B;&#x7F29;&#x4EE5;&#x53CA;&#x5408;&#x5E76;CSS&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-imagemin</strong>&#xFF1A;&#x56FE;&#x50CF;&#x538B;&#x7F29;&#x6A21;&#x5757;&#x3002;</li>\n<li><strong>grunt-contrib-jshint</strong>&#xFF1A;&#x68C0;&#x67E5;JavaScript&#x8BED;&#x6CD5;&#x3002;</li>\n<li><strong>grunt-contrib-uglify</strong>&#xFF1A;&#x538B;&#x7F29;&#x4EE5;&#x53CA;&#x5408;&#x5E76;JavaScript&#x6587;&#x4EF6;&#x3002;</li>\n<li><strong>grunt-contrib-watch</strong>&#xFF1A;&#x76D1;&#x89C6;&#x6587;&#x4EF6;&#x53D8;&#x52A8;&#xFF0C;&#x505A;&#x51FA;&#x76F8;&#x5E94;&#x52A8;&#x4F5C;&#x3002;</li>\n</ul>\n<p>&#x6A21;&#x5757;&#x7684;&#x524D;&#x7F00;&#x5982;&#x679C;&#x662F;grunt-contrib&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x8BE5;&#x6A21;&#x5757;&#x7531;grunt&#x5F00;&#x53D1;&#x56E2;&#x961F;&#x7EF4;&#x62A4;&#xFF1B;&#x5982;&#x679C;&#x524D;&#x7F00;&#x662F;grunt&#xFF08;&#x6BD4;&#x5982;grunt-pakmanager&#xFF09;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x7531;&#x7B2C;&#x4E09;&#x65B9;&#x5F00;&#x53D1;&#x8005;&#x7EF4;&#x62A4;&#x3002;</p>\n<p>&#x4EE5;&#x4E0B;&#x9009;&#x51E0;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x770B;&#x770B;&#x5B83;&#x4EEC;&#x914D;&#x7F6E;&#x53C2;&#x6570;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5982;&#x4F55;&#x5728;grunt.initConfig&#x65B9;&#x6CD5;&#x4E2D;&#x914D;&#x7F6E;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x3002;</p>\n<h2 id=\"grunt-contrib-jshint\"><a href=\"#grunt-contrib-jshint\" class=\"headerlink\" title=\"grunt-contrib-jshint\"></a>grunt-contrib-jshint</h2><p>jshint&#x7528;&#x6765;&#x68C0;&#x67E5;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x6BD4;&#x5982;&#x5206;&#x53F7;&#x7684;&#x4F7F;&#x7528;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3001;&#x6709;&#x6CA1;&#x6709;&#x5FD8;&#x8BB0;&#x5199;&#x62EC;&#x53F7;&#x7B49;&#x7B49;&#x3002;&#x5B83;&#x5728;grunt.initConfig&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x7684;&#x914D;&#x7F6E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">jshint: {</div><div class=\"line\">\toptions: {</div><div class=\"line\">\t\teqeqeq: <span class=\"literal\">true</span>,</div><div class=\"line\">\t\ttrailing: <span class=\"literal\">true</span></div><div class=\"line\">\t},</div><div class=\"line\">\tfiles: [<span class=\"string\">&apos;Gruntfile.js&apos;</span>, <span class=\"string\">&apos;lib/**/*.js&apos;</span>]</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x5148;&#x6307;&#x5B9A;jshint&#x7684;<a href=\"http://www.jshint.com/docs/options/\" target=\"_blank\" rel=\"external\">&#x68C0;&#x67E5;&#x9879;&#x76EE;</a>&#xFF0C;eqeqeq&#x8868;&#x793A;&#x8981;&#x7528;&#x4E25;&#x683C;&#x76F8;&#x7B49;&#x8FD0;&#x7B97;&#x7B26;&#x53D6;&#x4EE3;&#x76F8;&#x7B49;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;trailing&#x8868;&#x793A;&#x884C;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6307;&#x5B9A;files&#x5C5E;&#x6027;&#xFF0C;&#x8868;&#x793A;&#x68C0;&#x67E5;&#x76EE;&#x6807;&#x662F;Gruntfile.js&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;lib&#x76EE;&#x5F55;&#x7684;&#x6240;&#x6709;&#x5B50;&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;JavaScript&#x6587;&#x4EF6;&#x3002;</p>\n<h2 id=\"grunt-contrib-concat\"><a href=\"#grunt-contrib-concat\" class=\"headerlink\" title=\"grunt-contrib-concat\"></a>grunt-contrib-concat</h2><p>concat&#x7528;&#x6765;&#x5408;&#x5E76;&#x540C;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x5408;&#x5E76;JavaScript&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5408;&#x5E76;CSS&#x6587;&#x4EF6;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">concat: {</div><div class=\"line\">  js: {</div><div class=\"line\">    src: [<span class=\"string\">&apos;lib/module1.js&apos;</span>, <span class=\"string\">&apos;lib/module2.js&apos;</span>, <span class=\"string\">&apos;lib/plugin.js&apos;</span>],</div><div class=\"line\">    dest: <span class=\"string\">&apos;dist/script.js&apos;</span></div><div class=\"line\">  }</div><div class=\"line\">  css: {</div><div class=\"line\">    src: [<span class=\"string\">&apos;style/normalize.css&apos;</span>, <span class=\"string\">&apos;style/base.css&apos;</span>, <span class=\"string\">&apos;style/theme.css&apos;</span>],</div><div class=\"line\">    dest: <span class=\"string\">&apos;dist/screen.css&apos;</span></div><div class=\"line\">  }</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>js&#x76EE;&#x6807;&#x7528;&#x4E8E;&#x5408;&#x5E76;JavaScript&#x6587;&#x4EF6;&#xFF0C;css&#x76EE;&#x6807;&#x7528;&#x8BED;&#x5408;&#x5E76;CSS&#x6587;&#x4EF6;&#x3002;&#x4E24;&#x8005;&#x7684;src&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x9700;&#x8981;&#x5408;&#x5E76;&#x7684;&#x6587;&#x4EF6;&#xFF08;input&#xFF09;&#xFF0C;dest&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF08;output&#xFF09;&#x3002;</p>\n<h2 id=\"grunt-contrib-uglify\"><a href=\"#grunt-contrib-uglify\" class=\"headerlink\" title=\"grunt-contrib-uglify\"></a>grunt-contrib-uglify</h2><p>uglify&#x6A21;&#x5757;&#x7528;&#x6765;&#x538B;&#x7F29;&#x4EE3;&#x7801;&#xFF0C;&#x51CF;&#x5C0F;&#x6587;&#x4EF6;&#x4F53;&#x79EF;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">uglify: {</div><div class=\"line\">  options: {</div><div class=\"line\">    banner: bannerContent,</div><div class=\"line\">    sourceMapRoot: <span class=\"string\">&apos;../&apos;</span>,</div><div class=\"line\">    sourceMap: <span class=\"string\">&apos;distrib/&apos;</span>+name+<span class=\"string\">&apos;.min.js.map&apos;</span>,</div><div class=\"line\">    sourceMapUrl: name+<span class=\"string\">&apos;.min.js.map&apos;</span></div><div class=\"line\">  },</div><div class=\"line\">  target : {</div><div class=\"line\">\texpand: <span class=\"literal\">true</span>,</div><div class=\"line\">\tcwd: <span class=\"string\">&apos;js/origin&apos;</span>,</div><div class=\"line\">\tsrc : <span class=\"string\">&apos;*.js&apos;</span>,</div><div class=\"line\">\tdest : <span class=\"string\">&apos;js/&apos;</span></div><div class=\"line\">  }</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;options&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x538B;&#x7F29;&#x540E;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x5934;&#xFF0C;&#x4EE5;&#x53CA;sourceMap&#x8BBE;&#x7F6E;&#xFF1B;target&#x76EE;&#x6807;&#x6307;&#x5B9A;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x3002;</p>\n<h2 id=\"grunt-contrib-copy\"><a href=\"#grunt-contrib-copy\" class=\"headerlink\" title=\"grunt-contrib-copy\"></a>grunt-contrib-copy</h2><p><a href=\"https://github.com/gruntjs/grunt-contrib-copy\" target=\"_blank\" rel=\"external\">copy&#x6A21;&#x5757;</a>&#x7528;&#x4E8E;&#x590D;&#x5236;&#x6587;&#x4EF6;&#x4E0E;&#x76EE;&#x5F55;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">copy: {</div><div class=\"line\">  main: {</div><div class=\"line\">    src: <span class=\"string\">&apos;src/*&apos;</span>,</div><div class=\"line\">    dest: <span class=\"string\">&apos;dest/&apos;</span>,</div><div class=\"line\">  },</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x5C06;src&#x5B50;&#x76EE;&#x5F55;&#xFF08;&#x53EA;&#x5305;&#x542B;&#x5B83;&#x4E0B;&#x9762;&#x7684;&#x7B2C;&#x4E00;&#x5C42;&#x6587;&#x4EF6;&#x548C;&#x5B50;&#x76EE;&#x5F55;&#xFF09;&#xFF0C;&#x62F7;&#x8D1D;&#x5230;dest&#x5B50;&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#xFF08;&#x5373;dest/src&#x76EE;&#x5F55;&#xFF09;&#x3002;&#x5982;&#x679C;&#x8981;&#x66F4;&#x51C6;&#x786E;&#x63A7;&#x5236;&#x62F7;&#x8D1D;&#x884C;&#x4E3A;&#xFF0C;&#x6BD4;&#x5982;&#x53EA;&#x62F7;&#x8D1D;&#x6587;&#x4EF6;&#x3001;&#x4E0D;&#x62F7;&#x8D1D;&#x76EE;&#x5F55;&#x3001;&#x4E0D;&#x4FDD;&#x6301;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF0C;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">copy: {</div><div class=\"line\">  main: {</div><div class=\"line\">    expand: <span class=\"literal\">true</span>,</div><div class=\"line\">    cwd: <span class=\"string\">&apos;src/&apos;</span>,</div><div class=\"line\">    src: <span class=\"string\">&apos;**&apos;</span>,</div><div class=\"line\">    dest: <span class=\"string\">&apos;dest/&apos;</span>,</div><div class=\"line\">    flatten: <span class=\"literal\">true</span>,</div><div class=\"line\">    filter: <span class=\"string\">&apos;isFile&apos;</span>,</div><div class=\"line\">  },</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-contrib-watch\"><a href=\"#grunt-contrib-watch\" class=\"headerlink\" title=\"grunt-contrib-watch\"></a>grunt-contrib-watch</h2><p><a href=\"https://github.com/gruntjs/grunt-contrib-watch\" target=\"_blank\" rel=\"external\">watch&#x6A21;&#x5757;</a>&#x7528;&#x6765;&#x5728;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#xFF0C;&#x76D1;&#x542C;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x81EA;&#x52A8;&#x8FD0;&#x884C;&#x6307;&#x5B9A;&#x7684;&#x4EFB;&#x52A1;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">watch: {</div><div class=\"line\">   scripts: {</div><div class=\"line\">    files: <span class=\"string\">&apos;**/*.js&apos;</span>,</div><div class=\"line\">    tasks: <span class=\"string\">&apos;jshint&apos;</span>,</div><div class=\"line\">\toptions: {</div><div class=\"line\">      livereload: <span class=\"literal\">true</span>,</div><div class=\"line\">    },</div><div class=\"line\">   },</div><div class=\"line\">   css: {</div><div class=\"line\">    files: <span class=\"string\">&apos;**/*.sass&apos;</span>,</div><div class=\"line\">    tasks: [<span class=\"string\">&apos;sass&apos;</span>],</div><div class=\"line\">    options: {</div><div class=\"line\">      livereload: <span class=\"literal\">true</span>,</div><div class=\"line\">    },</div><div class=\"line\">   },</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>&#x8BBE;&#x7F6E;&#x597D;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6253;&#x5F00;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x8FD0;&#x884C;grunt watch&#x3002;&#x6B64;&#x540E;&#xFF0C;&#x4EFB;&#x4F55;&#x7684;js&#x4EE3;&#x7801;&#x53D8;&#x52A8;&#xFF0C;&#x6587;&#x4EF6;&#x4FDD;&#x5B58;&#x540E;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x8FD0;&#x884C;jshint&#x4EFB;&#x52A1;&#xFF1B;&#x4EFB;&#x4F55;sass&#x6587;&#x4EF6;&#x53D8;&#x52A8;&#xFF0C;&#x6587;&#x4EF6;&#x4FDD;&#x5B58;&#x540E;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x8FD0;&#x884C;sass&#x4EFB;&#x52A1;&#x3002;</p>\n<p>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;options&#x53C2;&#x6570;&#x4E4B;&#x4E2D;&#xFF0C;&#x90FD;&#x8BBE;&#x7F6E;&#x4E86;livereload&#xFF0C;&#x8868;&#x793A;&#x4EFB;&#x52A1;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x81EA;&#x52A8;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x91CD;&#x8F7D;&#xFF08;reload&#xFF09;&#x3002;&#x8FD9;&#x9700;&#x8981;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x5B89;&#x88C5;<a href=\"http://livereload.com/\" target=\"_blank\" rel=\"external\">livereload&#x63D2;&#x4EF6;</a>&#x3002;&#x5B89;&#x88C5;&#x540E;&#xFF0C;livereload&#x7684;&#x9ED8;&#x8BA4;&#x7AEF;&#x53E3;&#x4E3A;localhost:35729&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;livereload: 1337&#x7684;&#x5F62;&#x5F0F;&#x91CD;&#x8BBE;&#x7AEF;&#x53E3;&#xFF08;localhost:1337&#xFF09;&#x3002;</p>\n<h1 id=\"&#x5176;&#x4ED6;&#x6A21;&#x5757;\"><a href=\"#&#x5176;&#x4ED6;&#x6A21;&#x5757;\" class=\"headerlink\" title=\"&#x5176;&#x4ED6;&#x6A21;&#x5757;\"></a>&#x5176;&#x4ED6;&#x6A21;&#x5757;</h1><p>&#x4E0B;&#x9762;&#x662F;&#x53E6;&#x5916;&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x6A21;&#x5757;&#x3002;</p>\n<h2 id=\"grunt-contrib-clean\"><a href=\"#grunt-contrib-clean\" class=\"headerlink\" title=\"grunt-contrib-clean\"></a>grunt-contrib-clean</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">clean: {</div><div class=\"line\">  build: {</div><div class=\"line\">    src: [<span class=\"string\">&quot;path/to/dir/one&quot;</span>, <span class=\"string\">&quot;path/to/dir/two&quot;</span>]</div><div class=\"line\">  }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-autoprefixer\"><a href=\"#grunt-autoprefixer\" class=\"headerlink\" title=\"grunt-autoprefixer\"></a>grunt-autoprefixer</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x4E3A;CSS&#x8BED;&#x53E5;&#x52A0;&#x4E0A;&#x6D4F;&#x89C8;&#x5668;&#x524D;&#x7F00;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">autoprefixer: {</div><div class=\"line\">  build: {</div><div class=\"line\">    expand: <span class=\"literal\">true</span>,</div><div class=\"line\">    cwd: <span class=\"string\">&apos;build&apos;</span>,</div><div class=\"line\">    src: [ <span class=\"string\">&apos;**/*.css&apos;</span> ],</div><div class=\"line\">    dest: <span class=\"string\">&apos;build&apos;</span></div><div class=\"line\">  }</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-contrib-connect\"><a href=\"#grunt-contrib-connect\" class=\"headerlink\" title=\"grunt-contrib-connect\"></a>grunt-contrib-connect</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5728;&#x672C;&#x673A;&#x8FD0;&#x884C;&#x4E00;&#x4E2A;Web Server&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">connect: {</div><div class=\"line\">  server: {</div><div class=\"line\">    options: {</div><div class=\"line\">      port: <span class=\"number\">4000</span>,</div><div class=\"line\">      base: <span class=\"string\">&apos;build&apos;</span>,</div><div class=\"line\">      hostname: <span class=\"string\">&apos;*&apos;</span></div><div class=\"line\">    }</div><div class=\"line\">  }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>connect&#x6A21;&#x5757;&#x4F1A;&#x968F;&#x7740;grunt&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x800C;&#x7ED3;&#x675F;&#xFF0C;&#x4E3A;&#x4E86;&#x4F7F;&#x5B83;&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x653E;&#x5728;watch&#x6A21;&#x5757;&#x4E4B;&#x524D;&#x8FD0;&#x884C;&#x3002;&#x56E0;&#x4E3A;watch&#x6A21;&#x5757;&#x9700;&#x8981;&#x624B;&#x52A8;&#x4E2D;&#x6B62;&#xFF0C;&#x6240;&#x4EE5;connect&#x6A21;&#x5757;&#x4E5F;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x8FD0;&#x884C;&#x3002;</p>\n<h2 id=\"grunt-htmlhint\"><a href=\"#grunt-htmlhint\" class=\"headerlink\" title=\"grunt-htmlhint\"></a>grunt-htmlhint</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x68C0;&#x67E5;HTML&#x8BED;&#x6CD5;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">htmlhint: {</div><div class=\"line\">    build: {</div><div class=\"line\">        options: {</div><div class=\"line\">            <span class=\"string\">&apos;tag-pair&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;tagname-lowercase&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;attr-lowercase&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;attr-value-double-quotes&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;spec-char-escape&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;id-unique&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">&apos;head-script-disabled&apos;</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        },</div><div class=\"line\">        src: [<span class=\"string\">&apos;index.html&apos;</span>]</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x7528;&#x4E8E;&#x68C0;&#x67E5;index.html&#x6587;&#x4EF6;&#xFF1A;HTML&#x6807;&#x8BB0;&#x662F;&#x5426;&#x914D;&#x5BF9;&#x3001;&#x6807;&#x8BB0;&#x540D;&#x548C;&#x5C5E;&#x6027;&#x540D;&#x662F;&#x5426;&#x5C0F;&#x5199;&#x3001;&#x5C5E;&#x6027;&#x503C;&#x662F;&#x5426;&#x5305;&#x62EC;&#x5728;&#x53CC;&#x5F15;&#x53F7;&#x4E4B;&#x4E2D;&#x3001;&#x7279;&#x6B8A;&#x5B57;&#x7B26;&#x662F;&#x5426;&#x8F6C;&#x4E49;&#x3001;HTML&#x5143;&#x7D20;&#x7684;id&#x5C5E;&#x6027;&#x662F;&#x5426;&#x4E3A;&#x552F;&#x4E00;&#x503C;&#x3001;head&#x90E8;&#x5206;&#x662F;&#x5426;&#x6CA1;&#x6709;script&#x6807;&#x8BB0;&#x3002;</p>\n<h2 id=\"grunt-contrib-sass&#x6A21;&#x5757;\"><a href=\"#grunt-contrib-sass&#x6A21;&#x5757;\" class=\"headerlink\" title=\"grunt-contrib-sass&#x6A21;&#x5757;\"></a>grunt-contrib-sass&#x6A21;&#x5757;</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5C06;SASS&#x6587;&#x4EF6;&#x8F6C;&#x4E3A;CSS&#x6587;&#x4EF6;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">sass: {</div><div class=\"line\">    build: {</div><div class=\"line\">\t\toptions: {</div><div class=\"line\">            style: <span class=\"string\">&apos;compressed&apos;</span></div><div class=\"line\">        },</div><div class=\"line\">        files: {</div><div class=\"line\">            <span class=\"string\">&apos;build/css/master.css&apos;</span>: <span class=\"string\">&apos;assets/sass/master.scss&apos;</span></div><div class=\"line\">        }</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E3A;build/css/master.css&#xFF0C;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x4E3A;assets/sass/master.scss&#x3002;</p>\n<h2 id=\"grunt-markdown\"><a href=\"#grunt-markdown\" class=\"headerlink\" title=\"grunt-markdown\"></a>grunt-markdown</h2><p>&#x8BE5;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5C06;markdown&#x6587;&#x6863;&#x8F6C;&#x4E3A;HTML&#x6587;&#x6863;&#x3002;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">markdown: {</div><div class=\"line\">    all: {</div><div class=\"line\">      files: [</div><div class=\"line\">        {</div><div class=\"line\">          expand: <span class=\"literal\">true</span>,</div><div class=\"line\">          src: <span class=\"string\">&apos;*.md&apos;</span>,</div><div class=\"line\">          dest: <span class=\"string\">&apos;docs/html/&apos;</span>,</div><div class=\"line\">          ext: <span class=\"string\">&apos;.html&apos;</span></div><div class=\"line\">        }</div><div class=\"line\">      ],</div><div class=\"line\">      options: {</div><div class=\"line\">        template: <span class=\"string\">&apos;templates/index.html&apos;</span>,</div><div class=\"line\">      }</div><div class=\"line\">    }</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x6307;&#x5B9A;&#x5C06;md&#x540E;&#x7F00;&#x540D;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8F6C;&#x4E3A;docs/html/&#x76EE;&#x5F55;&#x4E0B;&#x7684;html&#x6587;&#x4EF6;&#x3002;template&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x8F6C;&#x6362;&#x65F6;&#x91C7;&#x7528;&#x7684;&#x6A21;&#x677F;&#xFF0C;&#x6A21;&#x677F;&#x6837;&#x5F0F;&#x5982;&#x4E0B;&#x3002;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;main&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=content%</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<p>在Javascript的开发过程中，经常会遇到一些重复性的任务，比如合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等。通常，我们需要使用不同的工具，来完成不同的任务，既重复劳动又非常耗时。Grunt就是为了解决这个问题而发明的工具，可以帮助我们自动管理和运行各种任务。</p>\n<p>简单说，Grunt是一个自动任务运行器，会按照预先设定的顺序自动运行一系列的任务。这可以简化工作流程，减轻重复性工作带来的负担。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>Grunt基于Node.js，安装之前要先安装Node.js，然后运行下面的命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">sudo npm install grunt-cli -g</div></pre></td></tr></table></figure>\n<p>grunt-cli表示安装的是grunt的命令行界面，参数g表示全局安装。</p>\n<p>Grunt使用模块结构，除了安装命令行界面以外，还要根据需要安装相应的模块。这些模块应该采用局部安装，因为不同项目可能需要同一个模块的不同版本。</p>\n<p>首先，在项目的根目录下，创建一个文本文件package.json，指定当前项目所需的模块。下面就是一个例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"my-project-name\"</span>,</div><div class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>,</div><div class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"Your Name\"</span>,</div><div class=\"line\">  <span class=\"string\">\"devDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"grunt\"</span>: <span class=\"string\">\"0.x.x\"</span>,</div><div class=\"line\">    <span class=\"string\">\"grunt-contrib-jshint\"</span>: <span class=\"string\">\"*\"</span>,</div><div class=\"line\">    <span class=\"string\">\"grunt-contrib-concat\"</span>: <span class=\"string\">\"~0.1.1\"</span>,</div><div class=\"line\">    <span class=\"string\">\"grunt-contrib-uglify\"</span>: <span class=\"string\">\"~0.1.0\"</span>,</div><div class=\"line\">    <span class=\"string\">\"grunt-contrib-watch\"</span>: <span class=\"string\">\"~0.1.4\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面这个package.json文件中，除了注明项目的名称和版本以外，还在devDependencies属性中指定了项目依赖的grunt模块和版本：grunt核心模块为最新的0.x.x版，jshint插件为最新版本，concat插件不低于0.1.1版，uglify插件不低于0.1.0版，watch插件不低于0.1.4版。</p>\n<p>然后，在项目的根目录下运行下面的命令，这些插件就会被自动安装在node_modules子目录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>上面这种方法是针对已有package.json的情况。如果想要自动生成package.json文件，可以使用npm init命令，按照屏幕提示回答所需模块的名称和版本即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<p>如果已有的package.json文件不包括Grunt模块，可以在直接安装Grunt模块的时候，加上–save-dev参数，该模块就会自动被加入package.json文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install &lt;<span class=\"built_in\">module</span>&gt; --save-dev</div></pre></td></tr></table></figure>\n<p>比如，对应上面package.json文件指定的模块，需要运行以下npm命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install grunt --save-dev</div><div class=\"line\">npm install grunt-contrib-jshint --save-dev</div><div class=\"line\">npm install grunt-contrib-concat --save-dev</div><div class=\"line\">npm install grunt-contrib-uglify --save-dev</div><div class=\"line\">npm install grunt-contrib-watch --save-dev</div></pre></td></tr></table></figure>\n<h1 id=\"命令脚本文件Gruntfile-js\"><a href=\"#命令脚本文件Gruntfile-js\" class=\"headerlink\" title=\"命令脚本文件Gruntfile.js\"></a>命令脚本文件Gruntfile.js</h1><p>模块安装完以后，下一步在项目的根目录下，新建脚本文件Gruntfile.js。它是grunt的配置文件，就好像package.json是npm的配置文件一样。Gruntfile.js就是一般的Node.js模块的写法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// 配置Grunt各种模块的参数</span></div><div class=\"line\">  grunt.initConfig(&#123;</div><div class=\"line\">    jshint: &#123; <span class=\"comment\">/* jshint的参数 */</span> &#125;,</div><div class=\"line\">    concat: &#123; <span class=\"comment\">/* concat的参数 */</span> &#125;,</div><div class=\"line\">    uglify: &#123; <span class=\"comment\">/* uglify的参数 */</span> &#125;,</div><div class=\"line\">    watch:  &#123; <span class=\"comment\">/* watch的参数 */</span> &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// 从node_modules目录加载模块文件</span></div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-jshint'</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-concat'</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-uglify'</span>);</div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-watch'</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// 每行registerTask定义一个任务</span></div><div class=\"line\">  grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'jshint'</span>, <span class=\"string\">'concat'</span>, <span class=\"string\">'uglify'</span>]);</div><div class=\"line\">  grunt.registerTask(<span class=\"string\">'check'</span>, [<span class=\"string\">'jshint'</span>]);</div><div class=\"line\"></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>上面的代码用到了grunt代码的三个方法：</p>\n<ul>\n<li><p><strong>grunt.initConfig</strong>：定义各种模块的参数，每一个成员项对应一个同名模块。</p>\n</li>\n<li><p><strong>grunt.loadNpmTasks</strong>：加载完成任务所需的模块。</p>\n</li>\n<li><p><strong>grunt.registerTask</strong>：定义具体的任务。第一个参数为任务名，第二个参数是一个数组，表示该任务需要依次使用的模块。default任务名表示，如果直接输入grunt命令，后面不跟任何参数，这时所调用的模块（该例为jshint，concat和uglify）；该例的check任务则表示使用jshint插件对代码进行语法检查。</p>\n</li>\n</ul>\n<p>上面的代码一共加载了四个模块：jshint（检查语法错误）、concat（合并文件）、uglify（压缩代码）和watch（自动执行）。接下来，有两种使用方法。</p>\n<p>（1）命令行执行某个模块，比如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt jshint</div></pre></td></tr></table></figure>\n<p>上面代码表示运行jshint模块。</p>\n<p>（2）命令行执行某个任务。比如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt check</div></pre></td></tr></table></figure>\n<p>上面代码表示运行check任务。如果运行成功，就会显示“Done, without errors.”。</p>\n<p>如果没有给出任务名，只键入grunt，就表示执行默认的default任务。</p>\n<h1 id=\"Gruntfile-js实例：grunt-contrib-cssmin模块\"><a href=\"#Gruntfile-js实例：grunt-contrib-cssmin模块\" class=\"headerlink\" title=\"Gruntfile.js实例：grunt-contrib-cssmin模块\"></a>Gruntfile.js实例：grunt-contrib-cssmin模块</h1><p>下面通过cssmin模块，演示如何编写Gruntfile.js文件。cssmin模块的作用是最小化CSS文件。</p>\n<p>首先，在项目的根目录下安装该模块。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">npm install grunt-contrib-cssmin --save-dev</div></pre></td></tr></table></figure>\n<p>然后，新建文件Gruntfile.js。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  grunt.initConfig(&#123;</div><div class=\"line\">    cssmin: &#123;</div><div class=\"line\">      minify: &#123;</div><div class=\"line\">        expand: <span class=\"literal\">true</span>,</div><div class=\"line\">\t\tcwd: <span class=\"string\">'css/'</span>,</div><div class=\"line\">\t\tsrc: [<span class=\"string\">'*.css'</span>, <span class=\"string\">'!*.min.css'</span>],</div><div class=\"line\">\t\tdest: <span class=\"string\">'css/'</span>,</div><div class=\"line\">\t\text: <span class=\"string\">'.min.css'</span></div><div class=\"line\">\t  &#125;,</div><div class=\"line\">      combine: &#123;</div><div class=\"line\">\t    files: &#123;</div><div class=\"line\">\t\t  <span class=\"string\">'css/out.min.css'</span>: [<span class=\"string\">'css/part1.min.css'</span>, <span class=\"string\">'css/part2.min.css'</span>]</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t  &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-cssmin'</span>);</div><div class=\"line\"></div><div class=\"line\">  grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'cssmin:minify'</span>,<span class=\"string\">'cssmin:combine'</span>]);</div><div class=\"line\"></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>下面详细解释上面代码中的三个方法，下面一个个来看。</p>\n<p><strong>（1）grunt.loadNpmTasks</strong></p>\n<p>grunt.loadNpmTasks方法载入模块文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-cssmin'</span>);</div></pre></td></tr></table></figure>\n<p>你需要使用几个模块，这里就要写几条grunt.loadNpmTasks语句，将各个模块一一加载。</p>\n<p>如果加载模块很多，这部分会非常冗长。而且，还存在一个问题，就是凡是在这里加载的模块，也同时出现在package.json文件中。如果使用npm命令卸载模块以后，模块会自动从package.json文件中消失，但是必须手动从Gruntfile.js文件中清除，这样很不方便，一旦忘记，还会出现运行错误。这里有一个解决办法，就是安装load-grunt-tasks模块，然后在Gruntfile.js文件中，用下面的语句替代所有的grunt.loadNpmTasks语句。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'load-grunt-tasks'</span>)(grunt);</div></pre></td></tr></table></figure>\n<p>这条语句的作用是自动分析package.json文件，自动加载所找到的grunt模块。</p>\n<p><strong>（2）grunt.initConfig</strong></p>\n<p>grunt.initConfig方法用于模块配置，它接受一个对象作为参数。该对象的成员与使用的同名模块一一对应。由于我们要配置的是cssmin模块，所以里面有一个cssmin成员（属性）。</p>\n<p>cssmin（属性）指向一个对象，该对象又包含多个成员。除了一些系统设定的成员（比如options），其他自定义的成员称为目标（target）。一个模块可以有多个目标（target），上面代码里面，cssmin模块共有两个目标，一个是“minify”，用于压缩css文件；另一个是“combine”，用于将多个css文件合并一个文件。</p>\n<p>每个目标的具体设置，需要参考该模板的文档。就cssmin来讲，minify目标的参数具体含义如下：</p>\n<ul>\n<li><p><strong>expand</strong>：如果设为true，就表示下面文件名的占位符（即*号）都要扩展成具体的文件名。</p>\n</li>\n<li><p><strong>cwd</strong>：需要处理的文件（input）所在的目录。</p>\n</li>\n<li><p><strong>src</strong>：表示需要处理的文件。如果采用数组形式，数组的每一项就是一个文件名，可以使用通配符。</p>\n</li>\n<li><p><strong>dest</strong>：表示处理后的文件名或所在目录。</p>\n</li>\n<li><p><strong>ext</strong>：表示处理后的文件后缀名。</p>\n</li>\n</ul>\n<p>除了上面这些参数，还有一些参数也是grunt所有模块通用的。</p>\n<ul>\n<li><p><strong>filter</strong>：一个返回布尔值的函数，用于过滤文件名。只有返回值为true的文件，才会被grunt处理。</p>\n</li>\n<li><p><strong>dot</strong>：是否匹配以点号（.）开头的系统文件。</p>\n</li>\n<li><p><strong>makeBase</strong>：如果设置为true，就只匹配文件路径的最后一部分。比如，a?b可以匹配/xyz/123/acb，而不匹配/xyz/acb/123。</p>\n</li>\n</ul>\n<p>关于通配符，含义如下：</p>\n<ul>\n<li>*：匹配任意数量的字符，不包括/。</li>\n<li>?：匹配单个字符，不包括/。</li>\n<li>**：匹配任意数量的字符，包括/。</li>\n<li>{}：允许使用逗号分隔的列表，表示“or”（或）关系。</li>\n<li>!：用于模式的开头，表示只返回不匹配的情况。</li>\n</ul>\n<p>比如，foo/*.js匹配foo目录下面的文件名以.js结尾的文件，foo/**/*.js匹配foo目录和它的所有子目录下面的文件名以.js结尾的文件，!*.css表示匹配所有后缀名不为“.css”的文件。</p>\n<p>使用通配符设置src属性的更多例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;src: <span class=\"string\">'foo/th*.js'</span>&#125;grunt-contrib-uglify</div><div class=\"line\"></div><div class=\"line\">&#123;src: <span class=\"string\">'foo/&#123;a,b&#125;*.js'</span>&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;src: [<span class=\"string\">'foo/a*.js'</span>, <span class=\"string\">'foo/b*.js'</span>]&#125;</div></pre></td></tr></table></figure>\n<p>至于combine目标，就只有一个files参数，表示输出文件是css子目录下的out.min.css，输入文件则是css子目录下的part1.min.css和part2.min.css。</p>\n<p>files参数的格式可以是一个对象，也可以是一个数组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">files: &#123;</div><div class=\"line\">        <span class=\"string\">'dest/b.js'</span>: [<span class=\"string\">'src/bb.js'</span>, <span class=\"string\">'src/bbb.js'</span>],</div><div class=\"line\">        <span class=\"string\">'dest/b1.js'</span>: [<span class=\"string\">'src/bb1.js'</span>, <span class=\"string\">'src/bbb1.js'</span>],</div><div class=\"line\">&#125;,</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// or</span></div><div class=\"line\"></div><div class=\"line\">files: [</div><div class=\"line\">        &#123;src: [<span class=\"string\">'src/aa.js'</span>, <span class=\"string\">'src/aaa.js'</span>], dest: <span class=\"string\">'dest/a.js'</span>&#125;,</div><div class=\"line\">        &#123;src: [<span class=\"string\">'src/aa1.js'</span>, <span class=\"string\">'src/aaa1.js'</span>], dest: <span class=\"string\">'dest/a1.js'</span>&#125;,</div><div class=\"line\">],</div></pre></td></tr></table></figure>\n<p>如果minify目标和combine目标的属性设置有重合的部分，可以另行定义一个与minify和combine平行的options属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt.initConfig(&#123;</div><div class=\"line\">   cssmin: &#123;</div><div class=\"line\">  options: &#123; <span class=\"comment\">/* ... */</span> &#125;,</div><div class=\"line\">     minify: &#123; <span class=\"comment\">/* ... */</span> &#125;,</div><div class=\"line\">     combine: &#123; <span class=\"comment\">/* ... */</span> &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure>\n<p><strong>（3）grunt.registerTask</strong></p>\n<p>grunt.registerTask方法定义如何调用具体的任务。“default”任务表示如果不提供参数，直接输入grunt命令，则先运行“cssmin:minify”，后运行“cssmin:combine”，即先压缩再合并。如果只执行压缩，或者只执行合并，则需要在grunt命令后面指明“模块名:目标名”。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt # 默认情况下，先压缩后合并</div><div class=\"line\"></div><div class=\"line\">grunt cssmin:minify # 只压缩不合并</div><div class=\"line\"></div><div class=\"line\">grunt css:combine # 只合并不压缩</div></pre></td></tr></table></figure>\n<p>如果不指明目标，只是指明模块，就表示将所有目标依次运行一遍。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">grunt cssmin</div></pre></td></tr></table></figure>\n<h1 id=\"常用模块设置\"><a href=\"#常用模块设置\" class=\"headerlink\" title=\"常用模块设置\"></a>常用模块设置</h1><p>grunt的<a href=\"http://gruntjs.com/plugins\">模块</a>已经超过了2000个，且还在快速增加。下面是一些常用的模块（按字母排序）。</p>\n<ul>\n<li><strong>grunt-contrib-clean</strong>：删除文件。</li>\n<li><strong>grunt-contrib-compass</strong>：使用compass编译sass文件。</li>\n<li><strong>grunt-contrib-concat</strong>：合并文件。</li>\n<li><strong>grunt-contrib-copy</strong>：复制文件。</li>\n<li><strong>grunt-contrib-cssmin</strong>：压缩以及合并CSS文件。</li>\n<li><strong>grunt-contrib-imagemin</strong>：图像压缩模块。</li>\n<li><strong>grunt-contrib-jshint</strong>：检查JavaScript语法。</li>\n<li><strong>grunt-contrib-uglify</strong>：压缩以及合并JavaScript文件。</li>\n<li><strong>grunt-contrib-watch</strong>：监视文件变动，做出相应动作。</li>\n</ul>\n<p>模块的前缀如果是grunt-contrib，就表示该模块由grunt开发团队维护；如果前缀是grunt（比如grunt-pakmanager），就表示由第三方开发者维护。</p>\n<p>以下选几个模块，看看它们配置参数的写法，也就是说如何在grunt.initConfig方法中配置各个模块。</p>\n<h2 id=\"grunt-contrib-jshint\"><a href=\"#grunt-contrib-jshint\" class=\"headerlink\" title=\"grunt-contrib-jshint\"></a>grunt-contrib-jshint</h2><p>jshint用来检查语法错误，比如分号的使用是否正确、有没有忘记写括号等等。它在grunt.initConfig方法里面的配置代码如下。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">jshint: &#123;</div><div class=\"line\">\toptions: &#123;</div><div class=\"line\">\t\teqeqeq: <span class=\"literal\">true</span>,</div><div class=\"line\">\t\ttrailing: <span class=\"literal\">true</span></div><div class=\"line\">\t&#125;,</div><div class=\"line\">\tfiles: [<span class=\"string\">'Gruntfile.js'</span>, <span class=\"string\">'lib/**/*.js'</span>]</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>上面代码先指定jshint的<a href=\"http://www.jshint.com/docs/options/\">检查项目</a>，eqeqeq表示要用严格相等运算符取代相等运算符，trailing表示行尾不得有多余的空格。然后，指定files属性，表示检查目标是Gruntfile.js文件，以及lib目录的所有子目录下面的JavaScript文件。</p>\n<h2 id=\"grunt-contrib-concat\"><a href=\"#grunt-contrib-concat\" class=\"headerlink\" title=\"grunt-contrib-concat\"></a>grunt-contrib-concat</h2><p>concat用来合并同类文件，它不仅可以合并JavaScript文件，还可以合并CSS文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">concat: &#123;</div><div class=\"line\">  js: &#123;</div><div class=\"line\">    src: [<span class=\"string\">'lib/module1.js'</span>, <span class=\"string\">'lib/module2.js'</span>, <span class=\"string\">'lib/plugin.js'</span>],</div><div class=\"line\">    dest: <span class=\"string\">'dist/script.js'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">  css: &#123;</div><div class=\"line\">    src: [<span class=\"string\">'style/normalize.css'</span>, <span class=\"string\">'style/base.css'</span>, <span class=\"string\">'style/theme.css'</span>],</div><div class=\"line\">    dest: <span class=\"string\">'dist/screen.css'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>js目标用于合并JavaScript文件，css目标用语合并CSS文件。两者的src属性指定需要合并的文件（input），dest属性指定输出的目标文件（output）。</p>\n<h2 id=\"grunt-contrib-uglify\"><a href=\"#grunt-contrib-uglify\" class=\"headerlink\" title=\"grunt-contrib-uglify\"></a>grunt-contrib-uglify</h2><p>uglify模块用来压缩代码，减小文件体积。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">uglify: &#123;</div><div class=\"line\">  options: &#123;</div><div class=\"line\">    banner: bannerContent,</div><div class=\"line\">    sourceMapRoot: <span class=\"string\">'../'</span>,</div><div class=\"line\">    sourceMap: <span class=\"string\">'distrib/'</span>+name+<span class=\"string\">'.min.js.map'</span>,</div><div class=\"line\">    sourceMapUrl: name+<span class=\"string\">'.min.js.map'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  target : &#123;</div><div class=\"line\">\texpand: <span class=\"literal\">true</span>,</div><div class=\"line\">\tcwd: <span class=\"string\">'js/origin'</span>,</div><div class=\"line\">\tsrc : <span class=\"string\">'*.js'</span>,</div><div class=\"line\">\tdest : <span class=\"string\">'js/'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>上面代码中的options属性指定压缩后文件的文件头，以及sourceMap设置；target目标指定输入和输出文件。</p>\n<h2 id=\"grunt-contrib-copy\"><a href=\"#grunt-contrib-copy\" class=\"headerlink\" title=\"grunt-contrib-copy\"></a>grunt-contrib-copy</h2><p><a href=\"https://github.com/gruntjs/grunt-contrib-copy\">copy模块</a>用于复制文件与目录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">copy: &#123;</div><div class=\"line\">  main: &#123;</div><div class=\"line\">    src: <span class=\"string\">'src/*'</span>,</div><div class=\"line\">    dest: <span class=\"string\">'dest/'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>上面代码将src子目录（只包含它下面的第一层文件和子目录），拷贝到dest子目录下面（即dest/src目录）。如果要更准确控制拷贝行为，比如只拷贝文件、不拷贝目录、不保持目录结构，可以写成下面这样：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">copy: &#123;</div><div class=\"line\">  main: &#123;</div><div class=\"line\">    expand: <span class=\"literal\">true</span>,</div><div class=\"line\">    cwd: <span class=\"string\">'src/'</span>,</div><div class=\"line\">    src: <span class=\"string\">'**'</span>,</div><div class=\"line\">    dest: <span class=\"string\">'dest/'</span>,</div><div class=\"line\">    flatten: <span class=\"literal\">true</span>,</div><div class=\"line\">    filter: <span class=\"string\">'isFile'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-contrib-watch\"><a href=\"#grunt-contrib-watch\" class=\"headerlink\" title=\"grunt-contrib-watch\"></a>grunt-contrib-watch</h2><p><a href=\"https://github.com/gruntjs/grunt-contrib-watch\">watch模块</a>用来在后台运行，监听指定事件，然后自动运行指定的任务。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">watch: &#123;</div><div class=\"line\">   scripts: &#123;</div><div class=\"line\">    files: <span class=\"string\">'**/*.js'</span>,</div><div class=\"line\">    tasks: <span class=\"string\">'jshint'</span>,</div><div class=\"line\">\toptions: &#123;</div><div class=\"line\">      livereload: <span class=\"literal\">true</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">   &#125;,</div><div class=\"line\">   css: &#123;</div><div class=\"line\">    files: <span class=\"string\">'**/*.sass'</span>,</div><div class=\"line\">    tasks: [<span class=\"string\">'sass'</span>],</div><div class=\"line\">    options: &#123;</div><div class=\"line\">      livereload: <span class=\"literal\">true</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">   &#125;,</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>设置好上面的代码，打开另一个进程，运行grunt watch。此后，任何的js代码变动，文件保存后就会自动运行jshint任务；任何sass文件变动，文件保存后就会自动运行sass任务。</p>\n<p>需要注意的是，这两个任务的options参数之中，都设置了livereload，表示任务运行结束后，自动在浏览器中重载（reload）。这需要在浏览器中安装<a href=\"http://livereload.com/\">livereload插件</a>。安装后，livereload的默认端口为localhost:35729，但是也可以用livereload: 1337的形式重设端口（localhost:1337）。</p>\n<h1 id=\"其他模块\"><a href=\"#其他模块\" class=\"headerlink\" title=\"其他模块\"></a>其他模块</h1><p>下面是另外一些有用的模块。</p>\n<h2 id=\"grunt-contrib-clean\"><a href=\"#grunt-contrib-clean\" class=\"headerlink\" title=\"grunt-contrib-clean\"></a>grunt-contrib-clean</h2><p>该模块用于删除文件或目录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">clean: &#123;</div><div class=\"line\">  build: &#123;</div><div class=\"line\">    src: [<span class=\"string\">\"path/to/dir/one\"</span>, <span class=\"string\">\"path/to/dir/two\"</span>]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-autoprefixer\"><a href=\"#grunt-autoprefixer\" class=\"headerlink\" title=\"grunt-autoprefixer\"></a>grunt-autoprefixer</h2><p>该模块用于为CSS语句加上浏览器前缀。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">autoprefixer: &#123;</div><div class=\"line\">  build: &#123;</div><div class=\"line\">    expand: <span class=\"literal\">true</span>,</div><div class=\"line\">    cwd: <span class=\"string\">'build'</span>,</div><div class=\"line\">    src: [ <span class=\"string\">'**/*.css'</span> ],</div><div class=\"line\">    dest: <span class=\"string\">'build'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<h2 id=\"grunt-contrib-connect\"><a href=\"#grunt-contrib-connect\" class=\"headerlink\" title=\"grunt-contrib-connect\"></a>grunt-contrib-connect</h2><p>该模块用于在本机运行一个Web Server。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">connect: &#123;</div><div class=\"line\">  server: &#123;</div><div class=\"line\">    options: &#123;</div><div class=\"line\">      port: <span class=\"number\">4000</span>,</div><div class=\"line\">      base: <span class=\"string\">'build'</span>,</div><div class=\"line\">      hostname: <span class=\"string\">'*'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>connect模块会随着grunt运行结束而结束，为了使它一直处于运行状态，可以把它放在watch模块之前运行。因为watch模块需要手动中止，所以connect模块也就会一直运行。</p>\n<h2 id=\"grunt-htmlhint\"><a href=\"#grunt-htmlhint\" class=\"headerlink\" title=\"grunt-htmlhint\"></a>grunt-htmlhint</h2><p>该模块用于检查HTML语法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">htmlhint: &#123;</div><div class=\"line\">    build: &#123;</div><div class=\"line\">        options: &#123;</div><div class=\"line\">            <span class=\"string\">'tag-pair'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'tagname-lowercase'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'attr-lowercase'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'attr-value-double-quotes'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'spec-char-escape'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'id-unique'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">            <span class=\"string\">'head-script-disabled'</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        &#125;,</div><div class=\"line\">        src: [<span class=\"string\">'index.html'</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面代码用于检查index.html文件：HTML标记是否配对、标记名和属性名是否小写、属性值是否包括在双引号之中、特殊字符是否转义、HTML元素的id属性是否为唯一值、head部分是否没有script标记。</p>\n<h2 id=\"grunt-contrib-sass模块\"><a href=\"#grunt-contrib-sass模块\" class=\"headerlink\" title=\"grunt-contrib-sass模块\"></a>grunt-contrib-sass模块</h2><p>该模块用于将SASS文件转为CSS文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">sass: &#123;</div><div class=\"line\">    build: &#123;</div><div class=\"line\">\t\toptions: &#123;</div><div class=\"line\">            style: <span class=\"string\">'compressed'</span></div><div class=\"line\">        &#125;,</div><div class=\"line\">        files: &#123;</div><div class=\"line\">            <span class=\"string\">'build/css/master.css'</span>: <span class=\"string\">'assets/sass/master.scss'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面代码指定输出文件为build/css/master.css，输入文件为assets/sass/master.scss。</p>\n<h2 id=\"grunt-markdown\"><a href=\"#grunt-markdown\" class=\"headerlink\" title=\"grunt-markdown\"></a>grunt-markdown</h2><p>该模块用于将markdown文档转为HTML文档。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">markdown: &#123;</div><div class=\"line\">    all: &#123;</div><div class=\"line\">      files: [</div><div class=\"line\">        &#123;</div><div class=\"line\">          expand: <span class=\"literal\">true</span>,</div><div class=\"line\">          src: <span class=\"string\">'*.md'</span>,</div><div class=\"line\">          dest: <span class=\"string\">'docs/html/'</span>,</div><div class=\"line\">          ext: <span class=\"string\">'.html'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">      ],</div><div class=\"line\">      options: &#123;</div><div class=\"line\">        template: <span class=\"string\">'templates/index.html'</span>,</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>上面代码指定将md后缀名的文件，转为docs/html/目录下的html文件。template属性指定转换时采用的模板，模板样式如下。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=content%</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"gulp使用小例一","date":"2016-08-09T16:00:00.000Z","modifiedOn":"2016-08-09T16:00:00.000Z","_content":"\n----------\ngulp的一个案例，主要是对gulpfile.js中的任务进行分割，完成清理、文件复制同时进行筛选压缩、以及html中js和css引用的替换等\n\n<!-- more -->\n\n#### gulpfile.js\n\n```javascript\n'use strict';\nvar gulp = require('gulp');\nvar config = {\n    pkg: require('./package.json'),\n    publicDir: ['./{public,public/**}'],\n    resourcesDir: ['./{resources/,resources/**}'],\n    apps: ['ads', 'analysis', 'homepage', 'index', 'manage', 'portrait', 'recommend'],\n    destDir: 'dest',\n    version: \"0.01\"\n};\n\n// load plugins\nrequire('gulp-task-loader')(config);\ngulp.task('build', ['clean', 'copy', 'app-concat', 'vendor-concat', 'html-replace']);\n\n```\n**gulp-task-loader**插件默认会寻找**gulp-tasks**目录下的任务\n\n#### clean.js\n```javascript\n'use strict';\nvar del = require('del');\n\nmodule.exports = function() {\n    return del.sync(this.opts.destDir);\n};\n```\n\n#### copy.js\n\n```javascript\n'use strict';\nvar filter = require('gulp-filter');\nvar gulpIgnore = require('gulp-ignore');\nvar bytediff = require('gulp-bytediff');\nvar plumber = require('gulp-plumber');\nvar uglify = require('gulp-uglify');\nvar minifyCss = require('gulp-minify-css');\nvar imagemin = require('gulp-imagemin');\nvar pngquant = require('imagemin-pngquant');\nvar htmlminify = require(\"gulp-html-minify\");\n\n\nmodule.exports = function() {\n    var excludeJs = [];\n    this.opts.apps.forEach(function(item){\n        excludeJs.push('**/'+item+'/js/{**,*.*}');\n        excludeJs.push('!**/'+item+'/js/partials/{**,*.*}');\n    });\n    excludeJs.push('**/js/{**,*.*}');\n    excludeJs.push('!**/js/i18n/{**,*.*}');\n    excludeJs.push('!**/js/server/{**,*.*}');\n    excludeJs.push('!**/js/zeroclipboard/{**,*.*}');\n    excludeJs.push('!**/js/layer/{**,*.*}');\n    excludeJs.push('!**/js/My97DatePicker/{**,*.*}');\n    excludeJs.push('!**/js/echarts/province.min.js');\n    \n    var filterJs = filter(['**/*.js'], {restore: true});\n    var filterCss = filter(['**/*.css'], {restore: true});\n    var filterImg = filter(['**/*.{png,jpg,gif}'], {restore: true});\n    var filterHtml = filter(['**/*.html'], {restore: true});\n\n    return this.gulp.src(this.opts.publicDir)\n     .pipe(plumber())//防止steam报错退出\n     .pipe(gulpIgnore.exclude(excludeJs))\n\n     .pipe(filterJs)//过滤出js\n     .pipe(bytediff.start())//统计文件大小变化开始\n     .pipe(uglify())//压缩js\n     .pipe(bytediff.stop())//统计文件大小变化开始\n     .pipe(filterJs.restore)\n     .pipe(filterImg)//过滤出图片\n     .pipe(bytediff.start())\n     .pipe(imagemin({ \n         progressive: true,//类型：Boolean 默认：false 无损压缩jpg图片\n         svgoPlugins: [{removeViewBox: false}],//不要移除svg的viewbox属性\n         use: [pngquant()] //使用pngquant深度压缩png图片的imagemin插件\n     }))\n     .pipe(bytediff.stop())\n     .pipe(filterImg.restore)\n     .pipe(filterCss)//过滤出css\n     .pipe(bytediff.start())\n     .pipe(minifyCss())//压缩\n     .pipe(bytediff.stop())\n     .pipe(filterCss.restore)\n     .pipe(filterHtml)//过滤出html\n     .pipe(bytediff.start())\n     .pipe(htmlminify())//压缩\n     .pipe(bytediff.stop())\n     .pipe(filterHtml.restore)\n     .pipe(this.gulp.dest(this.opts.destDir));\n};\nmodule.exports.dependencies = ['clean'];\n```\n#### app-concat.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar merge = require('merge-stream');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar ngAnnotate = require('gulp-ng-annotate');\nvar rename = require('gulp-rename');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    var apps = this.opts.apps;\n    \n    var tasks = apps.map(function(app) {\n      return gulp.src(path.join('public', app, 'js', 'app_maps.js'))\n        .pipe(fileconcat({\n            relativeUrls: './public'\n        }))\n        .pipe(ngAnnotate())\n        .pipe(uglify())\n        .pipe(rename(function(path){\n            path.basename = 'app';\n            path.extname = '.js'\n        }))\n        .pipe(gulp.dest(path.join(opts.destDir, 'public', app , 'js')));\n   });\n\n   return merge(tasks);\n};\nmodule.exports.dependencies = ['copy'];\n```\n**这里会循环gulpfile.js中的apps这个配置，然后去寻找相应目录下的app_maps.js文件，然后进行合并压缩，app_maps.js文件如下：**\n```javascript\ndocument.write('<script src=\"/analysis/js/app.js\"></script>');\ndocument.write('<script src=\"/analysis/js/commom.js\"></script>');\n\ndocument.close();\n```\n\n**都是些自己写的js文件**\n\n#### vendor-concat.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    \n    return gulp.src(path.join('public', 'js', 'vendor.map.js'))\n        .pipe(fileconcat({\n            relativeUrls: './public'\n        }))\n        .pipe(uglify())\n        .pipe(rename(function(path){\n            path.basename = 'vendor';\n            path.extname = '.js'\n        }))\n        .pipe(gulp.dest(path.join(opts.destDir, 'public', 'js')));\n};\nmodule.exports.dependencies = ['app-concat'];\n```\n\nvendor.map.js\n\n```javascript\ndocument.write('<script src=\"/js/jquery/jquery.min.js\"></script>');\ndocument.write('<script src=\"/js/bootstrap/bootstrap.min.js\"></script>');\n\ndocument.close();\n\n```\n\n**没什么好解释的，都是一些依赖的库**\n\n#### html-replace.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar htmlreplace = require('gulp-html-replace');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    var apps = opts.apps;\n\n    var replace_res = {\n        //'css': 'styles.min.css?ver='+opts.version,\n        'vendorJs': '/js/vendor.js?ver='+opts.version\n    };\n\n    apps.forEach(function(app){\n        replace_res[app] = '/' + app + '/js/app.js?ver='+opts.version\n    });\n\n    return gulp.src(opts.resourcesDir)\n      .pipe(htmlreplace(replace_res))\n      .pipe(gulp.dest(path.join(opts.destDir, 'resources')));\n};\nmodule.exports.dependencies = ['vendor-concat'];\n```\n\n**html页面**\n```html\n    <!-- build:vendorJs -->\n    <script src=\"/js/vendor.map.js\"></script>\n    <!-- endbuild -->\n    <script src=\"/js/zeroclipboard/ZeroClipboard.js\"></script>\n    <script src=\"/js/layer/layer.js\"></script>\n    <!-- build:manage -->\n    <script src=\"/manage/js/app_maps.js\"></script>\n    <!-- endbuild -->\n```\n\n**这里就是html中的js和css文件替换**\n\n执行`gulp build`就可以见证奇迹了\n\n\n\n","source":"_posts/gulp使用小例一.md","raw":"---\ntitle: gulp使用小例一\ncategory: 自动管理,gulp\ntags: javascript\ndate: 2016-08-10\nmodifiedOn: 2016-08-10\n---\n\n----------\ngulp的一个案例，主要是对gulpfile.js中的任务进行分割，完成清理、文件复制同时进行筛选压缩、以及html中js和css引用的替换等\n\n<!-- more -->\n\n#### gulpfile.js\n\n```javascript\n'use strict';\nvar gulp = require('gulp');\nvar config = {\n    pkg: require('./package.json'),\n    publicDir: ['./{public,public/**}'],\n    resourcesDir: ['./{resources/,resources/**}'],\n    apps: ['ads', 'analysis', 'homepage', 'index', 'manage', 'portrait', 'recommend'],\n    destDir: 'dest',\n    version: \"0.01\"\n};\n\n// load plugins\nrequire('gulp-task-loader')(config);\ngulp.task('build', ['clean', 'copy', 'app-concat', 'vendor-concat', 'html-replace']);\n\n```\n**gulp-task-loader**插件默认会寻找**gulp-tasks**目录下的任务\n\n#### clean.js\n```javascript\n'use strict';\nvar del = require('del');\n\nmodule.exports = function() {\n    return del.sync(this.opts.destDir);\n};\n```\n\n#### copy.js\n\n```javascript\n'use strict';\nvar filter = require('gulp-filter');\nvar gulpIgnore = require('gulp-ignore');\nvar bytediff = require('gulp-bytediff');\nvar plumber = require('gulp-plumber');\nvar uglify = require('gulp-uglify');\nvar minifyCss = require('gulp-minify-css');\nvar imagemin = require('gulp-imagemin');\nvar pngquant = require('imagemin-pngquant');\nvar htmlminify = require(\"gulp-html-minify\");\n\n\nmodule.exports = function() {\n    var excludeJs = [];\n    this.opts.apps.forEach(function(item){\n        excludeJs.push('**/'+item+'/js/{**,*.*}');\n        excludeJs.push('!**/'+item+'/js/partials/{**,*.*}');\n    });\n    excludeJs.push('**/js/{**,*.*}');\n    excludeJs.push('!**/js/i18n/{**,*.*}');\n    excludeJs.push('!**/js/server/{**,*.*}');\n    excludeJs.push('!**/js/zeroclipboard/{**,*.*}');\n    excludeJs.push('!**/js/layer/{**,*.*}');\n    excludeJs.push('!**/js/My97DatePicker/{**,*.*}');\n    excludeJs.push('!**/js/echarts/province.min.js');\n    \n    var filterJs = filter(['**/*.js'], {restore: true});\n    var filterCss = filter(['**/*.css'], {restore: true});\n    var filterImg = filter(['**/*.{png,jpg,gif}'], {restore: true});\n    var filterHtml = filter(['**/*.html'], {restore: true});\n\n    return this.gulp.src(this.opts.publicDir)\n     .pipe(plumber())//防止steam报错退出\n     .pipe(gulpIgnore.exclude(excludeJs))\n\n     .pipe(filterJs)//过滤出js\n     .pipe(bytediff.start())//统计文件大小变化开始\n     .pipe(uglify())//压缩js\n     .pipe(bytediff.stop())//统计文件大小变化开始\n     .pipe(filterJs.restore)\n     .pipe(filterImg)//过滤出图片\n     .pipe(bytediff.start())\n     .pipe(imagemin({ \n         progressive: true,//类型：Boolean 默认：false 无损压缩jpg图片\n         svgoPlugins: [{removeViewBox: false}],//不要移除svg的viewbox属性\n         use: [pngquant()] //使用pngquant深度压缩png图片的imagemin插件\n     }))\n     .pipe(bytediff.stop())\n     .pipe(filterImg.restore)\n     .pipe(filterCss)//过滤出css\n     .pipe(bytediff.start())\n     .pipe(minifyCss())//压缩\n     .pipe(bytediff.stop())\n     .pipe(filterCss.restore)\n     .pipe(filterHtml)//过滤出html\n     .pipe(bytediff.start())\n     .pipe(htmlminify())//压缩\n     .pipe(bytediff.stop())\n     .pipe(filterHtml.restore)\n     .pipe(this.gulp.dest(this.opts.destDir));\n};\nmodule.exports.dependencies = ['clean'];\n```\n#### app-concat.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar merge = require('merge-stream');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar ngAnnotate = require('gulp-ng-annotate');\nvar rename = require('gulp-rename');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    var apps = this.opts.apps;\n    \n    var tasks = apps.map(function(app) {\n      return gulp.src(path.join('public', app, 'js', 'app_maps.js'))\n        .pipe(fileconcat({\n            relativeUrls: './public'\n        }))\n        .pipe(ngAnnotate())\n        .pipe(uglify())\n        .pipe(rename(function(path){\n            path.basename = 'app';\n            path.extname = '.js'\n        }))\n        .pipe(gulp.dest(path.join(opts.destDir, 'public', app , 'js')));\n   });\n\n   return merge(tasks);\n};\nmodule.exports.dependencies = ['copy'];\n```\n**这里会循环gulpfile.js中的apps这个配置，然后去寻找相应目录下的app_maps.js文件，然后进行合并压缩，app_maps.js文件如下：**\n```javascript\ndocument.write('<script src=\"/analysis/js/app.js\"></script>');\ndocument.write('<script src=\"/analysis/js/commom.js\"></script>');\n\ndocument.close();\n```\n\n**都是些自己写的js文件**\n\n#### vendor-concat.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    \n    return gulp.src(path.join('public', 'js', 'vendor.map.js'))\n        .pipe(fileconcat({\n            relativeUrls: './public'\n        }))\n        .pipe(uglify())\n        .pipe(rename(function(path){\n            path.basename = 'vendor';\n            path.extname = '.js'\n        }))\n        .pipe(gulp.dest(path.join(opts.destDir, 'public', 'js')));\n};\nmodule.exports.dependencies = ['app-concat'];\n```\n\nvendor.map.js\n\n```javascript\ndocument.write('<script src=\"/js/jquery/jquery.min.js\"></script>');\ndocument.write('<script src=\"/js/bootstrap/bootstrap.min.js\"></script>');\n\ndocument.close();\n\n```\n\n**没什么好解释的，都是一些依赖的库**\n\n#### html-replace.js\n\n```javascript\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar htmlreplace = require('gulp-html-replace');\n\nmodule.exports = function() {\n    var gulp = this.gulp;\n    var opts = this.opts;\n    var apps = opts.apps;\n\n    var replace_res = {\n        //'css': 'styles.min.css?ver='+opts.version,\n        'vendorJs': '/js/vendor.js?ver='+opts.version\n    };\n\n    apps.forEach(function(app){\n        replace_res[app] = '/' + app + '/js/app.js?ver='+opts.version\n    });\n\n    return gulp.src(opts.resourcesDir)\n      .pipe(htmlreplace(replace_res))\n      .pipe(gulp.dest(path.join(opts.destDir, 'resources')));\n};\nmodule.exports.dependencies = ['vendor-concat'];\n```\n\n**html页面**\n```html\n    <!-- build:vendorJs -->\n    <script src=\"/js/vendor.map.js\"></script>\n    <!-- endbuild -->\n    <script src=\"/js/zeroclipboard/ZeroClipboard.js\"></script>\n    <script src=\"/js/layer/layer.js\"></script>\n    <!-- build:manage -->\n    <script src=\"/manage/js/app_maps.js\"></script>\n    <!-- endbuild -->\n```\n\n**这里就是html中的js和css文件替换**\n\n执行`gulp build`就可以见证奇迹了\n\n\n\n","slug":"gulp使用小例一","published":1,"updated":"2016-08-21T12:31:53.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7us00061ov6jychndrl","content":"<hr>\n<p>gulp&#x7684;&#x4E00;&#x4E2A;&#x6848;&#x4F8B;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5BF9;gulpfile.js&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF0C;&#x5B8C;&#x6210;&#x6E05;&#x7406;&#x3001;&#x6587;&#x4EF6;&#x590D;&#x5236;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#x7B5B;&#x9009;&#x538B;&#x7F29;&#x3001;&#x4EE5;&#x53CA;html&#x4E2D;js&#x548C;css&#x5F15;&#x7528;&#x7684;&#x66FF;&#x6362;&#x7B49;</p>\n<a id=\"more\"></a>\n<h4 id=\"gulpfilejs\"><a href=\"#gulpfile-js\" class=\"headerlink\" title=\"gulpfile.js\"></a>gulpfile.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> config = {</div><div class=\"line\">    pkg: <span class=\"built_in\">require</span>(<span class=\"string\">&apos;./package.json&apos;</span>),</div><div class=\"line\">    publicDir: [<span class=\"string\">&apos;./{public,public/**}&apos;</span>],</div><div class=\"line\">    resourcesDir: [<span class=\"string\">&apos;./{resources/,resources/**}&apos;</span>],</div><div class=\"line\">    apps: [<span class=\"string\">&apos;ads&apos;</span>, <span class=\"string\">&apos;analysis&apos;</span>, <span class=\"string\">&apos;homepage&apos;</span>, <span class=\"string\">&apos;index&apos;</span>, <span class=\"string\">&apos;manage&apos;</span>, <span class=\"string\">&apos;portrait&apos;</span>, <span class=\"string\">&apos;recommend&apos;</span>],</div><div class=\"line\">    destDir: <span class=\"string\">&apos;dest&apos;</span>,</div><div class=\"line\">    version: <span class=\"string\">&quot;0.01&quot;</span></div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// load plugins</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-task-loader&apos;</span>)(config);</div><div class=\"line\">gulp.task(<span class=\"string\">&apos;build&apos;</span>, [<span class=\"string\">&apos;clean&apos;</span>, <span class=\"string\">&apos;copy&apos;</span>, <span class=\"string\">&apos;app-concat&apos;</span>, <span class=\"string\">&apos;vendor-concat&apos;</span>, <span class=\"string\">&apos;html-replace&apos;</span>]);</div></pre></td></tr></table></figure>\n<p><strong>gulp-task-loader</strong>&#x63D2;&#x4EF6;&#x9ED8;&#x8BA4;&#x4F1A;&#x5BFB;&#x627E;<strong>gulp-tasks</strong>&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x4EFB;&#x52A1;</p>\n<h4 id=\"cleanjs\"><a href=\"#clean-js\" class=\"headerlink\" title=\"clean.js\"></a>clean.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;del&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> del.sync(<span class=\"keyword\">this</span>.opts.destDir);</div><div class=\"line\">};</div></pre></td></tr></table></figure>\n<h4 id=\"copyjs\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> filter = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-filter&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> gulpIgnore = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-ignore&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bytediff = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-bytediff&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> plumber = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-plumber&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-uglify&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> minifyCss = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-minify-css&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-imagemin&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> pngquant = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;imagemin-pngquant&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlminify = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;gulp-html-minify&quot;</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> excludeJs = [];</div><div class=\"line\">    <span class=\"keyword\">this</span>.opts.apps.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>{</div><div class=\"line\">        excludeJs.push(<span class=\"string\">&apos;**/&apos;</span>+item+<span class=\"string\">&apos;/js/{**,*.*}&apos;</span>);</div><div class=\"line\">        excludeJs.push(<span class=\"string\">&apos;!**/&apos;</span>+item+<span class=\"string\">&apos;/js/partials/{**,*.*}&apos;</span>);</div><div class=\"line\">    });</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;**/js/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/i18n/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/server/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/zeroclipboard/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/layer/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/My97DatePicker/{**,*.*}&apos;</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">&apos;!**/js/echarts/province.min.js&apos;</span>);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> filterJs = filter([<span class=\"string\">&apos;**/*.js&apos;</span>], {restore: <span class=\"literal\">true</span>});</div><div class=\"line\">    <span class=\"keyword\">var</span> filterCss = filter([<span class=\"string\">&apos;**/*.css&apos;</span>], {restore: <span class=\"literal\">true</span>});</div><div class=\"line\">    <span class=\"keyword\">var</span> filterImg = filter([<span class=\"string\">&apos;**/*.{png,jpg,gif}&apos;</span>], {restore: <span class=\"literal\">true</span>});</div><div class=\"line\">    <span class=\"keyword\">var</span> filterHtml = filter([<span class=\"string\">&apos;**/*.html&apos;</span>], {restore: <span class=\"literal\">true</span>});</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.gulp.src(<span class=\"keyword\">this</span>.opts.publicDir)</div><div class=\"line\">     .pipe(plumber())<span class=\"comment\">//&#x9632;&#x6B62;steam&#x62A5;&#x9519;&#x9000;&#x51FA;</span></div><div class=\"line\">     .pipe(gulpIgnore.exclude(excludeJs))</div><div class=\"line\"></div><div class=\"line\">     .pipe(filterJs)<span class=\"comment\">//&#x8FC7;&#x6EE4;&#x51FA;js</span></div><div class=\"line\">     .pipe(bytediff.start())<span class=\"comment\">//&#x7EDF;&#x8BA1;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x53D8;&#x5316;&#x5F00;&#x59CB;</span></div><div class=\"line\">     .pipe(uglify())<span class=\"comment\">//&#x538B;&#x7F29;js</span></div><div class=\"line\">     .pipe(bytediff.stop())<span class=\"comment\">//&#x7EDF;&#x8BA1;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x53D8;&#x5316;&#x5F00;&#x59CB;</span></div><div class=\"line\">     .pipe(filterJs.restore)</div><div class=\"line\">     .pipe(filterImg)<span class=\"comment\">//&#x8FC7;&#x6EE4;&#x51FA;&#x56FE;&#x7247;</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(imagemin({ </div><div class=\"line\">         progressive: <span class=\"literal\">true</span>,<span class=\"comment\">//&#x7C7B;&#x578B;&#xFF1A;Boolean &#x9ED8;&#x8BA4;&#xFF1A;false &#x65E0;&#x635F;&#x538B;&#x7F29;jpg&#x56FE;&#x7247;</span></div><div class=\"line\">         svgoPlugins: [{removeViewBox: <span class=\"literal\">false</span>}],<span class=\"comment\">//&#x4E0D;&#x8981;&#x79FB;&#x9664;svg&#x7684;viewbox&#x5C5E;&#x6027;</span></div><div class=\"line\">         use: [pngquant()] <span class=\"comment\">//&#x4F7F;&#x7528;pngquant&#x6DF1;&#x5EA6;&#x538B;&#x7F29;png&#x56FE;&#x7247;&#x7684;imagemin&#x63D2;&#x4EF6;</span></div><div class=\"line\">     }))</div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterImg.restore)</div><div class=\"line\">     .pipe(filterCss)<span class=\"comment\">//&#x8FC7;&#x6EE4;&#x51FA;css</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(minifyCss())<span class=\"comment\">//&#x538B;&#x7F29;</span></div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterCss.restore)</div><div class=\"line\">     .pipe(filterHtml)<span class=\"comment\">//&#x8FC7;&#x6EE4;&#x51FA;html</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(htmlminify())<span class=\"comment\">//&#x538B;&#x7F29;</span></div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterHtml.restore)</div><div class=\"line\">     .pipe(<span class=\"keyword\">this</span>.gulp.dest(<span class=\"keyword\">this</span>.opts.destDir));</div><div class=\"line\">};</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">&apos;clean&apos;</span>];</div></pre></td></tr></table></figure>\n<h4 id=\"app-concatjs\"><a href=\"#app-concat-js\" class=\"headerlink\" title=\"app-concat.js\"></a>app-concat.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;fs&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;path&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;merge-stream&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-file-concat&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-uglify&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ngAnnotate = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-ng-annotate&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-rename&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    <span class=\"keyword\">var</span> apps = <span class=\"keyword\">this</span>.opts.apps;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> tasks = apps.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>) </span>{</div><div class=\"line\">      <span class=\"keyword\">return</span> gulp.src(path.join(<span class=\"string\">&apos;public&apos;</span>, app, <span class=\"string\">&apos;js&apos;</span>, <span class=\"string\">&apos;app_maps.js&apos;</span>))</div><div class=\"line\">        .pipe(fileconcat({</div><div class=\"line\">            relativeUrls: <span class=\"string\">&apos;./public&apos;</span></div><div class=\"line\">        }))</div><div class=\"line\">        .pipe(ngAnnotate())</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>{</div><div class=\"line\">            path.basename = <span class=\"string\">&apos;app&apos;</span>;</div><div class=\"line\">            path.extname = <span class=\"string\">&apos;.js&apos;</span></div><div class=\"line\">        }))</div><div class=\"line\">        .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">&apos;public&apos;</span>, app , <span class=\"string\">&apos;js&apos;</span>)));</div><div class=\"line\">   });</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">return</span> merge(tasks);</div><div class=\"line\">};</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">&apos;copy&apos;</span>];</div></pre></td></tr></table></figure>\n<p><strong>&#x8FD9;&#x91CC;&#x4F1A;&#x5FAA;&#x73AF;gulpfile.js&#x4E2D;&#x7684;apps&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x53BB;&#x5BFB;&#x627E;&#x76F8;&#x5E94;&#x76EE;&#x5F55;&#x4E0B;&#x7684;app_maps.js&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#x538B;&#x7F29;&#xFF0C;app_maps.js&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A;</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;/analysis/js/app.js&quot;&gt;&lt;/script&gt;&apos;</span>);</div><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;/analysis/js/commom.js&quot;&gt;&lt;/script&gt;&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">document</span>.close();</div></pre></td></tr></table></figure></p>\n<p><strong>&#x90FD;&#x662F;&#x4E9B;&#x81EA;&#x5DF1;&#x5199;&#x7684;js&#x6587;&#x4EF6;</strong></p>\n<h4 id=\"vendor-concatjs\"><a href=\"#vendor-concat-js\" class=\"headerlink\" title=\"vendor-concat.js\"></a>vendor-concat.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;fs&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;path&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-file-concat&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-uglify&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-rename&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">return</span> gulp.src(path.join(<span class=\"string\">&apos;public&apos;</span>, <span class=\"string\">&apos;js&apos;</span>, <span class=\"string\">&apos;vendor.map.js&apos;</span>))</div><div class=\"line\">        .pipe(fileconcat({</div><div class=\"line\">            relativeUrls: <span class=\"string\">&apos;./public&apos;</span></div><div class=\"line\">        }))</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>{</div><div class=\"line\">            path.basename = <span class=\"string\">&apos;vendor&apos;</span>;</div><div class=\"line\">            path.extname = <span class=\"string\">&apos;.js&apos;</span></div><div class=\"line\">        }))</div><div class=\"line\">        .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">&apos;public&apos;</span>, <span class=\"string\">&apos;js&apos;</span>)));</div><div class=\"line\">};</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">&apos;app-concat&apos;</span>];</div></pre></td></tr></table></figure>\n<p>vendor.map.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;/js/jquery/jquery.min.js&quot;&gt;&lt;/script&gt;&apos;</span>);</div><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;/js/bootstrap/bootstrap.min.js&quot;&gt;&lt;/script&gt;&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">document</span>.close();</div></pre></td></tr></table></figure>\n<p><strong>&#x6CA1;&#x4EC0;&#x4E48;&#x597D;&#x89E3;&#x91CA;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x4E9B;&#x4F9D;&#x8D56;&#x7684;&#x5E93;</strong></p>\n<h4 id=\"html-replacejs\"><a href=\"#html-replace-js\" class=\"headerlink\" title=\"html-replace.js\"></a>html-replace.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;fs&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;path&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlreplace = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-html-replace&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    <span class=\"keyword\">var</span> apps = opts.apps;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> replace_res = {</div><div class=\"line\">        <span class=\"comment\">//&apos;css&apos;: &apos;styles.min.css?ver=&apos;+opts.version,</span></div><div class=\"line\">        <span class=\"string\">&apos;vendorJs&apos;</span>: <span class=\"string\">&apos;/js/vendor.js?ver=&apos;</span>+opts.version</div><div class=\"line\">    };</div><div class=\"line\"></div><div class=\"line\">    apps.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>{</div><div class=\"line\">        replace_res[app] = <span class=\"string\">&apos;/&apos;</span> + app + <span class=\"string\">&apos;/js/app.js?ver=&apos;</span>+opts.version</div><div class=\"line\">    });</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> gulp.src(opts.resourcesDir)</div><div class=\"line\">      .pipe(htmlreplace(replace_res))</div><div class=\"line\">      .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">&apos;resources&apos;</span>)));</div><div class=\"line\">};</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">&apos;vendor-concat&apos;</span>];</div></pre></td></tr></table></figure>\n<p><strong>html&#x9875;&#x9762;</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- build:vendorJs --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/vendor.map.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/zeroclipboard/ZeroClipboard.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/layer/layer.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:manage --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/manage/js/app_maps.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>&#x8FD9;&#x91CC;&#x5C31;&#x662F;html&#x4E2D;&#x7684;js&#x548C;css&#x6587;&#x4EF6;&#x66FF;&#x6362;</strong></p>\n<p>&#x6267;&#x884C;<code>gulp build</code>&#x5C31;&#x53EF;&#x4EE5;&#x89C1;&#x8BC1;&#x5947;&#x8FF9;&#x4E86;</p>\n","excerpt":"<hr>\n<p>gulp的一个案例，主要是对gulpfile.js中的任务进行分割，完成清理、文件复制同时进行筛选压缩、以及html中js和css引用的替换等</p>","more":"<h4 id=\"gulpfile-js\"><a href=\"#gulpfile-js\" class=\"headerlink\" title=\"gulpfile.js\"></a>gulpfile.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> config = &#123;</div><div class=\"line\">    pkg: <span class=\"built_in\">require</span>(<span class=\"string\">'./package.json'</span>),</div><div class=\"line\">    publicDir: [<span class=\"string\">'./&#123;public,public/**&#125;'</span>],</div><div class=\"line\">    resourcesDir: [<span class=\"string\">'./&#123;resources/,resources/**&#125;'</span>],</div><div class=\"line\">    apps: [<span class=\"string\">'ads'</span>, <span class=\"string\">'analysis'</span>, <span class=\"string\">'homepage'</span>, <span class=\"string\">'index'</span>, <span class=\"string\">'manage'</span>, <span class=\"string\">'portrait'</span>, <span class=\"string\">'recommend'</span>],</div><div class=\"line\">    destDir: <span class=\"string\">'dest'</span>,</div><div class=\"line\">    version: <span class=\"string\">\"0.01\"</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// load plugins</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'gulp-task-loader'</span>)(config);</div><div class=\"line\">gulp.task(<span class=\"string\">'build'</span>, [<span class=\"string\">'clean'</span>, <span class=\"string\">'copy'</span>, <span class=\"string\">'app-concat'</span>, <span class=\"string\">'vendor-concat'</span>, <span class=\"string\">'html-replace'</span>]);</div></pre></td></tr></table></figure>\n<p><strong>gulp-task-loader</strong>插件默认会寻找<strong>gulp-tasks</strong>目录下的任务</p>\n<h4 id=\"clean-js\"><a href=\"#clean-js\" class=\"headerlink\" title=\"clean.js\"></a>clean.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> del.sync(<span class=\"keyword\">this</span>.opts.destDir);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h4 id=\"copy-js\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> filter = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-filter'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> gulpIgnore = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-ignore'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bytediff = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-bytediff'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> plumber = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-plumber'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> minifyCss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> pngquant = <span class=\"built_in\">require</span>(<span class=\"string\">'imagemin-pngquant'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlminify = <span class=\"built_in\">require</span>(<span class=\"string\">\"gulp-html-minify\"</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> excludeJs = [];</div><div class=\"line\">    <span class=\"keyword\">this</span>.opts.apps.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</div><div class=\"line\">        excludeJs.push(<span class=\"string\">'**/'</span>+item+<span class=\"string\">'/js/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">        excludeJs.push(<span class=\"string\">'!**/'</span>+item+<span class=\"string\">'/js/partials/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'**/js/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/i18n/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/server/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/zeroclipboard/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/layer/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/My97DatePicker/&#123;**,*.*&#125;'</span>);</div><div class=\"line\">    excludeJs.push(<span class=\"string\">'!**/js/echarts/province.min.js'</span>);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> filterJs = filter([<span class=\"string\">'**/*.js'</span>], &#123;restore: <span class=\"literal\">true</span>&#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> filterCss = filter([<span class=\"string\">'**/*.css'</span>], &#123;restore: <span class=\"literal\">true</span>&#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> filterImg = filter([<span class=\"string\">'**/*.&#123;png,jpg,gif&#125;'</span>], &#123;restore: <span class=\"literal\">true</span>&#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> filterHtml = filter([<span class=\"string\">'**/*.html'</span>], &#123;restore: <span class=\"literal\">true</span>&#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.gulp.src(<span class=\"keyword\">this</span>.opts.publicDir)</div><div class=\"line\">     .pipe(plumber())<span class=\"comment\">//防止steam报错退出</span></div><div class=\"line\">     .pipe(gulpIgnore.exclude(excludeJs))</div><div class=\"line\"></div><div class=\"line\">     .pipe(filterJs)<span class=\"comment\">//过滤出js</span></div><div class=\"line\">     .pipe(bytediff.start())<span class=\"comment\">//统计文件大小变化开始</span></div><div class=\"line\">     .pipe(uglify())<span class=\"comment\">//压缩js</span></div><div class=\"line\">     .pipe(bytediff.stop())<span class=\"comment\">//统计文件大小变化开始</span></div><div class=\"line\">     .pipe(filterJs.restore)</div><div class=\"line\">     .pipe(filterImg)<span class=\"comment\">//过滤出图片</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(imagemin(&#123; </div><div class=\"line\">         progressive: <span class=\"literal\">true</span>,<span class=\"comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span></div><div class=\"line\">         svgoPlugins: [&#123;removeViewBox: <span class=\"literal\">false</span>&#125;],<span class=\"comment\">//不要移除svg的viewbox属性</span></div><div class=\"line\">         use: [pngquant()] <span class=\"comment\">//使用pngquant深度压缩png图片的imagemin插件</span></div><div class=\"line\">     &#125;))</div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterImg.restore)</div><div class=\"line\">     .pipe(filterCss)<span class=\"comment\">//过滤出css</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(minifyCss())<span class=\"comment\">//压缩</span></div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterCss.restore)</div><div class=\"line\">     .pipe(filterHtml)<span class=\"comment\">//过滤出html</span></div><div class=\"line\">     .pipe(bytediff.start())</div><div class=\"line\">     .pipe(htmlminify())<span class=\"comment\">//压缩</span></div><div class=\"line\">     .pipe(bytediff.stop())</div><div class=\"line\">     .pipe(filterHtml.restore)</div><div class=\"line\">     .pipe(<span class=\"keyword\">this</span>.gulp.dest(<span class=\"keyword\">this</span>.opts.destDir));</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">'clean'</span>];</div></pre></td></tr></table></figure>\n<h4 id=\"app-concat-js\"><a href=\"#app-concat-js\" class=\"headerlink\" title=\"app-concat.js\"></a>app-concat.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-file-concat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ngAnnotate = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-ng-annotate'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    <span class=\"keyword\">var</span> apps = <span class=\"keyword\">this</span>.opts.apps;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> tasks = apps.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> gulp.src(path.join(<span class=\"string\">'public'</span>, app, <span class=\"string\">'js'</span>, <span class=\"string\">'app_maps.js'</span>))</div><div class=\"line\">        .pipe(fileconcat(&#123;</div><div class=\"line\">            relativeUrls: <span class=\"string\">'./public'</span></div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(ngAnnotate())</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</div><div class=\"line\">            path.basename = <span class=\"string\">'app'</span>;</div><div class=\"line\">            path.extname = <span class=\"string\">'.js'</span></div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">'public'</span>, app , <span class=\"string\">'js'</span>)));</div><div class=\"line\">   &#125;);</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">return</span> merge(tasks);</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">'copy'</span>];</div></pre></td></tr></table></figure>\n<p><strong>这里会循环gulpfile.js中的apps这个配置，然后去寻找相应目录下的app_maps.js文件，然后进行合并压缩，app_maps.js文件如下：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"/analysis/js/app.js\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"/analysis/js/commom.js\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">document</span>.close();</div></pre></td></tr></table></figure></p>\n<p><strong>都是些自己写的js文件</strong></p>\n<h4 id=\"vendor-concat-js\"><a href=\"#vendor-concat-js\" class=\"headerlink\" title=\"vendor-concat.js\"></a>vendor-concat.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-file-concat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">return</span> gulp.src(path.join(<span class=\"string\">'public'</span>, <span class=\"string\">'js'</span>, <span class=\"string\">'vendor.map.js'</span>))</div><div class=\"line\">        .pipe(fileconcat(&#123;</div><div class=\"line\">            relativeUrls: <span class=\"string\">'./public'</span></div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</div><div class=\"line\">            path.basename = <span class=\"string\">'vendor'</span>;</div><div class=\"line\">            path.extname = <span class=\"string\">'.js'</span></div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">'public'</span>, <span class=\"string\">'js'</span>)));</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">'app-concat'</span>];</div></pre></td></tr></table></figure>\n<p>vendor.map.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"/js/jquery/jquery.min.js\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"/js/bootstrap/bootstrap.min.js\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">document</span>.close();</div></pre></td></tr></table></figure>\n<p><strong>没什么好解释的，都是一些依赖的库</strong></p>\n<h4 id=\"html-replace-js\"><a href=\"#html-replace-js\" class=\"headerlink\" title=\"html-replace.js\"></a>html-replace.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlreplace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-html-replace'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> gulp = <span class=\"keyword\">this</span>.gulp;</div><div class=\"line\">    <span class=\"keyword\">var</span> opts = <span class=\"keyword\">this</span>.opts;</div><div class=\"line\">    <span class=\"keyword\">var</span> apps = opts.apps;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> replace_res = &#123;</div><div class=\"line\">        <span class=\"comment\">//'css': 'styles.min.css?ver='+opts.version,</span></div><div class=\"line\">        <span class=\"string\">'vendorJs'</span>: <span class=\"string\">'/js/vendor.js?ver='</span>+opts.version</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    apps.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</div><div class=\"line\">        replace_res[app] = <span class=\"string\">'/'</span> + app + <span class=\"string\">'/js/app.js?ver='</span>+opts.version</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> gulp.src(opts.resourcesDir)</div><div class=\"line\">      .pipe(htmlreplace(replace_res))</div><div class=\"line\">      .pipe(gulp.dest(path.join(opts.destDir, <span class=\"string\">'resources'</span>)));</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">'vendor-concat'</span>];</div></pre></td></tr></table></figure>\n<p><strong>html页面</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- build:vendorJs --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/vendor.map.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/zeroclipboard/ZeroClipboard.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/layer/layer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:manage --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/manage/js/app_maps.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>这里就是html中的js和css文件替换</strong></p>\n<p>执行<code>gulp build</code>就可以见证奇迹了</p>"},{"title":"每个文件夹生成单独一个文件","date":"2016-08-10T16:00:00.000Z","modifiedOn":"2016-08-10T16:00:00.000Z","_content":"\n----------\n如果你有一整套的文件目录，并且希望执行相应的一套任务，比如...\n\n<!-- more -->\n\n```javascript\n/scripts\n/scripts/jquery/*.js\n/scripts/angularjs/*.js\n```\n...然后希望完成如下的结果h...\n```javascript\n/scripts\n/scripts/jquery.min.js\n/scripts/angularjs.min.js\n```\n\n...你将会需要像下面所示的东西...\n```javascript\nvar fs = require('fs');\nvar path = require('path');\nvar merge = require('merge-stream');\nvar gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\n\nvar scriptsPath = 'src/scripts';\n\nfunction getFolders(dir) {\n    return fs.readdirSync(dir)\n      .filter(function(file) {\n        return fs.statSync(path.join(dir, file)).isDirectory();\n      });\n}\n\ngulp.task('scripts', function() {\n   var folders = getFolders(scriptsPath);\n\n   var tasks = folders.map(function(folder) {\n      // 拼接成 foldername.js\n      // 写入输出\n      // 压缩\n      // 重命名为 folder.min.js\n      // 再一次写入输出\n      return gulp.src(path.join(scriptsPath, folder, '/*.js'))\n        .pipe(concat(folder + '.js'))\n        .pipe(gulp.dest(scriptsPath))\n        .pipe(uglify())\n        .pipe(rename(folder + '.min.js'))\n        .pipe(gulp.dest(scriptsPath));\n   });\n\n   return merge(tasks);\n});\n```\n注：\n - **folders.map** - 在每一个文件夹中分别执行一次函数，并且返回异步 stream\n - **merge** - 汇总 stream，并且在所有的 stream 都完成后完成\n\n","source":"_posts/gulp每个文件夹生成单独一个文件.md","raw":"---\ntitle: 每个文件夹生成单独一个文件\ncategory: 自动管理,gulp\ntags: javascript\ndate: 2016-08-11\nmodifiedOn: 2016-08-11\n---\n\n----------\n如果你有一整套的文件目录，并且希望执行相应的一套任务，比如...\n\n<!-- more -->\n\n```javascript\n/scripts\n/scripts/jquery/*.js\n/scripts/angularjs/*.js\n```\n...然后希望完成如下的结果h...\n```javascript\n/scripts\n/scripts/jquery.min.js\n/scripts/angularjs.min.js\n```\n\n...你将会需要像下面所示的东西...\n```javascript\nvar fs = require('fs');\nvar path = require('path');\nvar merge = require('merge-stream');\nvar gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar rename = require('gulp-rename');\nvar uglify = require('gulp-uglify');\n\nvar scriptsPath = 'src/scripts';\n\nfunction getFolders(dir) {\n    return fs.readdirSync(dir)\n      .filter(function(file) {\n        return fs.statSync(path.join(dir, file)).isDirectory();\n      });\n}\n\ngulp.task('scripts', function() {\n   var folders = getFolders(scriptsPath);\n\n   var tasks = folders.map(function(folder) {\n      // 拼接成 foldername.js\n      // 写入输出\n      // 压缩\n      // 重命名为 folder.min.js\n      // 再一次写入输出\n      return gulp.src(path.join(scriptsPath, folder, '/*.js'))\n        .pipe(concat(folder + '.js'))\n        .pipe(gulp.dest(scriptsPath))\n        .pipe(uglify())\n        .pipe(rename(folder + '.min.js'))\n        .pipe(gulp.dest(scriptsPath));\n   });\n\n   return merge(tasks);\n});\n```\n注：\n - **folders.map** - 在每一个文件夹中分别执行一次函数，并且返回异步 stream\n - **merge** - 汇总 stream，并且在所有的 stream 都完成后完成\n\n","slug":"gulp每个文件夹生成单独一个文件","published":1,"updated":"2016-08-21T12:31:53.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7uv00081ov6we9c2cqg","content":"<hr>\n<p>&#x5982;&#x679C;&#x4F60;&#x6709;&#x4E00;&#x6574;&#x5957;&#x7684;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x4E14;&#x5E0C;&#x671B;&#x6267;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x4E00;&#x5957;&#x4EFB;&#x52A1;&#xFF0C;&#x6BD4;&#x5982;&#x2026;</p>\n<a id=\"more\"></a>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/scripts</div><div class=\"line\">/scripts/jquery<span class=\"comment\">/*.js</span></div><div class=\"line\">/scripts/angularjs<span class=\"comment\">/*.js</span></div></pre></td></tr></table></figure>\n<p>&#x2026;&#x7136;&#x540E;&#x5E0C;&#x671B;&#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x7684;&#x7ED3;&#x679C;h&#x2026;<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/scripts</div><div class=\"line\">/scripts/jquery.min.js</div><div class=\"line\">/scripts/angularjs.min.js</div></pre></td></tr></table></figure></p>\n<p>&#x2026;&#x4F60;&#x5C06;&#x4F1A;&#x9700;&#x8981;&#x50CF;&#x4E0B;&#x9762;&#x6240;&#x793A;&#x7684;&#x4E1C;&#x897F;&#x2026;<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;fs&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;path&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;merge-stream&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> concat = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-concat&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-rename&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-uglify&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> scriptsPath = <span class=\"string\">&apos;src/scripts&apos;</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFolders</span>(<span class=\"params\">dir</span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> fs.readdirSync(dir)</div><div class=\"line\">      .filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>) </span>{</div><div class=\"line\">        <span class=\"keyword\">return</span> fs.statSync(path.join(dir, file)).isDirectory();</div><div class=\"line\">      });</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">&apos;scripts&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">   <span class=\"keyword\">var</span> folders = getFolders(scriptsPath);</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">var</span> tasks = folders.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">folder</span>) </span>{</div><div class=\"line\">      <span class=\"comment\">// &#x62FC;&#x63A5;&#x6210; foldername.js</span></div><div class=\"line\">      <span class=\"comment\">// &#x5199;&#x5165;&#x8F93;&#x51FA;</span></div><div class=\"line\">      <span class=\"comment\">// &#x538B;&#x7F29;</span></div><div class=\"line\">      <span class=\"comment\">// &#x91CD;&#x547D;&#x540D;&#x4E3A; folder.min.js</span></div><div class=\"line\">      <span class=\"comment\">// &#x518D;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x8F93;&#x51FA;</span></div><div class=\"line\">      <span class=\"keyword\">return</span> gulp.src(path.join(scriptsPath, folder, <span class=\"string\">&apos;/*.js&apos;</span>))</div><div class=\"line\">        .pipe(concat(folder + <span class=\"string\">&apos;.js&apos;</span>))</div><div class=\"line\">        .pipe(gulp.dest(scriptsPath))</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(folder + <span class=\"string\">&apos;.min.js&apos;</span>))</div><div class=\"line\">        .pipe(gulp.dest(scriptsPath));</div><div class=\"line\">   });</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">return</span> merge(tasks);</div><div class=\"line\">});</div></pre></td></tr></table></figure></p>\n<p>&#x6CE8;&#xFF1A;</p>\n<ul>\n<li><strong>folders.map</strong> - &#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x5206;&#x522B;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;&#x5F02;&#x6B65; stream</li>\n<li><strong>merge</strong> - &#x6C47;&#x603B; stream&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6240;&#x6709;&#x7684; stream &#x90FD;&#x5B8C;&#x6210;&#x540E;&#x5B8C;&#x6210;</li>\n</ul>\n","excerpt":"<hr>\n<p>如果你有一整套的文件目录，并且希望执行相应的一套任务，比如…</p>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/scripts</div><div class=\"line\">/scripts/jquery<span class=\"comment\">/*.js</div><div class=\"line\">/scripts/angularjs<span class=\"comment\">/*.js</span></span></div></pre></td></tr></table></figure>\n<p>…然后希望完成如下的结果h…<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">/scripts</div><div class=\"line\">/scripts/jquery.min.js</div><div class=\"line\">/scripts/angularjs.min.js</div></pre></td></tr></table></figure></p>\n<p>…你将会需要像下面所示的东西…<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> concat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-concat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> scriptsPath = <span class=\"string\">'src/scripts'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFolders</span>(<span class=\"params\">dir</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> fs.readdirSync(dir)</div><div class=\"line\">      .filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> fs.statSync(path.join(dir, file)).isDirectory();</div><div class=\"line\">      &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">'scripts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">var</span> folders = getFolders(scriptsPath);</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">var</span> tasks = folders.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">folder</span>) </span>&#123;</div><div class=\"line\">      <span class=\"comment\">// 拼接成 foldername.js</span></div><div class=\"line\">      <span class=\"comment\">// 写入输出</span></div><div class=\"line\">      <span class=\"comment\">// 压缩</span></div><div class=\"line\">      <span class=\"comment\">// 重命名为 folder.min.js</span></div><div class=\"line\">      <span class=\"comment\">// 再一次写入输出</span></div><div class=\"line\">      <span class=\"keyword\">return</span> gulp.src(path.join(scriptsPath, folder, <span class=\"string\">'/*.js'</span>))</div><div class=\"line\">        .pipe(concat(folder + <span class=\"string\">'.js'</span>))</div><div class=\"line\">        .pipe(gulp.dest(scriptsPath))</div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">        .pipe(rename(folder + <span class=\"string\">'.min.js'</span>))</div><div class=\"line\">        .pipe(gulp.dest(scriptsPath));</div><div class=\"line\">   &#125;);</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">return</span> merge(tasks);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>注：</p>\n<ul>\n<li><strong>folders.map</strong> - 在每一个文件夹中分别执行一次函数，并且返回异步 stream</li>\n<li><strong>merge</strong> - 汇总 stream，并且在所有的 stream 都完成后完成</li>\n</ul>"},{"title":"快速搭建 Node.js 开发环境","date":"2015-12-08T11:12:59.000Z","modifiedOn":"2015-12-08T11:12:59.000Z","_content":"\n----------\n\n如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本,\n那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净.\n如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm\n\n----------\n\nosx, linux 环境\n=============\n\n如果你是 windows 环境开发, 请跳过这里, 直接查看下一章.\n\ngit clone nvm\n-------------\n直接从 github clone nvm 到本地, 这里假设大家都使用 ~/git 目录存放 git 项目:\n\n    cd ~/git\n    git clone https://github.com/creationix/nvm.git\n\n配置终端启动时自动执行 source ~/git/nvm/nvm.sh,\n在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:\n\n    source ~/git/nvm/nvm.sh\n    \n重新打开你的终端, 输入 nvm\n\n    $ nvm\n    \n    Node Version Manager\n    \n    Usage:\n        nvm help                    Show this message\n        nvm --version               Print out the latest released version of nvm\n        nvm install [-s] <version>  Download and install a <version>, [-s] from source\n        nvm uninstall <version>     Uninstall a version\n        nvm use <version>           Modify PATH to use <version>\n        nvm run <version> [<args>]  Run <version> with <args> as arguments\n        nvm current                 Display currently activated version\n        nvm ls                      List installed versions\n        nvm ls <version>            List versions matching a given description\n        nvm ls-remote               List remote versions available for install\n        nvm deactivate              Undo effects of NVM on current shell\n        nvm alias [<pattern>]       Show all aliases beginning with <pattern>\n        nvm alias <name> <version>  Set an alias named <name> pointing to <version>\n        nvm unalias <name>          Deletes the alias named <name>\n        nvm copy-packages <version> Install global NPM packages contained in <version> to current version\n    Example:\n        nvm install v0.10.24        Install a specific version number\n        nvm use 0.10                Use the latest available 0.10.x release\n        nvm run 0.10.24 myApp.js    Run myApp.js using node v0.10.24\n        nvm alias default 0.10.24   Set default node version on a shell\n    Note:\n        to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders\n\n\n通过 nvm 安装任意版本的 node\n-------------------\nnvm 默认是从 http://nodejs.org/dist/ 下载的, 国外服务器, 必然很慢,\n好在 nvm 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:\n\n    NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist nvm install 0.11.11\n    \n于是你就会看到一段非常快速进度条:\n\n    ######################################################################## 100.0%\n    Now using node v0.11.11\n\n如果你不想每次都输入环境变量 NVM_NODEJS_ORG_MIRROR, 那么我建议你加入到 .bashrc 文件中:\n\n    # nvm\n    export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\n    source ~/git/nvm/nvm.sh\n\n然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:\n\n    $ nvm ls\n         nvm\n     v0.8.26\n    v0.10.26\n    v0.11.11\n    ->  v0.11.12\n\nwindows 环境\n==========\n\n----------\n\ngit clone nvmw\n--------------\n\n直接从 github clone nvmw 到本地, 这里假设大家都使用 d:\\git 目录存放 git 项目:\n\n    $ d:\n    $ cd git\n    $ git clone https://github.com/hakobera/nvmw.git\n\n设置 d:\\git\\nvmw 目录到你的 PATH 环境变量中:\n\n    set \"PATH=d:\\git\\nvmw;%PATH%\"\n\n重新打开你的终端, 输入 nvmw\n\n    $ nvmw\n    Usage:\n      nvmw help                    Show this message\n      nvmw install [version]       Download and install a [version]\n      nvmw uninstall [version]     Uninstall a [version]\n      nvmw use [version]           Modify PATH to use [version]\n      nvmw ls                      List installed versions\n    Example:\n      nvmw install v0.6.0          Install a specific version number\n      nvmw use v0.6.0              Use the specific version\n      \n\n通过 nvmw 安装任意版本的 node\n--------------------\n\nnvmw 默认是从 http://nodejs.org/dist/ 下载的, 国外服务器, 必然很慢,\n好在 nvmw 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:\n\n    $ set \"NVMW_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\"\n    $ nvmw install 0.11.11\n\n于是你就会看到一段非常快速进度条:\n\n    ######################################################################## 100.0%\n    Now using node v0.11.11\n    \n如果你不想每次都输入环境变量 NVMW_NODEJS_ORG_MIRROR, 那么我建议你在全局环境变量中增加它.\n\n然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:\n\n    $ nvmw ls\n    v0.10.26\n    v0.11.12\n    Current: v0.11.12\n    \n到此, 无论是 windows 环境, 还是 osx, linux 环境, 都能快速安装多个版本的 node 了.","source":"_posts/nodejs-install.md","raw":"---\ntitle: 快速搭建 Node.js 开发环境\ncategory: 环境,nodejs\ntags: tool,nodejs,javascript,环境,搭建\ndate: 2015-12-08 19:12:59\nmodifiedOn: 2015-12-08 19:12:59\n---\n\n----------\n\n如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本,\n那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净.\n如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm\n\n----------\n\nosx, linux 环境\n=============\n\n如果你是 windows 环境开发, 请跳过这里, 直接查看下一章.\n\ngit clone nvm\n-------------\n直接从 github clone nvm 到本地, 这里假设大家都使用 ~/git 目录存放 git 项目:\n\n    cd ~/git\n    git clone https://github.com/creationix/nvm.git\n\n配置终端启动时自动执行 source ~/git/nvm/nvm.sh,\n在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:\n\n    source ~/git/nvm/nvm.sh\n    \n重新打开你的终端, 输入 nvm\n\n    $ nvm\n    \n    Node Version Manager\n    \n    Usage:\n        nvm help                    Show this message\n        nvm --version               Print out the latest released version of nvm\n        nvm install [-s] <version>  Download and install a <version>, [-s] from source\n        nvm uninstall <version>     Uninstall a version\n        nvm use <version>           Modify PATH to use <version>\n        nvm run <version> [<args>]  Run <version> with <args> as arguments\n        nvm current                 Display currently activated version\n        nvm ls                      List installed versions\n        nvm ls <version>            List versions matching a given description\n        nvm ls-remote               List remote versions available for install\n        nvm deactivate              Undo effects of NVM on current shell\n        nvm alias [<pattern>]       Show all aliases beginning with <pattern>\n        nvm alias <name> <version>  Set an alias named <name> pointing to <version>\n        nvm unalias <name>          Deletes the alias named <name>\n        nvm copy-packages <version> Install global NPM packages contained in <version> to current version\n    Example:\n        nvm install v0.10.24        Install a specific version number\n        nvm use 0.10                Use the latest available 0.10.x release\n        nvm run 0.10.24 myApp.js    Run myApp.js using node v0.10.24\n        nvm alias default 0.10.24   Set default node version on a shell\n    Note:\n        to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders\n\n\n通过 nvm 安装任意版本的 node\n-------------------\nnvm 默认是从 http://nodejs.org/dist/ 下载的, 国外服务器, 必然很慢,\n好在 nvm 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:\n\n    NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist nvm install 0.11.11\n    \n于是你就会看到一段非常快速进度条:\n\n    ######################################################################## 100.0%\n    Now using node v0.11.11\n\n如果你不想每次都输入环境变量 NVM_NODEJS_ORG_MIRROR, 那么我建议你加入到 .bashrc 文件中:\n\n    # nvm\n    export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\n    source ~/git/nvm/nvm.sh\n\n然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:\n\n    $ nvm ls\n         nvm\n     v0.8.26\n    v0.10.26\n    v0.11.11\n    ->  v0.11.12\n\nwindows 环境\n==========\n\n----------\n\ngit clone nvmw\n--------------\n\n直接从 github clone nvmw 到本地, 这里假设大家都使用 d:\\git 目录存放 git 项目:\n\n    $ d:\n    $ cd git\n    $ git clone https://github.com/hakobera/nvmw.git\n\n设置 d:\\git\\nvmw 目录到你的 PATH 环境变量中:\n\n    set \"PATH=d:\\git\\nvmw;%PATH%\"\n\n重新打开你的终端, 输入 nvmw\n\n    $ nvmw\n    Usage:\n      nvmw help                    Show this message\n      nvmw install [version]       Download and install a [version]\n      nvmw uninstall [version]     Uninstall a [version]\n      nvmw use [version]           Modify PATH to use [version]\n      nvmw ls                      List installed versions\n    Example:\n      nvmw install v0.6.0          Install a specific version number\n      nvmw use v0.6.0              Use the specific version\n      \n\n通过 nvmw 安装任意版本的 node\n--------------------\n\nnvmw 默认是从 http://nodejs.org/dist/ 下载的, 国外服务器, 必然很慢,\n好在 nvmw 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:\n\n    $ set \"NVMW_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\"\n    $ nvmw install 0.11.11\n\n于是你就会看到一段非常快速进度条:\n\n    ######################################################################## 100.0%\n    Now using node v0.11.11\n    \n如果你不想每次都输入环境变量 NVMW_NODEJS_ORG_MIRROR, 那么我建议你在全局环境变量中增加它.\n\n然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:\n\n    $ nvmw ls\n    v0.10.26\n    v0.11.12\n    Current: v0.11.12\n    \n到此, 无论是 windows 环境, 还是 osx, linux 环境, 都能快速安装多个版本的 node 了.","slug":"nodejs-install","published":1,"updated":"2016-08-21T12:31:54.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7v5000b1ov6mdgiq6eg","content":"<hr>\n<p>&#x5982;&#x679C;&#x4F60;&#x60F3;&#x957F;&#x671F;&#x505A; node &#x5F00;&#x53D1;, &#x6216;&#x8005;&#x60F3;&#x5FEB;&#x901F;&#x66F4;&#x65B0; node &#x7248;&#x672C;, &#x6216;&#x8005;&#x60F3;&#x5FEB;&#x901F;&#x5207;&#x6362; node &#x7248;&#x672C;,<br>&#x90A3;&#x4E48;&#x5728;&#x975E; Windows(&#x5982; osx, linux) &#x73AF;&#x5883;&#x4E0B;, &#x8BF7;&#x4F7F;&#x7528; nvm &#x6765;&#x5B89;&#x88C5;&#x4F60;&#x7684; node &#x5F00;&#x53D1;&#x73AF;&#x5883;, &#x4FDD;&#x6301;&#x7CFB;&#x7EDF;&#x7684;&#x5E72;&#x51C0;.<br>&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528; Windows &#x505A;&#x5F00;&#x53D1;, &#x90A3;&#x4E48;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; nvmw &#x6765;&#x66FF;&#x4EE3; nvm</p>\n<hr>\n<h1 id=\"osx-linux-&#x73AF;&#x5883;\"><a href=\"#osx-linux-&#x73AF;&#x5883;\" class=\"headerlink\" title=\"osx, linux &#x73AF;&#x5883;\"></a>osx, linux &#x73AF;&#x5883;</h1><p>&#x5982;&#x679C;&#x4F60;&#x662F; windows &#x73AF;&#x5883;&#x5F00;&#x53D1;, &#x8BF7;&#x8DF3;&#x8FC7;&#x8FD9;&#x91CC;, &#x76F4;&#x63A5;&#x67E5;&#x770B;&#x4E0B;&#x4E00;&#x7AE0;.</p>\n<h2 id=\"git-clone-nvm\"><a href=\"#git-clone-nvm\" class=\"headerlink\" title=\"git clone nvm\"></a>git clone nvm</h2><p>&#x76F4;&#x63A5;&#x4ECE; github clone nvm &#x5230;&#x672C;&#x5730;, &#x8FD9;&#x91CC;&#x5047;&#x8BBE;&#x5927;&#x5BB6;&#x90FD;&#x4F7F;&#x7528; ~/git &#x76EE;&#x5F55;&#x5B58;&#x653E; git &#x9879;&#x76EE;:</p>\n<pre><code>cd ~/git\ngit clone https://github.com/creationix/nvm.git\n</code></pre><p>&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;&#x542F;&#x52A8;&#x65F6;&#x81EA;&#x52A8;&#x6267;&#x884C; source ~/git/nvm/nvm.sh,<br>&#x5728; ~/.bashrc, ~/.bash_profile, ~/.profile, &#x6216;&#x8005; ~/.zshrc &#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;:</p>\n<pre><code>source ~/git/nvm/nvm.sh\n</code></pre><p>&#x91CD;&#x65B0;&#x6253;&#x5F00;&#x4F60;&#x7684;&#x7EC8;&#x7AEF;, &#x8F93;&#x5165; nvm</p>\n<pre><code>$ nvm\n\nNode Version Manager\n\nUsage:\n    nvm help                    Show this message\n    nvm --version               Print out the latest released version of nvm\n    nvm install [-s] &lt;version&gt;  Download and install a &lt;version&gt;, [-s] from source\n    nvm uninstall &lt;version&gt;     Uninstall a version\n    nvm use &lt;version&gt;           Modify PATH to use &lt;version&gt;\n    nvm run &lt;version&gt; [&lt;args&gt;]  Run &lt;version&gt; with &lt;args&gt; as arguments\n    nvm current                 Display currently activated version\n    nvm ls                      List installed versions\n    nvm ls &lt;version&gt;            List versions matching a given description\n    nvm ls-remote               List remote versions available for install\n    nvm deactivate              Undo effects of NVM on current shell\n    nvm alias [&lt;pattern&gt;]       Show all aliases beginning with &lt;pattern&gt;\n    nvm alias &lt;name&gt; &lt;version&gt;  Set an alias named &lt;name&gt; pointing to &lt;version&gt;\n    nvm unalias &lt;name&gt;          Deletes the alias named &lt;name&gt;\n    nvm copy-packages &lt;version&gt; Install global NPM packages contained in &lt;version&gt; to current version\nExample:\n    nvm install v0.10.24        Install a specific version number\n    nvm use 0.10                Use the latest available 0.10.x release\n    nvm run 0.10.24 myApp.js    Run myApp.js using node v0.10.24\n    nvm alias default 0.10.24   Set default node version on a shell\nNote:\n    to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders\n</code></pre><h2 id=\"&#x901A;&#x8FC7;-nvm-&#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684;-node\"><a href=\"#&#x901A;&#x8FC7;-nvm-&#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684;-node\" class=\"headerlink\" title=\"&#x901A;&#x8FC7; nvm &#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684; node\"></a>&#x901A;&#x8FC7; nvm &#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684; node</h2><p>nvm &#x9ED8;&#x8BA4;&#x662F;&#x4ECE; <a href=\"http://nodejs.org/dist/\" target=\"_blank\" rel=\"external\">http://nodejs.org/dist/</a> &#x4E0B;&#x8F7D;&#x7684;, &#x56FD;&#x5916;&#x670D;&#x52A1;&#x5668;, &#x5FC5;&#x7136;&#x5F88;&#x6162;,<br>&#x597D;&#x5728; nvm &#x4EE5;&#x53CA;&#x652F;&#x6301;&#x4ECE;&#x955C;&#x50CF;&#x670D;&#x52A1;&#x5668;&#x4E0B;&#x8F7D;&#x5305;, &#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x5730;&#x4ECE;&#x4E03;&#x725B;&#x7684; node dist &#x955C;&#x50CF;&#x4E0B;&#x8F7D;:</p>\n<pre><code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist nvm install 0.11.11\n</code></pre><p>&#x4E8E;&#x662F;&#x4F60;&#x5C31;&#x4F1A;&#x770B;&#x5230;&#x4E00;&#x6BB5;&#x975E;&#x5E38;&#x5FEB;&#x901F;&#x8FDB;&#x5EA6;&#x6761;:</p>\n<pre><code>######################################################################## 100.0%\nNow using node v0.11.11\n</code></pre><p>&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x60F3;&#x6BCF;&#x6B21;&#x90FD;&#x8F93;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF; NVM_NODEJS_ORG_MIRROR, &#x90A3;&#x4E48;&#x6211;&#x5EFA;&#x8BAE;&#x4F60;&#x52A0;&#x5165;&#x5230; .bashrc &#x6587;&#x4EF6;&#x4E2D;:</p>\n<pre><code># nvm\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\nsource ~/git/nvm/nvm.sh\n</code></pre><p>&#x7136;&#x540E;&#x4F60;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x5730;&#x5B89;&#x88C5;&#x5404;&#x4E2A;&#x7248;&#x672C;&#x7684; node &#x4E86;, &#x4F60;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x4E00;&#x4E0B;&#x4F60;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x7684;&#x7248;&#x672C;:</p>\n<pre><code>$ nvm ls\n     nvm\n v0.8.26\nv0.10.26\nv0.11.11\n-&gt;  v0.11.12\n</code></pre><h1 id=\"windows-&#x73AF;&#x5883;\"><a href=\"#windows-&#x73AF;&#x5883;\" class=\"headerlink\" title=\"windows &#x73AF;&#x5883;\"></a>windows &#x73AF;&#x5883;</h1><hr>\n<h2 id=\"git-clone-nvmw\"><a href=\"#git-clone-nvmw\" class=\"headerlink\" title=\"git clone nvmw\"></a>git clone nvmw</h2><p>&#x76F4;&#x63A5;&#x4ECE; github clone nvmw &#x5230;&#x672C;&#x5730;, &#x8FD9;&#x91CC;&#x5047;&#x8BBE;&#x5927;&#x5BB6;&#x90FD;&#x4F7F;&#x7528; d:\\git &#x76EE;&#x5F55;&#x5B58;&#x653E; git &#x9879;&#x76EE;:</p>\n<pre><code>$ d:\n$ cd git\n$ git clone https://github.com/hakobera/nvmw.git\n</code></pre><p>&#x8BBE;&#x7F6E; d:\\git\\nvmw &#x76EE;&#x5F55;&#x5230;&#x4F60;&#x7684; PATH &#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;:</p>\n<pre><code>set &quot;PATH=d:\\git\\nvmw;%PATH%&quot;\n</code></pre><p>&#x91CD;&#x65B0;&#x6253;&#x5F00;&#x4F60;&#x7684;&#x7EC8;&#x7AEF;, &#x8F93;&#x5165; nvmw</p>\n<pre><code>$ nvmw\nUsage:\n  nvmw help                    Show this message\n  nvmw install [version]       Download and install a [version]\n  nvmw uninstall [version]     Uninstall a [version]\n  nvmw use [version]           Modify PATH to use [version]\n  nvmw ls                      List installed versions\nExample:\n  nvmw install v0.6.0          Install a specific version number\n  nvmw use v0.6.0              Use the specific version\n</code></pre><h2 id=\"&#x901A;&#x8FC7;-nvmw-&#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684;-node\"><a href=\"#&#x901A;&#x8FC7;-nvmw-&#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684;-node\" class=\"headerlink\" title=\"&#x901A;&#x8FC7; nvmw &#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684; node\"></a>&#x901A;&#x8FC7; nvmw &#x5B89;&#x88C5;&#x4EFB;&#x610F;&#x7248;&#x672C;&#x7684; node</h2><p>nvmw &#x9ED8;&#x8BA4;&#x662F;&#x4ECE; <a href=\"http://nodejs.org/dist/\" target=\"_blank\" rel=\"external\">http://nodejs.org/dist/</a> &#x4E0B;&#x8F7D;&#x7684;, &#x56FD;&#x5916;&#x670D;&#x52A1;&#x5668;, &#x5FC5;&#x7136;&#x5F88;&#x6162;,<br>&#x597D;&#x5728; nvmw &#x4EE5;&#x53CA;&#x652F;&#x6301;&#x4ECE;&#x955C;&#x50CF;&#x670D;&#x52A1;&#x5668;&#x4E0B;&#x8F7D;&#x5305;, &#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x5730;&#x4ECE;&#x4E03;&#x725B;&#x7684; node dist &#x955C;&#x50CF;&#x4E0B;&#x8F7D;:</p>\n<pre><code>$ set &quot;NVMW_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist&quot;\n$ nvmw install 0.11.11\n</code></pre><p>&#x4E8E;&#x662F;&#x4F60;&#x5C31;&#x4F1A;&#x770B;&#x5230;&#x4E00;&#x6BB5;&#x975E;&#x5E38;&#x5FEB;&#x901F;&#x8FDB;&#x5EA6;&#x6761;:</p>\n<pre><code>######################################################################## 100.0%\nNow using node v0.11.11\n</code></pre><p>&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x60F3;&#x6BCF;&#x6B21;&#x90FD;&#x8F93;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF; NVMW_NODEJS_ORG_MIRROR, &#x90A3;&#x4E48;&#x6211;&#x5EFA;&#x8BAE;&#x4F60;&#x5728;&#x5168;&#x5C40;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#x589E;&#x52A0;&#x5B83;.</p>\n<p>&#x7136;&#x540E;&#x4F60;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x5730;&#x5B89;&#x88C5;&#x5404;&#x4E2A;&#x7248;&#x672C;&#x7684; node &#x4E86;, &#x4F60;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x4E00;&#x4E0B;&#x4F60;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x7684;&#x7248;&#x672C;:</p>\n<pre><code>$ nvmw ls\nv0.10.26\nv0.11.12\nCurrent: v0.11.12\n</code></pre><p>&#x5230;&#x6B64;, &#x65E0;&#x8BBA;&#x662F; windows &#x73AF;&#x5883;, &#x8FD8;&#x662F; osx, linux &#x73AF;&#x5883;, &#x90FD;&#x80FD;&#x5FEB;&#x901F;&#x5B89;&#x88C5;&#x591A;&#x4E2A;&#x7248;&#x672C;&#x7684; node &#x4E86;.</p>\n","excerpt":"","more":"<hr>\n<p>如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本,<br>那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净.<br>如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm</p>\n<hr>\n<h1 id=\"osx-linux-环境\"><a href=\"#osx-linux-环境\" class=\"headerlink\" title=\"osx, linux 环境\"></a>osx, linux 环境</h1><p>如果你是 windows 环境开发, 请跳过这里, 直接查看下一章.</p>\n<h2 id=\"git-clone-nvm\"><a href=\"#git-clone-nvm\" class=\"headerlink\" title=\"git clone nvm\"></a>git clone nvm</h2><p>直接从 github clone nvm 到本地, 这里假设大家都使用 ~/git 目录存放 git 项目:</p>\n<pre><code>cd ~/git\ngit clone https://github.com/creationix/nvm.git\n</code></pre><p>配置终端启动时自动执行 source ~/git/nvm/nvm.sh,<br>在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:</p>\n<pre><code>source ~/git/nvm/nvm.sh\n</code></pre><p>重新打开你的终端, 输入 nvm</p>\n<pre><code>$ nvm\n\nNode Version Manager\n\nUsage:\n    nvm help                    Show this message\n    nvm --version               Print out the latest released version of nvm\n    nvm install [-s] &lt;version&gt;  Download and install a &lt;version&gt;, [-s] from source\n    nvm uninstall &lt;version&gt;     Uninstall a version\n    nvm use &lt;version&gt;           Modify PATH to use &lt;version&gt;\n    nvm run &lt;version&gt; [&lt;args&gt;]  Run &lt;version&gt; with &lt;args&gt; as arguments\n    nvm current                 Display currently activated version\n    nvm ls                      List installed versions\n    nvm ls &lt;version&gt;            List versions matching a given description\n    nvm ls-remote               List remote versions available for install\n    nvm deactivate              Undo effects of NVM on current shell\n    nvm alias [&lt;pattern&gt;]       Show all aliases beginning with &lt;pattern&gt;\n    nvm alias &lt;name&gt; &lt;version&gt;  Set an alias named &lt;name&gt; pointing to &lt;version&gt;\n    nvm unalias &lt;name&gt;          Deletes the alias named &lt;name&gt;\n    nvm copy-packages &lt;version&gt; Install global NPM packages contained in &lt;version&gt; to current version\nExample:\n    nvm install v0.10.24        Install a specific version number\n    nvm use 0.10                Use the latest available 0.10.x release\n    nvm run 0.10.24 myApp.js    Run myApp.js using node v0.10.24\n    nvm alias default 0.10.24   Set default node version on a shell\nNote:\n    to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders\n</code></pre><h2 id=\"通过-nvm-安装任意版本的-node\"><a href=\"#通过-nvm-安装任意版本的-node\" class=\"headerlink\" title=\"通过 nvm 安装任意版本的 node\"></a>通过 nvm 安装任意版本的 node</h2><p>nvm 默认是从 <a href=\"http://nodejs.org/dist/\">http://nodejs.org/dist/</a> 下载的, 国外服务器, 必然很慢,<br>好在 nvm 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:</p>\n<pre><code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist nvm install 0.11.11\n</code></pre><p>于是你就会看到一段非常快速进度条:</p>\n<pre><code>######################################################################## 100.0%\nNow using node v0.11.11\n</code></pre><p>如果你不想每次都输入环境变量 NVM_NODEJS_ORG_MIRROR, 那么我建议你加入到 .bashrc 文件中:</p>\n<pre><code># nvm\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist\nsource ~/git/nvm/nvm.sh\n</code></pre><p>然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:</p>\n<pre><code>$ nvm ls\n     nvm\n v0.8.26\nv0.10.26\nv0.11.11\n-&gt;  v0.11.12\n</code></pre><h1 id=\"windows-环境\"><a href=\"#windows-环境\" class=\"headerlink\" title=\"windows 环境\"></a>windows 环境</h1><hr>\n<h2 id=\"git-clone-nvmw\"><a href=\"#git-clone-nvmw\" class=\"headerlink\" title=\"git clone nvmw\"></a>git clone nvmw</h2><p>直接从 github clone nvmw 到本地, 这里假设大家都使用 d:\\git 目录存放 git 项目:</p>\n<pre><code>$ d:\n$ cd git\n$ git clone https://github.com/hakobera/nvmw.git\n</code></pre><p>设置 d:\\git\\nvmw 目录到你的 PATH 环境变量中:</p>\n<pre><code>set &quot;PATH=d:\\git\\nvmw;%PATH%&quot;\n</code></pre><p>重新打开你的终端, 输入 nvmw</p>\n<pre><code>$ nvmw\nUsage:\n  nvmw help                    Show this message\n  nvmw install [version]       Download and install a [version]\n  nvmw uninstall [version]     Uninstall a [version]\n  nvmw use [version]           Modify PATH to use [version]\n  nvmw ls                      List installed versions\nExample:\n  nvmw install v0.6.0          Install a specific version number\n  nvmw use v0.6.0              Use the specific version\n</code></pre><h2 id=\"通过-nvmw-安装任意版本的-node\"><a href=\"#通过-nvmw-安装任意版本的-node\" class=\"headerlink\" title=\"通过 nvmw 安装任意版本的 node\"></a>通过 nvmw 安装任意版本的 node</h2><p>nvmw 默认是从 <a href=\"http://nodejs.org/dist/\">http://nodejs.org/dist/</a> 下载的, 国外服务器, 必然很慢,<br>好在 nvmw 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:</p>\n<pre><code>$ set &quot;NVMW_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist&quot;\n$ nvmw install 0.11.11\n</code></pre><p>于是你就会看到一段非常快速进度条:</p>\n<pre><code>######################################################################## 100.0%\nNow using node v0.11.11\n</code></pre><p>如果你不想每次都输入环境变量 NVMW_NODEJS_ORG_MIRROR, 那么我建议你在全局环境变量中增加它.</p>\n<p>然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:</p>\n<pre><code>$ nvmw ls\nv0.10.26\nv0.11.12\nCurrent: v0.11.12\n</code></pre><p>到此, 无论是 windows 环境, 还是 osx, linux 环境, 都能快速安装多个版本的 node 了.</p>\n"},{"title":"NPM安装及优化步骤--详细版","date":"2015-12-15T11:12:59.000Z","modifiedOn":"2015-12-15T11:12:59.000Z","_content":"\n----------\n\nnpm的常用命令\n=============\n\n    npm install xxx 安装模块  \n    npm install xxx@1.1.1   安装1.1.1版本的xxx  \n    npm install xxx -g 将模块安装到全局环境中。  \n    npm ls 查看安装的模块及依赖  \n    npm ls -g 查看全局安装的模块及依赖  \n    npm uninstall xxx  (-g) 卸载模块  \n    npm cache clean 清理缓存  \n    npm help xxx  查看帮助  \n    npm view moudleName dependencies  查看包的依赖关系  \n    npm view moduleNames  查看node模块的package.json文件夹  \n    npm view moduleName labelName  查看package.json文件夹下某个标签的内容  \n    npm view moduleName repository.url  查看包的源文件地址  \n    npm view moduleName engines   查看包所依赖的Node的版本  \n    npm help folders   查看npm使用的所有文件夹  \n    npm rebuild moduleName    用于更改包内容后进行重建  \n    npm outdated   检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新  \n    npm update moduleName   更新node模块  \n\nnpm获取配置有6种方式，优先级由高到低\n=============\n\n    1、命令行参数。 --proxy http://server:port即将proxy的值设为http://server:port。\n    2、环境变量。 以npm_config_为前缀的环境变量将会被认为是npm的配置属性。如设置proxy可以加入这样的环境变量npm_config_proxy=http://server:port。\n    3、用户配置文件。可以通过npm config get userconfig查看文件路径。如果是mac系统的话默认路径就是$HOME/.npmrc。\n    4、全局配置文件。可以通过npm config get globalconfig查看文件路径。mac系统的默认路径是/usr/local/etc/npmrc。\n    5、内置配置文件。安装npm的目录下的npmrc文件。\n    6、默认配置。 npm本身有默认配置参数，如果以上5条都没设置，则npm会使用默认配置参数。\n\n针对npm配置的命令行操作\n=============\n\n    npm config set <key> <value> [--global]\n    npm config get <key>\n    npm config delete <key>\n    npm config list\n    npm config edit\n    npm get <key>\n    npm set <key> <value> [--global]\n    在设置配置属性时属性值默认是被存储于用户配置文件中，如果加上--global，则被存储在全局配置文件中。\n    如果要查看npm的所有配置属性（包括默认配置），可以使用npm config ls -l。\n    如果要查看npm的各种配置的含义，可以使用npm help config。\n    \n解决npm install安装模块失败的问题\n=============\n\n\n1、为npm设置代理\n-------------\n    npm config set proxy http://server:port\n    npm config set https-proxy http://server:port\n    \n如果代理需要认证的话可以这样来设置。\n\n    npm config set proxy http://username:password@server:port\n    npm config set https-proxy http://username:pawword@server:port\n    \n2、国内镜像\n-------------\n\n    清华大学Node Packaged Modules镜像：\n    http://npm.tuna.tsinghua.edu.cn\n    淘宝：\n    http://registry.npm.taobao.org\n    cnpmjs:\n    http://r.cnpmjs.org\n    未知：\n    http://registry.cnpmjs.org\n    \n方法一：通过config命令指定\n\n    npm config set registry http://registry.cnpmjs.org \n    npm info underscore （如果上面配置正确这个命令会有字符串response）\n    \n方法二：在命令行中指定\n\n    npm --registry http://registry.cnpmjs.org info underscore\n    \n方法三：在配置文件中指定，编辑安装npm的目录下的npmrc文件加入下面内容\n\n    registry = http://registry.cnpmjs.org\n    \n方法四：利用定制的cnpm代替npm\n\n    #安装该模块，然后通过该命令来安装所需模块\n    npm install -g cnpm --registry=http://registry.npm.taobao.org\n    # 利用cnpm来安装模块\n    cnpm install [name]# 利用cnpm来同步模块\n    cnpm sync connect\n    \n方法五：利用alias添加一个基于npm的新命令\n\n    alias cnpm=\"npm --registry=http://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=http://npm.taobao.org/dist \\--userconfig=$HOME/.cnpmrc\"#Or alias it in .bashrc or .zshrc$ echo '\\n#alias for cnpm\\nalias cnpm=\"npm --registry=registry.npm.taobao.org \\  --cache=$HOME/.npm/.cache/cnpm \\  --disturl=http://npm.taobao.org/dist \\  --userconfig=$HOME/.cnpmrc\"' >> ~/.zshrc && source ~/.zshrc","source":"_posts/npm-setting.md","raw":"---\ntitle: NPM安装及优化步骤--详细版\ncategory: 环境,npm\ntags: tool,npm,安装,优化\ndate: 2015-12-15 19:12:59\nmodifiedOn: 2015-12-15 19:12:59\n---\n\n----------\n\nnpm的常用命令\n=============\n\n    npm install xxx 安装模块  \n    npm install xxx@1.1.1   安装1.1.1版本的xxx  \n    npm install xxx -g 将模块安装到全局环境中。  \n    npm ls 查看安装的模块及依赖  \n    npm ls -g 查看全局安装的模块及依赖  \n    npm uninstall xxx  (-g) 卸载模块  \n    npm cache clean 清理缓存  \n    npm help xxx  查看帮助  \n    npm view moudleName dependencies  查看包的依赖关系  \n    npm view moduleNames  查看node模块的package.json文件夹  \n    npm view moduleName labelName  查看package.json文件夹下某个标签的内容  \n    npm view moduleName repository.url  查看包的源文件地址  \n    npm view moduleName engines   查看包所依赖的Node的版本  \n    npm help folders   查看npm使用的所有文件夹  \n    npm rebuild moduleName    用于更改包内容后进行重建  \n    npm outdated   检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新  \n    npm update moduleName   更新node模块  \n\nnpm获取配置有6种方式，优先级由高到低\n=============\n\n    1、命令行参数。 --proxy http://server:port即将proxy的值设为http://server:port。\n    2、环境变量。 以npm_config_为前缀的环境变量将会被认为是npm的配置属性。如设置proxy可以加入这样的环境变量npm_config_proxy=http://server:port。\n    3、用户配置文件。可以通过npm config get userconfig查看文件路径。如果是mac系统的话默认路径就是$HOME/.npmrc。\n    4、全局配置文件。可以通过npm config get globalconfig查看文件路径。mac系统的默认路径是/usr/local/etc/npmrc。\n    5、内置配置文件。安装npm的目录下的npmrc文件。\n    6、默认配置。 npm本身有默认配置参数，如果以上5条都没设置，则npm会使用默认配置参数。\n\n针对npm配置的命令行操作\n=============\n\n    npm config set <key> <value> [--global]\n    npm config get <key>\n    npm config delete <key>\n    npm config list\n    npm config edit\n    npm get <key>\n    npm set <key> <value> [--global]\n    在设置配置属性时属性值默认是被存储于用户配置文件中，如果加上--global，则被存储在全局配置文件中。\n    如果要查看npm的所有配置属性（包括默认配置），可以使用npm config ls -l。\n    如果要查看npm的各种配置的含义，可以使用npm help config。\n    \n解决npm install安装模块失败的问题\n=============\n\n\n1、为npm设置代理\n-------------\n    npm config set proxy http://server:port\n    npm config set https-proxy http://server:port\n    \n如果代理需要认证的话可以这样来设置。\n\n    npm config set proxy http://username:password@server:port\n    npm config set https-proxy http://username:pawword@server:port\n    \n2、国内镜像\n-------------\n\n    清华大学Node Packaged Modules镜像：\n    http://npm.tuna.tsinghua.edu.cn\n    淘宝：\n    http://registry.npm.taobao.org\n    cnpmjs:\n    http://r.cnpmjs.org\n    未知：\n    http://registry.cnpmjs.org\n    \n方法一：通过config命令指定\n\n    npm config set registry http://registry.cnpmjs.org \n    npm info underscore （如果上面配置正确这个命令会有字符串response）\n    \n方法二：在命令行中指定\n\n    npm --registry http://registry.cnpmjs.org info underscore\n    \n方法三：在配置文件中指定，编辑安装npm的目录下的npmrc文件加入下面内容\n\n    registry = http://registry.cnpmjs.org\n    \n方法四：利用定制的cnpm代替npm\n\n    #安装该模块，然后通过该命令来安装所需模块\n    npm install -g cnpm --registry=http://registry.npm.taobao.org\n    # 利用cnpm来安装模块\n    cnpm install [name]# 利用cnpm来同步模块\n    cnpm sync connect\n    \n方法五：利用alias添加一个基于npm的新命令\n\n    alias cnpm=\"npm --registry=http://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=http://npm.taobao.org/dist \\--userconfig=$HOME/.cnpmrc\"#Or alias it in .bashrc or .zshrc$ echo '\\n#alias for cnpm\\nalias cnpm=\"npm --registry=registry.npm.taobao.org \\  --cache=$HOME/.npm/.cache/cnpm \\  --disturl=http://npm.taobao.org/dist \\  --userconfig=$HOME/.cnpmrc\"' >> ~/.zshrc && source ~/.zshrc","slug":"npm-setting","published":1,"updated":"2016-08-21T12:31:54.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7v8000d1ov6soo0fss5","content":"<hr>\n<h1 id=\"npm&#x7684;&#x5E38;&#x7528;&#x547D;&#x4EE4;\"><a href=\"#npm&#x7684;&#x5E38;&#x7528;&#x547D;&#x4EE4;\" class=\"headerlink\" title=\"npm&#x7684;&#x5E38;&#x7528;&#x547D;&#x4EE4;\"></a>npm&#x7684;&#x5E38;&#x7528;&#x547D;&#x4EE4;</h1><pre><code>npm install xxx &#x5B89;&#x88C5;&#x6A21;&#x5757;  \nnpm install xxx@1.1.1   &#x5B89;&#x88C5;1.1.1&#x7248;&#x672C;&#x7684;xxx  \nnpm install xxx -g &#x5C06;&#x6A21;&#x5757;&#x5B89;&#x88C5;&#x5230;&#x5168;&#x5C40;&#x73AF;&#x5883;&#x4E2D;&#x3002;  \nnpm ls &#x67E5;&#x770B;&#x5B89;&#x88C5;&#x7684;&#x6A21;&#x5757;&#x53CA;&#x4F9D;&#x8D56;  \nnpm ls -g &#x67E5;&#x770B;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#x7684;&#x6A21;&#x5757;&#x53CA;&#x4F9D;&#x8D56;  \nnpm uninstall xxx  (-g) &#x5378;&#x8F7D;&#x6A21;&#x5757;  \nnpm cache clean &#x6E05;&#x7406;&#x7F13;&#x5B58;  \nnpm help xxx  &#x67E5;&#x770B;&#x5E2E;&#x52A9;  \nnpm view moudleName dependencies  &#x67E5;&#x770B;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;  \nnpm view moduleNames  &#x67E5;&#x770B;node&#x6A21;&#x5757;&#x7684;package.json&#x6587;&#x4EF6;&#x5939;  \nnpm view moduleName labelName  &#x67E5;&#x770B;package.json&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x67D0;&#x4E2A;&#x6807;&#x7B7E;&#x7684;&#x5185;&#x5BB9;  \nnpm view moduleName repository.url  &#x67E5;&#x770B;&#x5305;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x5730;&#x5740;  \nnpm view moduleName engines   &#x67E5;&#x770B;&#x5305;&#x6240;&#x4F9D;&#x8D56;&#x7684;Node&#x7684;&#x7248;&#x672C;  \nnpm help folders   &#x67E5;&#x770B;npm&#x4F7F;&#x7528;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x5939;  \nnpm rebuild moduleName    &#x7528;&#x4E8E;&#x66F4;&#x6539;&#x5305;&#x5185;&#x5BB9;&#x540E;&#x8FDB;&#x884C;&#x91CD;&#x5EFA;  \nnpm outdated   &#x68C0;&#x67E5;&#x5305;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x8FC7;&#x65F6;&#xFF0C;&#x6B64;&#x547D;&#x4EE4;&#x4F1A;&#x5217;&#x51FA;&#x6240;&#x6709;&#x5DF2;&#x7ECF;&#x8FC7;&#x65F6;&#x7684;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x53CA;&#x65F6;&#x8FDB;&#x884C;&#x5305;&#x7684;&#x66F4;&#x65B0;  \nnpm update moduleName   &#x66F4;&#x65B0;node&#x6A21;&#x5757;  \n</code></pre><h1 id=\"npm&#x83B7;&#x53D6;&#x914D;&#x7F6E;&#x6709;6&#x79CD;&#x65B9;&#x5F0F;&#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x4F4E;\"><a href=\"#npm&#x83B7;&#x53D6;&#x914D;&#x7F6E;&#x6709;6&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x4F4E;\" class=\"headerlink\" title=\"npm&#x83B7;&#x53D6;&#x914D;&#x7F6E;&#x6709;6&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x4F4E;\"></a>npm&#x83B7;&#x53D6;&#x914D;&#x7F6E;&#x6709;6&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x4F4E;</h1><pre><code>1&#x3001;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x3002; --proxy http://server:port&#x5373;&#x5C06;proxy&#x7684;&#x503C;&#x8BBE;&#x4E3A;http://server:port&#x3002;\n2&#x3001;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x3002; &#x4EE5;npm_config_&#x4E3A;&#x524D;&#x7F00;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5C06;&#x4F1A;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;npm&#x7684;&#x914D;&#x7F6E;&#x5C5E;&#x6027;&#x3002;&#x5982;&#x8BBE;&#x7F6E;proxy&#x53EF;&#x4EE5;&#x52A0;&#x5165;&#x8FD9;&#x6837;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;npm_config_proxy=http://server:port&#x3002;\n3&#x3001;&#x7528;&#x6237;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;npm config get userconfig&#x67E5;&#x770B;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3002;&#x5982;&#x679C;&#x662F;mac&#x7CFB;&#x7EDF;&#x7684;&#x8BDD;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x5C31;&#x662F;$HOME/.npmrc&#x3002;\n4&#x3001;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;npm config get globalconfig&#x67E5;&#x770B;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3002;mac&#x7CFB;&#x7EDF;&#x7684;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x662F;/usr/local/etc/npmrc&#x3002;\n5&#x3001;&#x5185;&#x7F6E;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x5B89;&#x88C5;npm&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x7684;npmrc&#x6587;&#x4EF6;&#x3002;\n6&#x3001;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x3002; npm&#x672C;&#x8EAB;&#x6709;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x4E0A;5&#x6761;&#x90FD;&#x6CA1;&#x8BBE;&#x7F6E;&#xFF0C;&#x5219;npm&#x4F1A;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x53C2;&#x6570;&#x3002;\n</code></pre><h1 id=\"&#x9488;&#x5BF9;npm&#x914D;&#x7F6E;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;\"><a href=\"#&#x9488;&#x5BF9;npm&#x914D;&#x7F6E;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;\" class=\"headerlink\" title=\"&#x9488;&#x5BF9;npm&#x914D;&#x7F6E;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;\"></a>&#x9488;&#x5BF9;npm&#x914D;&#x7F6E;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;</h1><pre><code>npm config set &lt;key&gt; &lt;value&gt; [--global]\nnpm config get &lt;key&gt;\nnpm config delete &lt;key&gt;\nnpm config list\nnpm config edit\nnpm get &lt;key&gt;\nnpm set &lt;key&gt; &lt;value&gt; [--global]\n&#x5728;&#x8BBE;&#x7F6E;&#x914D;&#x7F6E;&#x5C5E;&#x6027;&#x65F6;&#x5C5E;&#x6027;&#x503C;&#x9ED8;&#x8BA4;&#x662F;&#x88AB;&#x5B58;&#x50A8;&#x4E8E;&#x7528;&#x6237;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x52A0;&#x4E0A;--global&#xFF0C;&#x5219;&#x88AB;&#x5B58;&#x50A8;&#x5728;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x3002;\n&#x5982;&#x679C;&#x8981;&#x67E5;&#x770B;npm&#x7684;&#x6240;&#x6709;&#x914D;&#x7F6E;&#x5C5E;&#x6027;&#xFF08;&#x5305;&#x62EC;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;npm config ls -l&#x3002;\n&#x5982;&#x679C;&#x8981;&#x67E5;&#x770B;npm&#x7684;&#x5404;&#x79CD;&#x914D;&#x7F6E;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;npm help config&#x3002;\n</code></pre><h1 id=\"&#x89E3;&#x51B3;npm-install&#x5B89;&#x88C5;&#x6A21;&#x5757;&#x5931;&#x8D25;&#x7684;&#x95EE;&#x9898;\"><a href=\"#&#x89E3;&#x51B3;npm-install&#x5B89;&#x88C5;&#x6A21;&#x5757;&#x5931;&#x8D25;&#x7684;&#x95EE;&#x9898;\" class=\"headerlink\" title=\"&#x89E3;&#x51B3;npm install&#x5B89;&#x88C5;&#x6A21;&#x5757;&#x5931;&#x8D25;&#x7684;&#x95EE;&#x9898;\"></a>&#x89E3;&#x51B3;npm install&#x5B89;&#x88C5;&#x6A21;&#x5757;&#x5931;&#x8D25;&#x7684;&#x95EE;&#x9898;</h1><h2 id=\"1-&#x4E3A;npm&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;\"><a href=\"#1&#x3001;&#x4E3A;npm&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;\" class=\"headerlink\" title=\"1&#x3001;&#x4E3A;npm&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;\"></a>1&#x3001;&#x4E3A;npm&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;</h2><pre><code>npm config set proxy http://server:port\nnpm config set https-proxy http://server:port\n</code></pre><p>&#x5982;&#x679C;&#x4EE3;&#x7406;&#x9700;&#x8981;&#x8BA4;&#x8BC1;&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x6765;&#x8BBE;&#x7F6E;&#x3002;</p>\n<pre><code>npm config set proxy http://username:password@server:port\nnpm config set https-proxy http://username:pawword@server:port\n</code></pre><h2 id=\"2-&#x56FD;&#x5185;&#x955C;&#x50CF;\"><a href=\"#2&#x3001;&#x56FD;&#x5185;&#x955C;&#x50CF;\" class=\"headerlink\" title=\"2&#x3001;&#x56FD;&#x5185;&#x955C;&#x50CF;\"></a>2&#x3001;&#x56FD;&#x5185;&#x955C;&#x50CF;</h2><pre><code>&#x6E05;&#x534E;&#x5927;&#x5B66;Node Packaged Modules&#x955C;&#x50CF;&#xFF1A;\nhttp://npm.tuna.tsinghua.edu.cn\n&#x6DD8;&#x5B9D;&#xFF1A;\nhttp://registry.npm.taobao.org\ncnpmjs:\nhttp://r.cnpmjs.org\n&#x672A;&#x77E5;&#xFF1A;\nhttp://registry.cnpmjs.org\n</code></pre><p>&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x901A;&#x8FC7;config&#x547D;&#x4EE4;&#x6307;&#x5B9A;</p>\n<pre><code>npm config set registry http://registry.cnpmjs.org \nnpm info underscore &#xFF08;&#x5982;&#x679C;&#x4E0A;&#x9762;&#x914D;&#x7F6E;&#x6B63;&#x786E;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x4F1A;&#x6709;&#x5B57;&#x7B26;&#x4E32;response&#xFF09;\n</code></pre><p>&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x6307;&#x5B9A;</p>\n<pre><code>npm --registry http://registry.cnpmjs.org info underscore\n</code></pre><p>&#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#xFF0C;&#x7F16;&#x8F91;&#x5B89;&#x88C5;npm&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x7684;npmrc&#x6587;&#x4EF6;&#x52A0;&#x5165;&#x4E0B;&#x9762;&#x5185;&#x5BB9;</p>\n<pre><code>registry = http://registry.cnpmjs.org\n</code></pre><p>&#x65B9;&#x6CD5;&#x56DB;&#xFF1A;&#x5229;&#x7528;&#x5B9A;&#x5236;&#x7684;cnpm&#x4EE3;&#x66FF;npm</p>\n<pre><code>#&#x5B89;&#x88C5;&#x8BE5;&#x6A21;&#x5757;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x8BE5;&#x547D;&#x4EE4;&#x6765;&#x5B89;&#x88C5;&#x6240;&#x9700;&#x6A21;&#x5757;\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n# &#x5229;&#x7528;cnpm&#x6765;&#x5B89;&#x88C5;&#x6A21;&#x5757;\ncnpm install [name]# &#x5229;&#x7528;cnpm&#x6765;&#x540C;&#x6B65;&#x6A21;&#x5757;\ncnpm sync connect\n</code></pre><p>&#x65B9;&#x6CD5;&#x4E94;&#xFF1A;&#x5229;&#x7528;alias&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;npm&#x7684;&#x65B0;&#x547D;&#x4EE4;</p>\n<pre><code>alias cnpm=&quot;npm --registry=http://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=http://npm.taobao.org/dist \\--userconfig=$HOME/.cnpmrc&quot;#Or alias it in .bashrc or .zshrc$ echo &apos;\\n#alias for cnpm\\nalias cnpm=&quot;npm --registry=registry.npm.taobao.org \\  --cache=$HOME/.npm/.cache/cnpm \\  --disturl=http://npm.taobao.org/dist \\  --userconfig=$HOME/.cnpmrc&quot;&apos; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc\n</code></pre>","excerpt":"","more":"<hr>\n<h1 id=\"npm的常用命令\"><a href=\"#npm的常用命令\" class=\"headerlink\" title=\"npm的常用命令\"></a>npm的常用命令</h1><pre><code>npm install xxx 安装模块  \nnpm install xxx@1.1.1   安装1.1.1版本的xxx  \nnpm install xxx -g 将模块安装到全局环境中。  \nnpm ls 查看安装的模块及依赖  \nnpm ls -g 查看全局安装的模块及依赖  \nnpm uninstall xxx  (-g) 卸载模块  \nnpm cache clean 清理缓存  \nnpm help xxx  查看帮助  \nnpm view moudleName dependencies  查看包的依赖关系  \nnpm view moduleNames  查看node模块的package.json文件夹  \nnpm view moduleName labelName  查看package.json文件夹下某个标签的内容  \nnpm view moduleName repository.url  查看包的源文件地址  \nnpm view moduleName engines   查看包所依赖的Node的版本  \nnpm help folders   查看npm使用的所有文件夹  \nnpm rebuild moduleName    用于更改包内容后进行重建  \nnpm outdated   检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新  \nnpm update moduleName   更新node模块  \n</code></pre><h1 id=\"npm获取配置有6种方式，优先级由高到低\"><a href=\"#npm获取配置有6种方式，优先级由高到低\" class=\"headerlink\" title=\"npm获取配置有6种方式，优先级由高到低\"></a>npm获取配置有6种方式，优先级由高到低</h1><pre><code>1、命令行参数。 --proxy http://server:port即将proxy的值设为http://server:port。\n2、环境变量。 以npm_config_为前缀的环境变量将会被认为是npm的配置属性。如设置proxy可以加入这样的环境变量npm_config_proxy=http://server:port。\n3、用户配置文件。可以通过npm config get userconfig查看文件路径。如果是mac系统的话默认路径就是$HOME/.npmrc。\n4、全局配置文件。可以通过npm config get globalconfig查看文件路径。mac系统的默认路径是/usr/local/etc/npmrc。\n5、内置配置文件。安装npm的目录下的npmrc文件。\n6、默认配置。 npm本身有默认配置参数，如果以上5条都没设置，则npm会使用默认配置参数。\n</code></pre><h1 id=\"针对npm配置的命令行操作\"><a href=\"#针对npm配置的命令行操作\" class=\"headerlink\" title=\"针对npm配置的命令行操作\"></a>针对npm配置的命令行操作</h1><pre><code>npm config set &lt;key&gt; &lt;value&gt; [--global]\nnpm config get &lt;key&gt;\nnpm config delete &lt;key&gt;\nnpm config list\nnpm config edit\nnpm get &lt;key&gt;\nnpm set &lt;key&gt; &lt;value&gt; [--global]\n在设置配置属性时属性值默认是被存储于用户配置文件中，如果加上--global，则被存储在全局配置文件中。\n如果要查看npm的所有配置属性（包括默认配置），可以使用npm config ls -l。\n如果要查看npm的各种配置的含义，可以使用npm help config。\n</code></pre><h1 id=\"解决npm-install安装模块失败的问题\"><a href=\"#解决npm-install安装模块失败的问题\" class=\"headerlink\" title=\"解决npm install安装模块失败的问题\"></a>解决npm install安装模块失败的问题</h1><h2 id=\"1、为npm设置代理\"><a href=\"#1、为npm设置代理\" class=\"headerlink\" title=\"1、为npm设置代理\"></a>1、为npm设置代理</h2><pre><code>npm config set proxy http://server:port\nnpm config set https-proxy http://server:port\n</code></pre><p>如果代理需要认证的话可以这样来设置。</p>\n<pre><code>npm config set proxy http://username:password@server:port\nnpm config set https-proxy http://username:pawword@server:port\n</code></pre><h2 id=\"2、国内镜像\"><a href=\"#2、国内镜像\" class=\"headerlink\" title=\"2、国内镜像\"></a>2、国内镜像</h2><pre><code>清华大学Node Packaged Modules镜像：\nhttp://npm.tuna.tsinghua.edu.cn\n淘宝：\nhttp://registry.npm.taobao.org\ncnpmjs:\nhttp://r.cnpmjs.org\n未知：\nhttp://registry.cnpmjs.org\n</code></pre><p>方法一：通过config命令指定</p>\n<pre><code>npm config set registry http://registry.cnpmjs.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）\n</code></pre><p>方法二：在命令行中指定</p>\n<pre><code>npm --registry http://registry.cnpmjs.org info underscore\n</code></pre><p>方法三：在配置文件中指定，编辑安装npm的目录下的npmrc文件加入下面内容</p>\n<pre><code>registry = http://registry.cnpmjs.org\n</code></pre><p>方法四：利用定制的cnpm代替npm</p>\n<pre><code>#安装该模块，然后通过该命令来安装所需模块\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n# 利用cnpm来安装模块\ncnpm install [name]# 利用cnpm来同步模块\ncnpm sync connect\n</code></pre><p>方法五：利用alias添加一个基于npm的新命令</p>\n<pre><code>alias cnpm=&quot;npm --registry=http://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=http://npm.taobao.org/dist \\--userconfig=$HOME/.cnpmrc&quot;#Or alias it in .bashrc or .zshrc$ echo &apos;\\n#alias for cnpm\\nalias cnpm=&quot;npm --registry=registry.npm.taobao.org \\  --cache=$HOME/.npm/.cache/cnpm \\  --disturl=http://npm.taobao.org/dist \\  --userconfig=$HOME/.cnpmrc&quot;&apos; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc\n</code></pre>"},{"title":"《JavaScript高级程序设计》阅读笔记（一）：ECMAScript基础","date":"2016-07-31T16:00:00.000Z","modifiedOn":"2016-07-31T16:00:00.000Z","toc":true,"_content":"\n---------\n#### 语法\n\n##### 区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块\n\n#### 变量\n##### 变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。\n\n###### 变量命名规范：\n\n - Camel标记法：首字母小写，接下来的单词都以大写字母开头。例如：```var **m**y**T**est**V**alue=0,**m**y**S**econd**T**est**V**alue=\"hi\"```;\n\n - Pascal标记法：首字母大写，接下来的单词都以大写字母开头。例如：```var **M**y**T**est**V**alue=0,**M**y**S**econd**T**est**V**alue=\"hi\"```;\n\n - 匈牙利类型标记法：在以Pascal标记法命名的变量前附加一个小写字母（或小写字母序列），说明该变量的类型。例如，i表示整数，s表示字符串，如下面所示：\n \n```\n类型：数组　　　　前缀：a　　示例：aValues\n\n类型：布尔型　　　前缀：b　　示例：bFound\n\n类型：浮点型　　　前缀：f　　 示例：fValue\n\n类型：函数　　　　前缀：fn　  示例：fnMethod\n\n类型：整型　　　　前缀：i　　 示例：iValue\n\n类型：对象　　　　前缀：o　　示例：oType\n\n类型：正则　　　　前缀：re　  示例：rePatten\n\n类型：字符串　　　前缀：s　　示例：sValue\n\n类型：变量　　　　前缀：v　　示例：vValue\n```\n#### 关键字\nECMA-262 定义的关键字为：\n\n```\nbreak　　case　　catch　　continue　　default　　delete　　do　　else　　finally　　for　　function　　if　　in　　instanceof　　new　　return　　switch　　this　　throw　　try　　typeof　　var　　void　　while　　with\n```\n#### 保留字\nECMA-262第3版中保留字为：\n```\nabstract　　boolean　　byte　　char　　class　　const　　debugger　　double　　enum　　export　　extends　　final　　float　　goto　　implements　　import　　int　　interface　　long　　native　　package　　private　　protected　　public　　short　　static　　super　　synchronized　　throws　　transient　　volatile\n```\n\n#### 原始值和引用值\n\n原始值(primitive value)是存储在栈(stack)中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。\n\n引用值(reference value)是存储在堆(heap)中的对象，也就是说，存储在变量处的值是一个指针(point)，指向存储对象的内存处。\n\n\n","source":"_posts/《JavaScript高级程序设计》阅读笔记（一）：ECMAScript基础.md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记（一）：ECMAScript基础\ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-08-01\nmodifiedOn: 2016-08-01\ntoc: true\n---\n\n---------\n#### 语法\n\n##### 区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块\n\n#### 变量\n##### 变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。\n\n###### 变量命名规范：\n\n - Camel标记法：首字母小写，接下来的单词都以大写字母开头。例如：```var **m**y**T**est**V**alue=0,**m**y**S**econd**T**est**V**alue=\"hi\"```;\n\n - Pascal标记法：首字母大写，接下来的单词都以大写字母开头。例如：```var **M**y**T**est**V**alue=0,**M**y**S**econd**T**est**V**alue=\"hi\"```;\n\n - 匈牙利类型标记法：在以Pascal标记法命名的变量前附加一个小写字母（或小写字母序列），说明该变量的类型。例如，i表示整数，s表示字符串，如下面所示：\n \n```\n类型：数组　　　　前缀：a　　示例：aValues\n\n类型：布尔型　　　前缀：b　　示例：bFound\n\n类型：浮点型　　　前缀：f　　 示例：fValue\n\n类型：函数　　　　前缀：fn　  示例：fnMethod\n\n类型：整型　　　　前缀：i　　 示例：iValue\n\n类型：对象　　　　前缀：o　　示例：oType\n\n类型：正则　　　　前缀：re　  示例：rePatten\n\n类型：字符串　　　前缀：s　　示例：sValue\n\n类型：变量　　　　前缀：v　　示例：vValue\n```\n#### 关键字\nECMA-262 定义的关键字为：\n\n```\nbreak　　case　　catch　　continue　　default　　delete　　do　　else　　finally　　for　　function　　if　　in　　instanceof　　new　　return　　switch　　this　　throw　　try　　typeof　　var　　void　　while　　with\n```\n#### 保留字\nECMA-262第3版中保留字为：\n```\nabstract　　boolean　　byte　　char　　class　　const　　debugger　　double　　enum　　export　　extends　　final　　float　　goto　　implements　　import　　int　　interface　　long　　native　　package　　private　　protected　　public　　short　　static　　super　　synchronized　　throws　　transient　　volatile\n```\n\n#### 原始值和引用值\n\n原始值(primitive value)是存储在栈(stack)中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。\n\n引用值(reference value)是存储在堆(heap)中的对象，也就是说，存储在变量处的值是一个指针(point)，指向存储对象的内存处。\n\n\n","slug":"《JavaScript高级程序设计》阅读笔记（一）：ECMAScript基础","published":1,"updated":"2016-08-21T12:31:54.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vc000h1ov6z8onualp","content":"<hr>\n<h4 id=\"&#x8BED;&#x6CD5;\"><a href=\"#&#x8BED;&#x6CD5;\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h4><h5 id=\"&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;-&#x53D8;&#x91CF;&#x5F31;&#x7C7B;&#x578B;-&#x884C;&#x5C3E;&#x5206;&#x53F7;&#x53EF;&#x6709;&#x53EF;&#x65E0;-&#x6CE8;&#x91CA;&#x4E3A;&#x53CC;&#x659C;&#x7EBF;-&#x62EC;&#x53F7;&#x8868;&#x660E;&#x4EE3;&#x7801;&#x5757;\"><a href=\"#&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3001;&#x53D8;&#x91CF;&#x5F31;&#x7C7B;&#x578B;&#x3001;&#x884C;&#x5C3E;&#x5206;&#x53F7;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#x3001;&#x6CE8;&#x91CA;&#x4E3A;&#x53CC;&#x659C;&#x7EBF;&#x3001;&#x62EC;&#x53F7;&#x8868;&#x660E;&#x4EE3;&#x7801;&#x5757;\" class=\"headerlink\" title=\"&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3001;&#x53D8;&#x91CF;&#x5F31;&#x7C7B;&#x578B;&#x3001;&#x884C;&#x5C3E;&#x5206;&#x53F7;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#x3001;&#x6CE8;&#x91CA;&#x4E3A;&#x53CC;&#x659C;&#x7EBF;&#x3001;&#x62EC;&#x53F7;&#x8868;&#x660E;&#x4EE3;&#x7801;&#x5757;\"></a>&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3001;&#x53D8;&#x91CF;&#x5F31;&#x7C7B;&#x578B;&#x3001;&#x884C;&#x5C3E;&#x5206;&#x53F7;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#x3001;&#x6CE8;&#x91CA;&#x4E3A;&#x53CC;&#x659C;&#x7EBF;&#x3001;&#x62EC;&#x53F7;&#x8868;&#x660E;&#x4EE3;&#x7801;&#x5757;</h5><h4 id=\"&#x53D8;&#x91CF;\"><a href=\"#&#x53D8;&#x91CF;\" class=\"headerlink\" title=\"&#x53D8;&#x91CF;\"></a>&#x53D8;&#x91CF;</h4><h5 id=\"&#x53D8;&#x91CF;&#x7528;var&#x58F0;&#x660E;&#x53D8;&#x91CF;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5FC5;&#x987B;&#x662F;&#x5B57;&#x6BCD;-&#x4E0B;&#x5212;&#x7EBF;&#x6216;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#x4F59;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x662F;&#x4E0B;&#x5212;&#x7EBF;-&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#x6216;&#x4EFB;&#x4F55;&#x5B57;&#x6BCD;&#x6216;&#x6570;&#x5B57;&#x5B57;&#x7B26;\"><a href=\"#&#x53D8;&#x91CF;&#x7528;var&#x58F0;&#x660E;&#xFF0C;&#x53D8;&#x91CF;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF1A;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5FC5;&#x987B;&#x662F;&#x5B57;&#x6BCD;&#x3001;&#x4E0B;&#x5212;&#x7EBF;&#x6216;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#xFF1B;&#x4F59;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x662F;&#x4E0B;&#x5212;&#x7EBF;&#x3001;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#x6216;&#x4EFB;&#x4F55;&#x5B57;&#x6BCD;&#x6216;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#x3002;\" class=\"headerlink\" title=\"&#x53D8;&#x91CF;&#x7528;var&#x58F0;&#x660E;&#xFF0C;&#x53D8;&#x91CF;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF1A;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5FC5;&#x987B;&#x662F;&#x5B57;&#x6BCD;&#x3001;&#x4E0B;&#x5212;&#x7EBF;&#x6216;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#xFF1B;&#x4F59;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x662F;&#x4E0B;&#x5212;&#x7EBF;&#x3001;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#x6216;&#x4EFB;&#x4F55;&#x5B57;&#x6BCD;&#x6216;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#x3002;\"></a>&#x53D8;&#x91CF;&#x7528;var&#x58F0;&#x660E;&#xFF0C;&#x53D8;&#x91CF;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF1A;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5FC5;&#x987B;&#x662F;&#x5B57;&#x6BCD;&#x3001;&#x4E0B;&#x5212;&#x7EBF;&#x6216;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#xFF1B;&#x4F59;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x662F;&#x4E0B;&#x5212;&#x7EBF;&#x3001;&#x7F8E;&#x5143;&#x7B26;&#x53F7;&#x6216;&#x4EFB;&#x4F55;&#x5B57;&#x6BCD;&#x6216;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#x3002;</h5><h6 id=\"&#x53D8;&#x91CF;&#x547D;&#x540D;&#x89C4;&#x8303;\"><a href=\"#&#x53D8;&#x91CF;&#x547D;&#x540D;&#x89C4;&#x8303;&#xFF1A;\" class=\"headerlink\" title=\"&#x53D8;&#x91CF;&#x547D;&#x540D;&#x89C4;&#x8303;&#xFF1A;\"></a>&#x53D8;&#x91CF;&#x547D;&#x540D;&#x89C4;&#x8303;&#xFF1A;</h6><ul>\n<li>Camel&#x6807;&#x8BB0;&#x6CD5;&#xFF1A;&#x9996;&#x5B57;&#x6BCD;&#x5C0F;&#x5199;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5355;&#x8BCD;&#x90FD;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x3002;&#x4F8B;&#x5982;&#xFF1A;<figure class=\"highlight plain\"><figcaption><span>**m**y**T**est**V**alue=0,**m**y**S**econd**T**est**V**alue=&quot;hi&quot;```;</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">- Pascal&#x6807;&#x8BB0;&#x6CD5;&#xFF1A;&#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5355;&#x8BCD;&#x90FD;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x3002;&#x4F8B;&#x5982;&#xFF1A;```var&#xA0;**M**y**T**est**V**alue=0,**M**y**S**econd**T**est**V**alue=&quot;hi&quot;```;</div><div class=\"line\"></div><div class=\"line\">- &#x5308;&#x7259;&#x5229;&#x7C7B;&#x578B;&#x6807;&#x8BB0;&#x6CD5;&#xFF1A;&#x5728;&#x4EE5;Pascal&#x6807;&#x8BB0;&#x6CD5;&#x547D;&#x540D;&#x7684;&#x53D8;&#x91CF;&#x524D;&#x9644;&#x52A0;&#x4E00;&#x4E2A;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#xFF08;&#x6216;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x5E8F;&#x5217;&#xFF09;&#xFF0C;&#x8BF4;&#x660E;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;i&#x8868;&#x793A;&#x6574;&#x6570;&#xFF0C;s&#x8868;&#x793A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x6240;&#x793A;&#xFF1A;</div></pre></td></tr></table></figure></li>\n</ul>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x6570;&#x7EC4;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;a&#x3000;&#x3000;&#x793A;&#x4F8B;&#xFF1A;aValues</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x5E03;&#x5C14;&#x578B;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;b&#x3000;&#x3000;&#x793A;&#x4F8B;&#xFF1A;bFound</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x6D6E;&#x70B9;&#x578B;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;f&#x3000;&#x3000; &#x793A;&#x4F8B;&#xFF1A;fValue</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x51FD;&#x6570;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;fn&#x3000;  &#x793A;&#x4F8B;&#xFF1A;fnMethod</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x6574;&#x578B;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;i&#x3000;&#x3000; &#x793A;&#x4F8B;&#xFF1A;iValue</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x5BF9;&#x8C61;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;o&#x3000;&#x3000;&#x793A;&#x4F8B;&#xFF1A;oType</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x6B63;&#x5219;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;re&#x3000;  &#x793A;&#x4F8B;&#xFF1A;rePatten</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x5B57;&#x7B26;&#x4E32;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;s&#x3000;&#x3000;&#x793A;&#x4F8B;&#xFF1A;sValue</p>\n<p>&#x7C7B;&#x578B;&#xFF1A;&#x53D8;&#x91CF;&#x3000;&#x3000;&#x3000;&#x3000;&#x524D;&#x7F00;&#xFF1A;v&#x3000;&#x3000;&#x793A;&#x4F8B;&#xFF1A;vValue<br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#### &#x5173;&#x952E;&#x5B57;</span></div><div class=\"line\">ECMA<span class=\"number\">-262</span> &#x5B9A;&#x4E49;&#x7684;&#x5173;&#x952E;&#x5B57;&#x4E3A;&#xFF1A;</div></pre></td></tr></table></figure></p>\n<p>break&#x3000;&#x3000;case&#x3000;&#x3000;catch&#x3000;&#x3000;continue&#x3000;&#x3000;default&#x3000;&#x3000;delete&#x3000;&#x3000;do&#x3000;&#x3000;else&#x3000;&#x3000;finally&#x3000;&#x3000;for&#x3000;&#x3000;function&#x3000;&#x3000;if&#x3000;&#x3000;in&#x3000;&#x3000;instanceof&#x3000;&#x3000;new&#x3000;&#x3000;return&#x3000;&#x3000;switch&#x3000;&#x3000;this&#x3000;&#x3000;throw&#x3000;&#x3000;try&#x3000;&#x3000;typeof&#x3000;&#x3000;var&#x3000;&#x3000;void&#x3000;&#x3000;while&#x3000;&#x3000;with<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#### &#x4FDD;&#x7559;&#x5B57;</div><div class=\"line\">ECMA<span class=\"number\">-262</span>&#x7B2C;<span class=\"number\">3</span>&#x7248;&#x4E2D;&#x4FDD;&#x7559;&#x5B57;&#x4E3A;&#xFF1A;</div></pre></td></tr></table></figure></p>\n<p>abstract&#x3000;&#x3000;boolean&#x3000;&#x3000;byte&#x3000;&#x3000;char&#x3000;&#x3000;class&#x3000;&#x3000;const&#x3000;&#x3000;debugger&#x3000;&#x3000;double&#x3000;&#x3000;enum&#x3000;&#x3000;export&#x3000;&#x3000;extends&#x3000;&#x3000;final&#x3000;&#x3000;float&#x3000;&#x3000;goto&#x3000;&#x3000;implements&#x3000;&#x3000;import&#x3000;&#x3000;int&#x3000;&#x3000;interface&#x3000;&#x3000;long&#x3000;&#x3000;native&#x3000;&#x3000;package&#x3000;&#x3000;private&#x3000;&#x3000;protected&#x3000;&#x3000;public&#x3000;&#x3000;short&#x3000;&#x3000;static&#x3000;&#x3000;super&#x3000;&#x3000;synchronized&#x3000;&#x3000;throws&#x3000;&#x3000;transient&#x3000;&#x3000;volatile<br>```</p>\n<h4 id=\"&#x539F;&#x59CB;&#x503C;&#x548C;&#x5F15;&#x7528;&#x503C;\"><a href=\"#&#x539F;&#x59CB;&#x503C;&#x548C;&#x5F15;&#x7528;&#x503C;\" class=\"headerlink\" title=\"&#x539F;&#x59CB;&#x503C;&#x548C;&#x5F15;&#x7528;&#x503C;\"></a>&#x539F;&#x59CB;&#x503C;&#x548C;&#x5F15;&#x7528;&#x503C;</h4><p>&#x539F;&#x59CB;&#x503C;(primitive value)&#x662F;&#x5B58;&#x50A8;&#x5728;&#x6808;(stack)&#x4E2D;&#x7684;&#x7B80;&#x5355;&#x6570;&#x636E;&#x6BB5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x76F4;&#x63A5;&#x5B58;&#x50A8;&#x5728;&#x53D8;&#x91CF;&#x8BBF;&#x95EE;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p>\n<p>&#x5F15;&#x7528;&#x503C;(reference value)&#x662F;&#x5B58;&#x50A8;&#x5728;&#x5806;(heap)&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B58;&#x50A8;&#x5728;&#x53D8;&#x91CF;&#x5904;&#x7684;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;(point)&#xFF0C;&#x6307;&#x5411;&#x5B58;&#x50A8;&#x5BF9;&#x8C61;&#x7684;&#x5185;&#x5B58;&#x5904;&#x3002;</p>\n","excerpt":"","more":"<hr>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><h5 id=\"区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块\"><a href=\"#区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块\" class=\"headerlink\" title=\"区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块\"></a>区分大小写、变量弱类型、行尾分号可有可无、注释为双斜线、括号表明代码块</h5><h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><h5 id=\"变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。\"><a href=\"#变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。\" class=\"headerlink\" title=\"变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。\"></a>变量用var声明，变量的命名规则：第一个字符必须是字母、下划线或美元符号；余下的字符可以是下划线、美元符号或任何字母或数字字符。</h5><h6 id=\"变量命名规范：\"><a href=\"#变量命名规范：\" class=\"headerlink\" title=\"变量命名规范：\"></a>变量命名规范：</h6><ul>\n<li>Camel标记法：首字母小写，接下来的单词都以大写字母开头。例如：<figure class=\"highlight plain\"><figcaption><span>**m**y**T**est**V**alue=0,**m**y**S**econd**T**est**V**alue=\"hi\"```;</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">- Pascal标记法：首字母大写，接下来的单词都以大写字母开头。例如：```var **M**y**T**est**V**alue=0,**M**y**S**econd**T**est**V**alue=&quot;hi&quot;```;</div><div class=\"line\"></div><div class=\"line\">- 匈牙利类型标记法：在以Pascal标记法命名的变量前附加一个小写字母（或小写字母序列），说明该变量的类型。例如，i表示整数，s表示字符串，如下面所示：</div></pre></td></tr></table></figure></li>\n</ul>\n<p>类型：数组　　　　前缀：a　　示例：aValues</p>\n<p>类型：布尔型　　　前缀：b　　示例：bFound</p>\n<p>类型：浮点型　　　前缀：f　　 示例：fValue</p>\n<p>类型：函数　　　　前缀：fn　  示例：fnMethod</p>\n<p>类型：整型　　　　前缀：i　　 示例：iValue</p>\n<p>类型：对象　　　　前缀：o　　示例：oType</p>\n<p>类型：正则　　　　前缀：re　  示例：rePatten</p>\n<p>类型：字符串　　　前缀：s　　示例：sValue</p>\n<p>类型：变量　　　　前缀：v　　示例：vValue<br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#### 关键字</span></div><div class=\"line\">ECMA<span class=\"number\">-262</span> 定义的关键字为：</div></pre></td></tr></table></figure></p>\n<p>break　　case　　catch　　continue　　default　　delete　　do　　else　　finally　　for　　function　　if　　in　　instanceof　　new　　return　　switch　　this　　throw　　try　　typeof　　var　　void　　while　　with<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#### 保留字</div><div class=\"line\">ECMA<span class=\"number\">-262</span>第<span class=\"number\">3</span>版中保留字为：</div></pre></td></tr></table></figure></p>\n<p>abstract　　boolean　　byte　　char　　class　　const　　debugger　　double　　enum　　export　　extends　　final　　float　　goto　　implements　　import　　int　　interface　　long　　native　　package　　private　　protected　　public　　short　　static　　super　　synchronized　　throws　　transient　　volatile<br>```</p>\n<h4 id=\"原始值和引用值\"><a href=\"#原始值和引用值\" class=\"headerlink\" title=\"原始值和引用值\"></a>原始值和引用值</h4><p>原始值(primitive value)是存储在栈(stack)中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。</p>\n<p>引用值(reference value)是存储在堆(heap)中的对象，也就是说，存储在变量处的值是一个指针(point)，指向存储对象的内存处。</p>\n"},{"title":"《JavaScript高级程序设计》阅读笔记（三）：ECMAScript中的引用类型","date":"2016-08-02T16:00:00.000Z","modifiedOn":"2016-08-02T16:00:00.000Z","toc":true,"_content":"\n----------\n\n#### 引用类型\n##### Object类\n\n```text\nECMAScript中的所有类都是由Object类继承而来。\n\nObject类具有下列属性：\n\nConstructor：对创建对象的函数的引用（指针），对于Object类，该指针指向原始的Object()函数\n\nPrototype：对该对象的对象原型的引用。\n\nObject类还有几个方法：\n    1、PropertyIsEnumerable(property)：判断给定的属性是否可以用for...in语句进行枚举\n\n    2、ToString()：返回对象的原始字符串表示。\n\n    3、ValueOf()：返回最适合该对象的原始值。对于许多类，该方法返回的值都与toString()的返回值相同。\n\n上面列出的每种属性和方法都会被其他类覆盖。\n```\n##### Boolen类\n在ECMAScript中很少使用Boolean对象，因为不易理解，如：\n\n```\nvar oFalseObject = new Boolean(false);\nvar bResult= oFalseObject && true; //outpus true\n```\n\n在这段代码中，用false值创建Boolean对象，然后用这个值与原始值true进行 AND 操作。在Boolean运算中，false和true进行AND 操作的结果是 false。不过，在这行代码中，计算的是oFalseObject，而不是它的值false。在Boolean表达式中，所有对象都会被自动转换为true，所以结果为true。参考下面的代码：\n\n```\nvar oFalseObject = new Boolean(false);\nvar bResult= oFalseObject && true; //outpus true\nvar bResult2= oFalseObject.valueOf() && true; //outpus false\n```\n##### Number类\n```text\nNumber的toString()方法在上篇文章中有详细的介绍。\n\nNumber有几个处理数值的专用方法：\n\ntoFixed(参数)：返回的是具有指定位数小数的数字的字符串表示。参数范围为0—20\n\ntoExponential(参数)：返回的是用科学计数法表示的数字的字符串形式。与toFixed()方法相似，toExponential()也有一个参数要输出的小数的位数。参数范围为0—20\n\ntoPrecision(参数)：根据最有意义的形式来返回数字的预定形式或指数形式。它有一个参数，即用于表示数字总数（不包括指数）。参数最小为1\n```\n以上三个方法都会进行舍入操作。示例代码：\n\n```\nvar oNumber=new Number(99);\nconsole.log(oNumber.toFixed(0));    //outpus 99\nconsole.log(oNumber.toFixed(2));    //outpus 99.00\n\nvar oNumber1=new Number(99);\nconsole.log(oNumber1.toExponential(0));    //outpus 1e+2 进行了舍入操作\nconsole.log(oNumber1.toExponential(1));    //outpus 9.9e+1\nconsole.log(oNumber1.toExponential(2));    //outpus 9.90e+1\n\nvar oNumber3=new Number(99);\nconsole.log(oNumber3.toPrecision(0));    //outpus error precision 0 out of range\nconsole.log(oNumber3.toPrecision(1));    //outpus 1e+2 进行了舍入操作\nconsole.log(oNumber3.toPrecision(2));    //outpus 99\nconsole.log(oNumber3.toPrecision(3));    //outpus 99.0\n```\n##### String类\n```text\nString对象的valueOf()方法和toString()方法都会返回String型的原始值：\n```\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.valueOf() == oStringObject.toString());//outpus true\n```\n\nString类具有length属性，它是字符串中的字符个数，双字节字符也算一个字符。\n\nString类有大量的方法，主要介绍如下：\n\ncharAt(整型参数)：返回字符串中单个字符。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.charAt(0));//outpus \"H\"\nconsole.log(oStringObject.charAt(1));//outpus \"e\"\nconsole.log(oStringObject.charAt(11));//outpus (an empty string)\n```\n\ncharCodeAt(整型参数)：返回字符串中单个字符代码。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.charCodeAt(0));//outpus \"72\"\nconsole.log(oStringObject.charCodeAt(1));//outpus \"101\"\nconsole.log(oStringObject.charCodeAt(11));//outpus NaN\n```\n\nconcat(字符串)：把一个或多个字符串连接到String对象的原始值上。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nvar sResult=oStringObject.concat(\" Concat\");\nconsole.log(oStringObject);//outpus \"String { 0=\"H\", 1=\"e\", 2=\"l\", ...}\"\nconsole.log(sResult);//outpus \"Hello world Concat\"\nalert(oStringObject);//outpus \"Hello world\"\n```\n\nindexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的开头进行检索）。\n\nlastIndexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的结尾进行检索）。示例：\n\n```\nvar oStringObject=new String(\"Hello Hello\");\nconsole.log(oStringObject.indexOf(\"lo\"));//outpus 3\nconsole.log(oStringObject.lastIndexOf(\"lo\"));//outpus 9\n```\n\nlocaleCompare(字符串)：对字符串进行排序，返回值是下列三个之一：\n\nA、如果String对象按照字母顺序排在参数中的字符串之前，返回负数(通常是-1，但真正返回值由具体实现决定)\n\nB、如果String对象等于参数中的字符串，返回0\n\nC、如果String对象按照字母顺序排在参数中的字符串之后，返回正数(通常是1，但真正返回值由具体实现决定)\n\n示例：\n\n```\nvar oStringObject=new String(\"Hello\");\nconsole.log(oStringObject.localeCompare(\"aello\"));    //outpus 1\nconsole.log(oStringObject.localeCompare(\"Hello\"));    //outpus 0\nconsole.log(oStringObject.localeCompare(\"zello\"));    //outpus -1\n```\n\nslice(整型参数[,整型参数])、substring(整型参数[,整型参数])：从子串创建字符串值。第一个参数是要获取的子串的起始位置，第二个参数是要获取的子串终止前的位置，如果省略第二参数，终止位就默认为字符串长度。这两个方法都不改变String对象自身值。当参数为正时两个方法用法及返回值均相同，只有参数有负值时才不同。对于负参数，slice()方法会用字符串的长度加上参数，substring()将其做为0处理。另外如果有两个参数，第二个比第一个小时，slice()返回的值为空，substring()会把较小的作为第一个参数。为示例：\n\n```\nvar oStringObject=new String(\"Hello World\"); \nconsole.log(oStringObject.slice(3));    //outpus \"lo World\" \nconsole.log(oStringObject.substring(3));    //outpus \"lo World\" \nconsole.log(oStringObject.slice(3,7));    //outpus \"lo W\" \nconsole.log(oStringObject.substring(3,7));    //outpus \"lo W\" \nconsole.log(oStringObject.slice(3,0));    //outpus (an empty string) \nconsole.log(oStringObject.substring(3,0));    //outpus \"Hel\"\n\nconsole.log(oStringObject.slice(-3));    //outpus \"rld\"\nconsole.log(oStringObject.substring(-3));    //outpus \"Hello World\"\nconsole.log(oStringObject.slice(3,-4));    //outpus \"lo W\"\nconsole.log(oStringObject.substring(3,-4));    //outpus \"Hel\"\n```\n\ntoLowerCase()、toLocaleLowerCase()、toUpperCase()、toLocaleUpperCase()：前两个用于把字符串转换为全小写，后两个用于把字符串转换为全大写。toLowerCase()跟toUpperCase()是原始方法，toLocaleLowerCase()跟toLocaleUpperCase()是基于特定区域实现的。示例：\n\n```\nvar oStringObject=new String(\"Hello World\");\nconsole.log(oStringObject.toLowerCase());    //outpus \"hello world\"\nconsole.log(oStringObject.toLocaleLowerCase());    //outpus \"hello world\"\nconsole.log(oStringObject.toUpperCase());    //outpus \"HELLO WORLD\"\nconsole.log(oStringObject.toLocaleUpperCase());    //outpus \"HELLO WORLD\"\n```\n\n```\nvar oStringObject=new String(\"hello world\");\nalert(oStringObject instanceof String); //outpus \"true\"\n```\n","source":"_posts/《JavaScript高级程序设计》阅读笔记（三）：ECMAScript中的引用类型.md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记（三）：ECMAScript中的引用类型\ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-08-03\nmodifiedOn: 2016-08-03\ntoc: true\n---\n\n----------\n\n#### 引用类型\n##### Object类\n\n```text\nECMAScript中的所有类都是由Object类继承而来。\n\nObject类具有下列属性：\n\nConstructor：对创建对象的函数的引用（指针），对于Object类，该指针指向原始的Object()函数\n\nPrototype：对该对象的对象原型的引用。\n\nObject类还有几个方法：\n    1、PropertyIsEnumerable(property)：判断给定的属性是否可以用for...in语句进行枚举\n\n    2、ToString()：返回对象的原始字符串表示。\n\n    3、ValueOf()：返回最适合该对象的原始值。对于许多类，该方法返回的值都与toString()的返回值相同。\n\n上面列出的每种属性和方法都会被其他类覆盖。\n```\n##### Boolen类\n在ECMAScript中很少使用Boolean对象，因为不易理解，如：\n\n```\nvar oFalseObject = new Boolean(false);\nvar bResult= oFalseObject && true; //outpus true\n```\n\n在这段代码中，用false值创建Boolean对象，然后用这个值与原始值true进行 AND 操作。在Boolean运算中，false和true进行AND 操作的结果是 false。不过，在这行代码中，计算的是oFalseObject，而不是它的值false。在Boolean表达式中，所有对象都会被自动转换为true，所以结果为true。参考下面的代码：\n\n```\nvar oFalseObject = new Boolean(false);\nvar bResult= oFalseObject && true; //outpus true\nvar bResult2= oFalseObject.valueOf() && true; //outpus false\n```\n##### Number类\n```text\nNumber的toString()方法在上篇文章中有详细的介绍。\n\nNumber有几个处理数值的专用方法：\n\ntoFixed(参数)：返回的是具有指定位数小数的数字的字符串表示。参数范围为0—20\n\ntoExponential(参数)：返回的是用科学计数法表示的数字的字符串形式。与toFixed()方法相似，toExponential()也有一个参数要输出的小数的位数。参数范围为0—20\n\ntoPrecision(参数)：根据最有意义的形式来返回数字的预定形式或指数形式。它有一个参数，即用于表示数字总数（不包括指数）。参数最小为1\n```\n以上三个方法都会进行舍入操作。示例代码：\n\n```\nvar oNumber=new Number(99);\nconsole.log(oNumber.toFixed(0));    //outpus 99\nconsole.log(oNumber.toFixed(2));    //outpus 99.00\n\nvar oNumber1=new Number(99);\nconsole.log(oNumber1.toExponential(0));    //outpus 1e+2 进行了舍入操作\nconsole.log(oNumber1.toExponential(1));    //outpus 9.9e+1\nconsole.log(oNumber1.toExponential(2));    //outpus 9.90e+1\n\nvar oNumber3=new Number(99);\nconsole.log(oNumber3.toPrecision(0));    //outpus error precision 0 out of range\nconsole.log(oNumber3.toPrecision(1));    //outpus 1e+2 进行了舍入操作\nconsole.log(oNumber3.toPrecision(2));    //outpus 99\nconsole.log(oNumber3.toPrecision(3));    //outpus 99.0\n```\n##### String类\n```text\nString对象的valueOf()方法和toString()方法都会返回String型的原始值：\n```\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.valueOf() == oStringObject.toString());//outpus true\n```\n\nString类具有length属性，它是字符串中的字符个数，双字节字符也算一个字符。\n\nString类有大量的方法，主要介绍如下：\n\ncharAt(整型参数)：返回字符串中单个字符。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.charAt(0));//outpus \"H\"\nconsole.log(oStringObject.charAt(1));//outpus \"e\"\nconsole.log(oStringObject.charAt(11));//outpus (an empty string)\n```\n\ncharCodeAt(整型参数)：返回字符串中单个字符代码。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nconsole.log(oStringObject.charCodeAt(0));//outpus \"72\"\nconsole.log(oStringObject.charCodeAt(1));//outpus \"101\"\nconsole.log(oStringObject.charCodeAt(11));//outpus NaN\n```\n\nconcat(字符串)：把一个或多个字符串连接到String对象的原始值上。示例：\n\n```\nvar oStringObject=new String(\"Hello world\");\nvar sResult=oStringObject.concat(\" Concat\");\nconsole.log(oStringObject);//outpus \"String { 0=\"H\", 1=\"e\", 2=\"l\", ...}\"\nconsole.log(sResult);//outpus \"Hello world Concat\"\nalert(oStringObject);//outpus \"Hello world\"\n```\n\nindexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的开头进行检索）。\n\nlastIndexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的结尾进行检索）。示例：\n\n```\nvar oStringObject=new String(\"Hello Hello\");\nconsole.log(oStringObject.indexOf(\"lo\"));//outpus 3\nconsole.log(oStringObject.lastIndexOf(\"lo\"));//outpus 9\n```\n\nlocaleCompare(字符串)：对字符串进行排序，返回值是下列三个之一：\n\nA、如果String对象按照字母顺序排在参数中的字符串之前，返回负数(通常是-1，但真正返回值由具体实现决定)\n\nB、如果String对象等于参数中的字符串，返回0\n\nC、如果String对象按照字母顺序排在参数中的字符串之后，返回正数(通常是1，但真正返回值由具体实现决定)\n\n示例：\n\n```\nvar oStringObject=new String(\"Hello\");\nconsole.log(oStringObject.localeCompare(\"aello\"));    //outpus 1\nconsole.log(oStringObject.localeCompare(\"Hello\"));    //outpus 0\nconsole.log(oStringObject.localeCompare(\"zello\"));    //outpus -1\n```\n\nslice(整型参数[,整型参数])、substring(整型参数[,整型参数])：从子串创建字符串值。第一个参数是要获取的子串的起始位置，第二个参数是要获取的子串终止前的位置，如果省略第二参数，终止位就默认为字符串长度。这两个方法都不改变String对象自身值。当参数为正时两个方法用法及返回值均相同，只有参数有负值时才不同。对于负参数，slice()方法会用字符串的长度加上参数，substring()将其做为0处理。另外如果有两个参数，第二个比第一个小时，slice()返回的值为空，substring()会把较小的作为第一个参数。为示例：\n\n```\nvar oStringObject=new String(\"Hello World\"); \nconsole.log(oStringObject.slice(3));    //outpus \"lo World\" \nconsole.log(oStringObject.substring(3));    //outpus \"lo World\" \nconsole.log(oStringObject.slice(3,7));    //outpus \"lo W\" \nconsole.log(oStringObject.substring(3,7));    //outpus \"lo W\" \nconsole.log(oStringObject.slice(3,0));    //outpus (an empty string) \nconsole.log(oStringObject.substring(3,0));    //outpus \"Hel\"\n\nconsole.log(oStringObject.slice(-3));    //outpus \"rld\"\nconsole.log(oStringObject.substring(-3));    //outpus \"Hello World\"\nconsole.log(oStringObject.slice(3,-4));    //outpus \"lo W\"\nconsole.log(oStringObject.substring(3,-4));    //outpus \"Hel\"\n```\n\ntoLowerCase()、toLocaleLowerCase()、toUpperCase()、toLocaleUpperCase()：前两个用于把字符串转换为全小写，后两个用于把字符串转换为全大写。toLowerCase()跟toUpperCase()是原始方法，toLocaleLowerCase()跟toLocaleUpperCase()是基于特定区域实现的。示例：\n\n```\nvar oStringObject=new String(\"Hello World\");\nconsole.log(oStringObject.toLowerCase());    //outpus \"hello world\"\nconsole.log(oStringObject.toLocaleLowerCase());    //outpus \"hello world\"\nconsole.log(oStringObject.toUpperCase());    //outpus \"HELLO WORLD\"\nconsole.log(oStringObject.toLocaleUpperCase());    //outpus \"HELLO WORLD\"\n```\n\n```\nvar oStringObject=new String(\"hello world\");\nalert(oStringObject instanceof String); //outpus \"true\"\n```\n","slug":"《JavaScript高级程序设计》阅读笔记（三）：ECMAScript中的引用类型","published":1,"updated":"2016-08-21T12:31:55.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vd000i1ov6n14l0o5y","content":"<hr>\n<h4 id=\"&#x5F15;&#x7528;&#x7C7B;&#x578B;\"><a href=\"#&#x5F15;&#x7528;&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"&#x5F15;&#x7528;&#x7C7B;&#x578B;\"></a>&#x5F15;&#x7528;&#x7C7B;&#x578B;</h4><h5 id=\"object&#x7C7B;\"><a href=\"#Object&#x7C7B;\" class=\"headerlink\" title=\"Object&#x7C7B;\"></a>Object&#x7C7B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">ECMAScript&#x4E2D;&#x7684;&#x6240;&#x6709;&#x7C7B;&#x90FD;&#x662F;&#x7531;Object&#x7C7B;&#x7EE7;&#x627F;&#x800C;&#x6765;&#x3002;</div><div class=\"line\"></div><div class=\"line\">Object&#x7C7B;&#x5177;&#x6709;&#x4E0B;&#x5217;&#x5C5E;&#x6027;&#xFF1A;</div><div class=\"line\"></div><div class=\"line\">Constructor&#xFF1A;&#x5BF9;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x7684;&#x51FD;&#x6570;&#x7684;&#x5F15;&#x7528;&#xFF08;&#x6307;&#x9488;&#xFF09;&#xFF0C;&#x5BF9;&#x4E8E;Object&#x7C7B;&#xFF0C;&#x8BE5;&#x6307;&#x9488;&#x6307;&#x5411;&#x539F;&#x59CB;&#x7684;Object()&#x51FD;&#x6570;</div><div class=\"line\"></div><div class=\"line\">Prototype&#xFF1A;&#x5BF9;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5BF9;&#x8C61;&#x539F;&#x578B;&#x7684;&#x5F15;&#x7528;&#x3002;</div><div class=\"line\"></div><div class=\"line\">Object&#x7C7B;&#x8FD8;&#x6709;&#x51E0;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;</div><div class=\"line\">    1&#x3001;PropertyIsEnumerable(property)&#xFF1A;&#x5224;&#x65AD;&#x7ED9;&#x5B9A;&#x7684;&#x5C5E;&#x6027;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x7528;for...in&#x8BED;&#x53E5;&#x8FDB;&#x884C;&#x679A;&#x4E3E;</div><div class=\"line\"></div><div class=\"line\">    2&#x3001;ToString()&#xFF1A;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#x7684;&#x539F;&#x59CB;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x3002;</div><div class=\"line\"></div><div class=\"line\">    3&#x3001;ValueOf()&#xFF1A;&#x8FD4;&#x56DE;&#x6700;&#x9002;&#x5408;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x539F;&#x59CB;&#x503C;&#x3002;&#x5BF9;&#x4E8E;&#x8BB8;&#x591A;&#x7C7B;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x503C;&#x90FD;&#x4E0E;toString()&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x76F8;&#x540C;&#x3002;</div><div class=\"line\"></div><div class=\"line\">&#x4E0A;&#x9762;&#x5217;&#x51FA;&#x7684;&#x6BCF;&#x79CD;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x88AB;&#x5176;&#x4ED6;&#x7C7B;&#x8986;&#x76D6;&#x3002;</div></pre></td></tr></table></figure>\n<h5 id=\"boolen&#x7C7B;\"><a href=\"#Boolen&#x7C7B;\" class=\"headerlink\" title=\"Boolen&#x7C7B;\"></a>Boolen&#x7C7B;</h5><p>&#x5728;ECMAScript&#x4E2D;&#x5F88;&#x5C11;&#x4F7F;&#x7528;Boolean&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oFalseObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bResult= oFalseObject &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus true</span></div></pre></td></tr></table></figure>\n<p>&#x5728;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x7528;false&#x503C;&#x521B;&#x5EFA;Boolean&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x8FD9;&#x4E2A;&#x503C;&#x4E0E;&#x539F;&#x59CB;&#x503C;true&#x8FDB;&#x884C; AND &#x64CD;&#x4F5C;&#x3002;&#x5728;Boolean&#x8FD0;&#x7B97;&#x4E2D;&#xFF0C;false&#x548C;true&#x8FDB;&#x884C;AND &#x64CD;&#x4F5C;&#x7684;&#x7ED3;&#x679C;&#x662F; false&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x5728;&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x8BA1;&#x7B97;&#x7684;&#x662F;oFalseObject&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x7684;&#x503C;false&#x3002;&#x5728;Boolean&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x90FD;&#x4F1A;&#x88AB;&#x81EA;&#x52A8;&#x8F6C;&#x6362;&#x4E3A;true&#xFF0C;&#x6240;&#x4EE5;&#x7ED3;&#x679C;&#x4E3A;true&#x3002;&#x53C2;&#x8003;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oFalseObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bResult= oFalseObject &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus true</span></div><div class=\"line\"><span class=\"keyword\">var</span> bResult2= oFalseObject.valueOf() &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus false</span></div></pre></td></tr></table></figure>\n<h5 id=\"number&#x7C7B;\"><a href=\"#Number&#x7C7B;\" class=\"headerlink\" title=\"Number&#x7C7B;\"></a>Number&#x7C7B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Number&#x7684;toString()&#x65B9;&#x6CD5;&#x5728;&#x4E0A;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x6709;&#x8BE6;&#x7EC6;&#x7684;&#x4ECB;&#x7ECD;&#x3002;</div><div class=\"line\"></div><div class=\"line\">Number&#x6709;&#x51E0;&#x4E2A;&#x5904;&#x7406;&#x6570;&#x503C;&#x7684;&#x4E13;&#x7528;&#x65B9;&#x6CD5;&#xFF1A;</div><div class=\"line\"></div><div class=\"line\">toFixed(&#x53C2;&#x6570;)&#xFF1A;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x5177;&#x6709;&#x6307;&#x5B9A;&#x4F4D;&#x6570;&#x5C0F;&#x6570;&#x7684;&#x6570;&#x5B57;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x3002;&#x53C2;&#x6570;&#x8303;&#x56F4;&#x4E3A;0&#x2014;20</div><div class=\"line\"></div><div class=\"line\">toExponential(&#x53C2;&#x6570;)&#xFF1A;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x7528;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#x8868;&#x793A;&#x7684;&#x6570;&#x5B57;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;&#x3002;&#x4E0E;toFixed()&#x65B9;&#x6CD5;&#x76F8;&#x4F3C;&#xFF0C;toExponential()&#x4E5F;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x8981;&#x8F93;&#x51FA;&#x7684;&#x5C0F;&#x6570;&#x7684;&#x4F4D;&#x6570;&#x3002;&#x53C2;&#x6570;&#x8303;&#x56F4;&#x4E3A;0&#x2014;20</div><div class=\"line\"></div><div class=\"line\">toPrecision(&#x53C2;&#x6570;)&#xFF1A;&#x6839;&#x636E;&#x6700;&#x6709;&#x610F;&#x4E49;&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8FD4;&#x56DE;&#x6570;&#x5B57;&#x7684;&#x9884;&#x5B9A;&#x5F62;&#x5F0F;&#x6216;&#x6307;&#x6570;&#x5F62;&#x5F0F;&#x3002;&#x5B83;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x6570;&#x5B57;&#x603B;&#x6570;&#xFF08;&#x4E0D;&#x5305;&#x62EC;&#x6307;&#x6570;&#xFF09;&#x3002;&#x53C2;&#x6570;&#x6700;&#x5C0F;&#x4E3A;1</div></pre></td></tr></table></figure>\n<p>&#x4EE5;&#x4E0A;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x820D;&#x5165;&#x64CD;&#x4F5C;&#x3002;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oNumber=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber.toFixed(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus 99</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber.toFixed(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 99.00</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oNumber1=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus 1e+2 &#x8FDB;&#x884C;&#x4E86;&#x820D;&#x5165;&#x64CD;&#x4F5C;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">1</span>));    <span class=\"comment\">//outpus 9.9e+1</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 9.90e+1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oNumber3=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus error precision 0 out of range</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">1</span>));    <span class=\"comment\">//outpus 1e+2 &#x8FDB;&#x884C;&#x4E86;&#x820D;&#x5165;&#x64CD;&#x4F5C;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 99</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus 99.0</span></div></pre></td></tr></table></figure>\n<h5 id=\"string&#x7C7B;\"><a href=\"#String&#x7C7B;\" class=\"headerlink\" title=\"String&#x7C7B;\"></a>String&#x7C7B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">String&#x5BF9;&#x8C61;&#x7684;valueOf()&#x65B9;&#x6CD5;&#x548C;toString()&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;String&#x578B;&#x7684;&#x539F;&#x59CB;&#x503C;&#xFF1A;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;Hello world&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.valueOf() == oStringObject.toString());<span class=\"comment\">//outpus true</span></div></pre></td></tr></table></figure>\n<p>String&#x7C7B;&#x5177;&#x6709;length&#x5C5E;&#x6027;&#xFF0C;&#x5B83;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E2A;&#x6570;&#xFF0C;&#x53CC;&#x5B57;&#x8282;&#x5B57;&#x7B26;&#x4E5F;&#x7B97;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;</p>\n<p>String&#x7C7B;&#x6709;&#x5927;&#x91CF;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x5982;&#x4E0B;&#xFF1A;</p>\n<p>charAt(&#x6574;&#x578B;&#x53C2;&#x6570;)&#xFF1A;&#x8FD4;&#x56DE;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;Hello world&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">0</span>));<span class=\"comment\">//outpus &quot;H&quot;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">1</span>));<span class=\"comment\">//outpus &quot;e&quot;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">11</span>));<span class=\"comment\">//outpus (an empty string)</span></div></pre></td></tr></table></figure>\n<p>charCodeAt(&#x6574;&#x578B;&#x53C2;&#x6570;)&#xFF1A;&#x8FD4;&#x56DE;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x4EE3;&#x7801;&#x3002;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;Hello world&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">0</span>));<span class=\"comment\">//outpus &quot;72&quot;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">1</span>));<span class=\"comment\">//outpus &quot;101&quot;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">11</span>));<span class=\"comment\">//outpus NaN</span></div></pre></td></tr></table></figure>\n<p>concat(&#x5B57;&#x7B26;&#x4E32;)&#xFF1A;&#x628A;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x8FDE;&#x63A5;&#x5230;String&#x5BF9;&#x8C61;&#x7684;&#x539F;&#x59CB;&#x503C;&#x4E0A;&#x3002;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">var</span> oStringObject=<span class=\"built_in\">new</span> String(<span class=\"string\">&quot;Hello world&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">var</span> sResult=oStringObject.<span class=\"built_in\">concat</span>(<span class=\"string\">&quot; Concat&quot;</span>);</div><div class=\"line\">console.<span class=\"built_in\">log</span>(oStringObject);//outpus <span class=\"string\">&quot;String { 0=&quot;</span>H<span class=\"string\">&quot;, 1=&quot;</span>e<span class=\"string\">&quot;, 2=&quot;</span>l<span class=\"string\">&quot;, ...}&quot;</span></div><div class=\"line\">console.<span class=\"built_in\">log</span>(sResult);//outpus <span class=\"string\">&quot;Hello world Concat&quot;</span></div><div class=\"line\">alert(oStringObject);//outpus <span class=\"string\">&quot;Hello world&quot;</span></div></pre></td></tr></table></figure>\n<p>indexOf(&#x5B57;&#x7B26;&#x4E32;)&#xFF1A;&#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5F00;&#x5934;&#x8FDB;&#x884C;&#x68C0;&#x7D22;&#xFF09;&#x3002;</p>\n<p>lastIndexOf(&#x5B57;&#x7B26;&#x4E32;)&#xFF1A;&#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7ED3;&#x5C3E;&#x8FDB;&#x884C;&#x68C0;&#x7D22;&#xFF09;&#x3002;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;Hello Hello&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.indexOf(<span class=\"string\">&quot;lo&quot;</span>));<span class=\"comment\">//outpus 3</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.lastIndexOf(<span class=\"string\">&quot;lo&quot;</span>));<span class=\"comment\">//outpus 9</span></div></pre></td></tr></table></figure>\n<p>localeCompare(&#x5B57;&#x7B26;&#x4E32;)&#xFF1A;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x4E0B;&#x5217;&#x4E09;&#x4E2A;&#x4E4B;&#x4E00;&#xFF1A;</p>\n<p>A&#x3001;&#x5982;&#x679C;String&#x5BF9;&#x8C61;&#x6309;&#x7167;&#x5B57;&#x6BCD;&#x987A;&#x5E8F;&#x6392;&#x5728;&#x53C2;&#x6570;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E4B;&#x524D;&#xFF0C;&#x8FD4;&#x56DE;&#x8D1F;&#x6570;(&#x901A;&#x5E38;&#x662F;-1&#xFF0C;&#x4F46;&#x771F;&#x6B63;&#x8FD4;&#x56DE;&#x503C;&#x7531;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x51B3;&#x5B9A;)</p>\n<p>B&#x3001;&#x5982;&#x679C;String&#x5BF9;&#x8C61;&#x7B49;&#x4E8E;&#x53C2;&#x6570;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8FD4;&#x56DE;0</p>\n<p>C&#x3001;&#x5982;&#x679C;String&#x5BF9;&#x8C61;&#x6309;&#x7167;&#x5B57;&#x6BCD;&#x987A;&#x5E8F;&#x6392;&#x5728;&#x53C2;&#x6570;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E4B;&#x540E;&#xFF0C;&#x8FD4;&#x56DE;&#x6B63;&#x6570;(&#x901A;&#x5E38;&#x662F;1&#xFF0C;&#x4F46;&#x771F;&#x6B63;&#x8FD4;&#x56DE;&#x503C;&#x7531;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x51B3;&#x5B9A;)</p>\n<p>&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;Hello&quot;</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">&quot;aello&quot;</span>));    <span class=\"comment\">//outpus 1</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">&quot;Hello&quot;</span>));    <span class=\"comment\">//outpus 0</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">&quot;zello&quot;</span>));    <span class=\"comment\">//outpus -1</span></div></pre></td></tr></table></figure>\n<p>slice(&#x6574;&#x578B;&#x53C2;&#x6570;[,&#x6574;&#x578B;&#x53C2;&#x6570;])&#x3001;substring(&#x6574;&#x578B;&#x53C2;&#x6570;[,&#x6574;&#x578B;&#x53C2;&#x6570;])&#xFF1A;&#x4ECE;&#x5B50;&#x4E32;&#x521B;&#x5EFA;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8981;&#x83B7;&#x53D6;&#x7684;&#x5B50;&#x4E32;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8981;&#x83B7;&#x53D6;&#x7684;&#x5B50;&#x4E32;&#x7EC8;&#x6B62;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5982;&#x679C;&#x7701;&#x7565;&#x7B2C;&#x4E8C;&#x53C2;&#x6570;&#xFF0C;&#x7EC8;&#x6B62;&#x4F4D;&#x5C31;&#x9ED8;&#x8BA4;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x90FD;&#x4E0D;&#x6539;&#x53D8;String&#x5BF9;&#x8C61;&#x81EA;&#x8EAB;&#x503C;&#x3002;&#x5F53;&#x53C2;&#x6570;&#x4E3A;&#x6B63;&#x65F6;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x7528;&#x6CD5;&#x53CA;&#x8FD4;&#x56DE;&#x503C;&#x5747;&#x76F8;&#x540C;&#xFF0C;&#x53EA;&#x6709;&#x53C2;&#x6570;&#x6709;&#x8D1F;&#x503C;&#x65F6;&#x624D;&#x4E0D;&#x540C;&#x3002;&#x5BF9;&#x4E8E;&#x8D1F;&#x53C2;&#x6570;&#xFF0C;slice()&#x65B9;&#x6CD5;&#x4F1A;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x52A0;&#x4E0A;&#x53C2;&#x6570;&#xFF0C;substring()&#x5C06;&#x5176;&#x505A;&#x4E3A;0&#x5904;&#x7406;&#x3002;&#x53E6;&#x5916;&#x5982;&#x679C;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6BD4;&#x7B2C;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;slice()&#x8FD4;&#x56DE;&#x7684;&#x503C;&#x4E3A;&#x7A7A;&#xFF0C;substring()&#x4F1A;&#x628A;&#x8F83;&#x5C0F;&#x7684;&#x4F5C;&#x4E3A;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x3002;&#x4E3A;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oStringObject=new String(<span class=\"string\">&quot;Hello World&quot;</span>); </div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus &quot;lo World&quot; </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus &quot;lo World&quot; </span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">7</span>));    <span class=\"comment\">//outpus &quot;lo W&quot; </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">7</span>));    <span class=\"comment\">//outpus &quot;lo W&quot; </span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">0</span>));    <span class=\"comment\">//outpus (an empty string) </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">0</span>));    <span class=\"comment\">//outpus &quot;Hel&quot;</span></div><div class=\"line\"></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">-3</span>));    <span class=\"comment\">//outpus &quot;rld&quot;</span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">-3</span>));    <span class=\"comment\">//outpus &quot;Hello World&quot;</span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">-4</span>));    <span class=\"comment\">//outpus &quot;lo W&quot;</span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">-4</span>));    <span class=\"comment\">//outpus &quot;Hel&quot;</span></div></pre></td></tr></table></figure>\n<p>toLowerCase()&#x3001;toLocaleLowerCase()&#x3001;toUpperCase()&#x3001;toLocaleUpperCase()&#xFF1A;&#x524D;&#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x628A;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x4E3A;&#x5168;&#x5C0F;&#x5199;&#xFF0C;&#x540E;&#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x628A;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x4E3A;&#x5168;&#x5927;&#x5199;&#x3002;toLowerCase()&#x8DDF;toUpperCase()&#x662F;&#x539F;&#x59CB;&#x65B9;&#x6CD5;&#xFF0C;toLocaleLowerCase()&#x8DDF;toLocaleUpperCase()&#x662F;&#x57FA;&#x4E8E;&#x7279;&#x5B9A;&#x533A;&#x57DF;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x793A;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oStringObject=new String(<span class=\"string\">&quot;Hello World&quot;</span>);</div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LowerCase());    //outpus <span class=\"string\">&quot;hello world&quot;</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LocaleLowerCase());    //outpus <span class=\"string\">&quot;hello world&quot;</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>UpperCase());    //outpus <span class=\"string\">&quot;HELLO WORLD&quot;</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LocaleUpperCase());    //outpus <span class=\"string\">&quot;HELLO WORLD&quot;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">&quot;hello world&quot;</span>);</div><div class=\"line\">alert(oStringObject <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>); <span class=\"comment\">//outpus &quot;true&quot;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<h4 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h4><h5 id=\"Object类\"><a href=\"#Object类\" class=\"headerlink\" title=\"Object类\"></a>Object类</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">ECMAScript中的所有类都是由Object类继承而来。</div><div class=\"line\"></div><div class=\"line\">Object类具有下列属性：</div><div class=\"line\"></div><div class=\"line\">Constructor：对创建对象的函数的引用（指针），对于Object类，该指针指向原始的Object()函数</div><div class=\"line\"></div><div class=\"line\">Prototype：对该对象的对象原型的引用。</div><div class=\"line\"></div><div class=\"line\">Object类还有几个方法：</div><div class=\"line\">    1、PropertyIsEnumerable(property)：判断给定的属性是否可以用for...in语句进行枚举</div><div class=\"line\"></div><div class=\"line\">    2、ToString()：返回对象的原始字符串表示。</div><div class=\"line\"></div><div class=\"line\">    3、ValueOf()：返回最适合该对象的原始值。对于许多类，该方法返回的值都与toString()的返回值相同。</div><div class=\"line\"></div><div class=\"line\">上面列出的每种属性和方法都会被其他类覆盖。</div></pre></td></tr></table></figure>\n<h5 id=\"Boolen类\"><a href=\"#Boolen类\" class=\"headerlink\" title=\"Boolen类\"></a>Boolen类</h5><p>在ECMAScript中很少使用Boolean对象，因为不易理解，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oFalseObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bResult= oFalseObject &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus true</span></div></pre></td></tr></table></figure>\n<p>在这段代码中，用false值创建Boolean对象，然后用这个值与原始值true进行 AND 操作。在Boolean运算中，false和true进行AND 操作的结果是 false。不过，在这行代码中，计算的是oFalseObject，而不是它的值false。在Boolean表达式中，所有对象都会被自动转换为true，所以结果为true。参考下面的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oFalseObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bResult= oFalseObject &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus true</span></div><div class=\"line\"><span class=\"keyword\">var</span> bResult2= oFalseObject.valueOf() &amp;&amp; <span class=\"literal\">true</span>; <span class=\"comment\">//outpus false</span></div></pre></td></tr></table></figure>\n<h5 id=\"Number类\"><a href=\"#Number类\" class=\"headerlink\" title=\"Number类\"></a>Number类</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Number的toString()方法在上篇文章中有详细的介绍。</div><div class=\"line\"></div><div class=\"line\">Number有几个处理数值的专用方法：</div><div class=\"line\"></div><div class=\"line\">toFixed(参数)：返回的是具有指定位数小数的数字的字符串表示。参数范围为0—20</div><div class=\"line\"></div><div class=\"line\">toExponential(参数)：返回的是用科学计数法表示的数字的字符串形式。与toFixed()方法相似，toExponential()也有一个参数要输出的小数的位数。参数范围为0—20</div><div class=\"line\"></div><div class=\"line\">toPrecision(参数)：根据最有意义的形式来返回数字的预定形式或指数形式。它有一个参数，即用于表示数字总数（不包括指数）。参数最小为1</div></pre></td></tr></table></figure>\n<p>以上三个方法都会进行舍入操作。示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oNumber=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber.toFixed(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus 99</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber.toFixed(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 99.00</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oNumber1=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus 1e+2 进行了舍入操作</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">1</span>));    <span class=\"comment\">//outpus 9.9e+1</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber1.toExponential(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 9.90e+1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oNumber3=<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">99</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">0</span>));    <span class=\"comment\">//outpus error precision 0 out of range</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">1</span>));    <span class=\"comment\">//outpus 1e+2 进行了舍入操作</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">2</span>));    <span class=\"comment\">//outpus 99</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oNumber3.toPrecision(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus 99.0</span></div></pre></td></tr></table></figure>\n<h5 id=\"String类\"><a href=\"#String类\" class=\"headerlink\" title=\"String类\"></a>String类</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">String对象的valueOf()方法和toString()方法都会返回String型的原始值：</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello world\"</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.valueOf() == oStringObject.toString());<span class=\"comment\">//outpus true</span></div></pre></td></tr></table></figure>\n<p>String类具有length属性，它是字符串中的字符个数，双字节字符也算一个字符。</p>\n<p>String类有大量的方法，主要介绍如下：</p>\n<p>charAt(整型参数)：返回字符串中单个字符。示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello world\"</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">0</span>));<span class=\"comment\">//outpus \"H\"</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">1</span>));<span class=\"comment\">//outpus \"e\"</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charAt(<span class=\"number\">11</span>));<span class=\"comment\">//outpus (an empty string)</span></div></pre></td></tr></table></figure>\n<p>charCodeAt(整型参数)：返回字符串中单个字符代码。示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello world\"</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">0</span>));<span class=\"comment\">//outpus \"72\"</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">1</span>));<span class=\"comment\">//outpus \"101\"</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.charCodeAt(<span class=\"number\">11</span>));<span class=\"comment\">//outpus NaN</span></div></pre></td></tr></table></figure>\n<p>concat(字符串)：把一个或多个字符串连接到String对象的原始值上。示例：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">var</span> oStringObject=<span class=\"built_in\">new</span> String(<span class=\"string\">\"Hello world\"</span>);</div><div class=\"line\"><span class=\"built_in\">var</span> sResult=oStringObject.<span class=\"built_in\">concat</span>(<span class=\"string\">\" Concat\"</span>);</div><div class=\"line\">console.<span class=\"built_in\">log</span>(oStringObject);//outpus <span class=\"string\">\"String &#123; 0=\"</span>H<span class=\"string\">\", 1=\"</span>e<span class=\"string\">\", 2=\"</span>l<span class=\"string\">\", ...&#125;\"</span></div><div class=\"line\">console.<span class=\"built_in\">log</span>(sResult);//outpus <span class=\"string\">\"Hello world Concat\"</span></div><div class=\"line\">alert(oStringObject);//outpus <span class=\"string\">\"Hello world\"</span></div></pre></td></tr></table></figure>\n<p>indexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的开头进行检索）。</p>\n<p>lastIndexOf(字符串)：返回指定的字符串在另一个字符串中的位置（从字符串的结尾进行检索）。示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello Hello\"</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.indexOf(<span class=\"string\">\"lo\"</span>));<span class=\"comment\">//outpus 3</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.lastIndexOf(<span class=\"string\">\"lo\"</span>));<span class=\"comment\">//outpus 9</span></div></pre></td></tr></table></figure>\n<p>localeCompare(字符串)：对字符串进行排序，返回值是下列三个之一：</p>\n<p>A、如果String对象按照字母顺序排在参数中的字符串之前，返回负数(通常是-1，但真正返回值由具体实现决定)</p>\n<p>B、如果String对象等于参数中的字符串，返回0</p>\n<p>C、如果String对象按照字母顺序排在参数中的字符串之后，返回正数(通常是1，但真正返回值由具体实现决定)</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello\"</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">\"aello\"</span>));    <span class=\"comment\">//outpus 1</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">\"Hello\"</span>));    <span class=\"comment\">//outpus 0</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(oStringObject.localeCompare(<span class=\"string\">\"zello\"</span>));    <span class=\"comment\">//outpus -1</span></div></pre></td></tr></table></figure>\n<p>slice(整型参数[,整型参数])、substring(整型参数[,整型参数])：从子串创建字符串值。第一个参数是要获取的子串的起始位置，第二个参数是要获取的子串终止前的位置，如果省略第二参数，终止位就默认为字符串长度。这两个方法都不改变String对象自身值。当参数为正时两个方法用法及返回值均相同，只有参数有负值时才不同。对于负参数，slice()方法会用字符串的长度加上参数，substring()将其做为0处理。另外如果有两个参数，第二个比第一个小时，slice()返回的值为空，substring()会把较小的作为第一个参数。为示例：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oStringObject=new String(<span class=\"string\">\"Hello World\"</span>); </div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus \"lo World\" </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>));    <span class=\"comment\">//outpus \"lo World\" </span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">7</span>));    <span class=\"comment\">//outpus \"lo W\" </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">7</span>));    <span class=\"comment\">//outpus \"lo W\" </span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">0</span>));    <span class=\"comment\">//outpus (an empty string) </span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">0</span>));    <span class=\"comment\">//outpus \"Hel\"</span></div><div class=\"line\"></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">-3</span>));    <span class=\"comment\">//outpus \"rld\"</span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">-3</span>));    <span class=\"comment\">//outpus \"Hello World\"</span></div><div class=\"line\">console.log(oStringObject.slice(<span class=\"number\">3</span>,<span class=\"number\">-4</span>));    <span class=\"comment\">//outpus \"lo W\"</span></div><div class=\"line\">console.log(oStringObject.substring(<span class=\"number\">3</span>,<span class=\"number\">-4</span>));    <span class=\"comment\">//outpus \"Hel\"</span></div></pre></td></tr></table></figure>\n<p>toLowerCase()、toLocaleLowerCase()、toUpperCase()、toLocaleUpperCase()：前两个用于把字符串转换为全小写，后两个用于把字符串转换为全大写。toLowerCase()跟toUpperCase()是原始方法，toLocaleLowerCase()跟toLocaleUpperCase()是基于特定区域实现的。示例：</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oStringObject=new String(<span class=\"string\">\"Hello World\"</span>);</div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LowerCase());    //outpus <span class=\"string\">\"hello world\"</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LocaleLowerCase());    //outpus <span class=\"string\">\"hello world\"</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>UpperCase());    //outpus <span class=\"string\">\"HELLO WORLD\"</span></div><div class=\"line\">console.<span class=\"keyword\">log</span>(oStringObject.<span class=\"keyword\">to</span>LocaleUpperCase());    //outpus <span class=\"string\">\"HELLO WORLD\"</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oStringObject=<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"hello world\"</span>);</div><div class=\"line\">alert(oStringObject <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>); <span class=\"comment\">//outpus \"true\"</span></div></pre></td></tr></table></figure>\n"},{"title":"《JavaScript高级程序设计》阅读笔记（二）：ECMAScript中的原始类型","date":"2016-08-01T16:00:00.000Z","modifiedOn":"2016-08-01T16:00:00.000Z","toc":true,"_content":"\n----------\n\n#### 原始类型\n```text\nECMAScript有5种原始类型(primitive type)，即Undefined、Null、Boolean、Number和String。ECMAScript提供了typeof来判断值的类型。\n```\n##### typeof运算符\n\n```\nvar sTemp=\"test string\";\nalert(typeof sTemp);//outpus \"string\"\nalert(typeof 95);//outpus \"number\"\n```\n```text\ntypeof运算符返回值只有5种，分别为：如果变量是Undefined型返回\"undefined\"，如果变量是Boolean型返回\"boolean\"，如果变量是Number型返回\"number\"，如果变量是String型返回\"string\"，如果变量是一种引用类型或Null类型返回\"object\"。\n```\n##### Undefined类型\n```text\nUndefined类型只有一个值，即undefined。当声明的变量未初始化和函数无明确的返回值时该变量的默认值和函数的返回值都是undefined。需要注意的是值undefined并不同于未定义的值，但typeof不区分这两种值。参考下面的代码：\n```\n```\nvar oTemp;\nalert(typeof oTemp); //outpus \"undefined\"\nalert(typeof otemp2); //outpus \"undefined\"\nalert(oTemp==undefined); //outpus \"true\"\nalert(oTemp2==undefined); //causes error\nfunction testFunc(){\n}\nalert(testFunc() == undefined); //outpus \"true\"\n```\n\n##### Null类型\n```text\nNull也是只有一个值的类型，它只有一个专用值null。值undefined实际不是从值null派生来的，因此ECMAScript把它们定义为相等。\n```\n```\nalert(null == undefined); //outpus \"true\"\n```\n```text\n尽管这两个值相等，但它们的含义不同。undefined是声明了变量但未对其初始化时的值，null则用于表示尚未存在的对象。\n```\n##### Boolean类型\n```text\nBoolean有两个值true和false\n```\n\n##### Number类型\n```text\nNumber可以表示32位整数，还可以表示64位浮点数，不同进制间的表示：\n```\n\n```\nvar iNum=55;// 10进制\nvar iNum=070;// 8进制var iNum=oxAB;//16进制\nvar fNum=3.125e7;//科学计数法表示浮点数\n```\n```text\n几个特殊值也被定义为Number类型，前两个是Number.MAX_VALUE和Number.MIN_VALUE，它们定义了Number值集合的外边界。所有ECMAScript数都必须在这两个值之间，不过计算生成的数值结果可以不落在这两个数之间。\n\n当计算生成的数大于Number.MAX_VALUE时，它将被赋予值Number.POSITIVE_INFINITY，意味着不再有数字值。同样，生成的数值小于Number.MIN_VALUE的计算也会被赋予值Number.NEGATIVE_INFINITY，也意味着不再有数字值。如果计算返回的结果是无穷大，那么生成的结果不能再用于其他计算。\n\n事实上，有专门的值表示无穷大，即Infinity。Number.POSITIVE_INFINITY的值为Infinity，Number.NEGATIVE_INFINITY的值为-Infinity。\n\n```\n可以对任何数调用isFinit()方法来判断是不是无穷大。例：\n\n```\n\nvar iResult = iNum*some_really_large_number;\nif(isFinit(iResult)){ \n    alert(\"Number is finite\");\n}else{ \n    alert(\"Number is infinite\");\n}\n\n```\n\n还有一个特殊值是NaN，表示非数(Not a Number)。NaN一般为类型转换失败时的值，NaN不能用于算术计算，NaN的另一个奇特之处在于它与自身并不相等，因此推荐使用isNaN()，如：\n\n```\nalert(NaN == NaN); //outpus \"false\"\nalert(isNaN(\"blue\")); //outpus \"true\"\nalert(isNaN(\"123\")); //outpus \"false\"\nalert(isNaN(123)); //outpus \"false\"\n```\n#### String类型\n```text\nString是唯一没有固定大小的原始类型。ECMAScript的字符字面量：\n\n字面量　　　　　　　　含义\n\\n　　　　　　　　     换行\n\\t　　　　　　　　     制表符\n\\b　　　　　　　　　  空格\n\\r　　　　　　　　　　回车\n\\f　　　　　　　　　　换页符\n\\\\　　　　　　　　　　反斜杠\n\\'　　　　　　　　　　单引号\n\\\"　　　　　　　　　　双引号\n\\0nnn　　　　　　　  八进制代码nnn表示的字符\n\\xnn　　　　　　　　 16进制代码nn表示的字符\n\\unnnn　　　　　　   16进制的代码nnnn表不的Unicode字符\n```\n","source":"_posts/《JavaScript高级程序设计》阅读笔记（二）：ECMAScript中的原始类型.md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记（二）：ECMAScript中的原始类型\ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-08-02\nmodifiedOn: 2016-08-02\ntoc: true\n---\n\n----------\n\n#### 原始类型\n```text\nECMAScript有5种原始类型(primitive type)，即Undefined、Null、Boolean、Number和String。ECMAScript提供了typeof来判断值的类型。\n```\n##### typeof运算符\n\n```\nvar sTemp=\"test string\";\nalert(typeof sTemp);//outpus \"string\"\nalert(typeof 95);//outpus \"number\"\n```\n```text\ntypeof运算符返回值只有5种，分别为：如果变量是Undefined型返回\"undefined\"，如果变量是Boolean型返回\"boolean\"，如果变量是Number型返回\"number\"，如果变量是String型返回\"string\"，如果变量是一种引用类型或Null类型返回\"object\"。\n```\n##### Undefined类型\n```text\nUndefined类型只有一个值，即undefined。当声明的变量未初始化和函数无明确的返回值时该变量的默认值和函数的返回值都是undefined。需要注意的是值undefined并不同于未定义的值，但typeof不区分这两种值。参考下面的代码：\n```\n```\nvar oTemp;\nalert(typeof oTemp); //outpus \"undefined\"\nalert(typeof otemp2); //outpus \"undefined\"\nalert(oTemp==undefined); //outpus \"true\"\nalert(oTemp2==undefined); //causes error\nfunction testFunc(){\n}\nalert(testFunc() == undefined); //outpus \"true\"\n```\n\n##### Null类型\n```text\nNull也是只有一个值的类型，它只有一个专用值null。值undefined实际不是从值null派生来的，因此ECMAScript把它们定义为相等。\n```\n```\nalert(null == undefined); //outpus \"true\"\n```\n```text\n尽管这两个值相等，但它们的含义不同。undefined是声明了变量但未对其初始化时的值，null则用于表示尚未存在的对象。\n```\n##### Boolean类型\n```text\nBoolean有两个值true和false\n```\n\n##### Number类型\n```text\nNumber可以表示32位整数，还可以表示64位浮点数，不同进制间的表示：\n```\n\n```\nvar iNum=55;// 10进制\nvar iNum=070;// 8进制var iNum=oxAB;//16进制\nvar fNum=3.125e7;//科学计数法表示浮点数\n```\n```text\n几个特殊值也被定义为Number类型，前两个是Number.MAX_VALUE和Number.MIN_VALUE，它们定义了Number值集合的外边界。所有ECMAScript数都必须在这两个值之间，不过计算生成的数值结果可以不落在这两个数之间。\n\n当计算生成的数大于Number.MAX_VALUE时，它将被赋予值Number.POSITIVE_INFINITY，意味着不再有数字值。同样，生成的数值小于Number.MIN_VALUE的计算也会被赋予值Number.NEGATIVE_INFINITY，也意味着不再有数字值。如果计算返回的结果是无穷大，那么生成的结果不能再用于其他计算。\n\n事实上，有专门的值表示无穷大，即Infinity。Number.POSITIVE_INFINITY的值为Infinity，Number.NEGATIVE_INFINITY的值为-Infinity。\n\n```\n可以对任何数调用isFinit()方法来判断是不是无穷大。例：\n\n```\n\nvar iResult = iNum*some_really_large_number;\nif(isFinit(iResult)){ \n    alert(\"Number is finite\");\n}else{ \n    alert(\"Number is infinite\");\n}\n\n```\n\n还有一个特殊值是NaN，表示非数(Not a Number)。NaN一般为类型转换失败时的值，NaN不能用于算术计算，NaN的另一个奇特之处在于它与自身并不相等，因此推荐使用isNaN()，如：\n\n```\nalert(NaN == NaN); //outpus \"false\"\nalert(isNaN(\"blue\")); //outpus \"true\"\nalert(isNaN(\"123\")); //outpus \"false\"\nalert(isNaN(123)); //outpus \"false\"\n```\n#### String类型\n```text\nString是唯一没有固定大小的原始类型。ECMAScript的字符字面量：\n\n字面量　　　　　　　　含义\n\\n　　　　　　　　     换行\n\\t　　　　　　　　     制表符\n\\b　　　　　　　　　  空格\n\\r　　　　　　　　　　回车\n\\f　　　　　　　　　　换页符\n\\\\　　　　　　　　　　反斜杠\n\\'　　　　　　　　　　单引号\n\\\"　　　　　　　　　　双引号\n\\0nnn　　　　　　　  八进制代码nnn表示的字符\n\\xnn　　　　　　　　 16进制代码nn表示的字符\n\\unnnn　　　　　　   16进制的代码nnnn表不的Unicode字符\n```\n","slug":"《JavaScript高级程序设计》阅读笔记（二）：ECMAScript中的原始类型","published":1,"updated":"2016-08-21T12:31:55.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vg000m1ov68d7ldmq1","content":"<hr>\n<h4 id=\"&#x539F;&#x59CB;&#x7C7B;&#x578B;\"><a href=\"#&#x539F;&#x59CB;&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"&#x539F;&#x59CB;&#x7C7B;&#x578B;\"></a>&#x539F;&#x59CB;&#x7C7B;&#x578B;</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ECMAScript&#x6709;5&#x79CD;&#x539F;&#x59CB;&#x7C7B;&#x578B;(primitive type)&#xFF0C;&#x5373;Undefined&#x3001;Null&#x3001;Boolean&#x3001;Number&#x548C;String&#x3002;ECMAScript&#x63D0;&#x4F9B;&#x4E86;typeof&#x6765;&#x5224;&#x65AD;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x3002;</div></pre></td></tr></table></figure>\n<h5 id=\"typeof&#x8FD0;&#x7B97;&#x7B26;\"><a href=\"#typeof&#x8FD0;&#x7B97;&#x7B26;\" class=\"headerlink\" title=\"typeof&#x8FD0;&#x7B97;&#x7B26;\"></a>typeof&#x8FD0;&#x7B97;&#x7B26;</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> sTemp=<span class=\"string\">&quot;test string&quot;</span>;</div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> sTemp);<span class=\"comment\">//outpus &quot;string&quot;</span></div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> <span class=\"number\">95</span>);<span class=\"comment\">//outpus &quot;number&quot;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">typeof&#x8FD0;&#x7B97;&#x7B26;&#x8FD4;&#x56DE;&#x503C;&#x53EA;&#x6709;5&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x662F;Undefined&#x578B;&#x8FD4;&#x56DE;&quot;undefined&quot;&#xFF0C;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x662F;Boolean&#x578B;&#x8FD4;&#x56DE;&quot;boolean&quot;&#xFF0C;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x662F;Number&#x578B;&#x8FD4;&#x56DE;&quot;number&quot;&#xFF0C;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x662F;String&#x578B;&#x8FD4;&#x56DE;&quot;string&quot;&#xFF0C;&#x5982;&#x679C;&#x53D8;&#x91CF;&#x662F;&#x4E00;&#x79CD;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x6216;Null&#x7C7B;&#x578B;&#x8FD4;&#x56DE;&quot;object&quot;&#x3002;</div></pre></td></tr></table></figure>\n<h5 id=\"undefined&#x7C7B;&#x578B;\"><a href=\"#Undefined&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"Undefined&#x7C7B;&#x578B;\"></a>Undefined&#x7C7B;&#x578B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Undefined&#x7C7B;&#x578B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5373;undefined&#x3002;&#x5F53;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x672A;&#x521D;&#x59CB;&#x5316;&#x548C;&#x51FD;&#x6570;&#x65E0;&#x660E;&#x786E;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x65F6;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x548C;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x90FD;&#x662F;undefined&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x503C;undefined&#x5E76;&#x4E0D;&#x540C;&#x4E8E;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x503C;&#xFF0C;&#x4F46;typeof&#x4E0D;&#x533A;&#x5206;&#x8FD9;&#x4E24;&#x79CD;&#x503C;&#x3002;&#x53C2;&#x8003;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oTemp;</div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> oTemp); <span class=\"comment\">//outpus &quot;undefined&quot;</span></div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> otemp2); <span class=\"comment\">//outpus &quot;undefined&quot;</span></div><div class=\"line\">alert(oTemp==<span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus &quot;true&quot;</span></div><div class=\"line\">alert(oTemp2==<span class=\"literal\">undefined</span>); <span class=\"comment\">//causes error</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testFunc</span><span class=\"params\">()</span></span>{</div><div class=\"line\">}</div><div class=\"line\">alert(testFunc() == <span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus &quot;true&quot;</span></div></pre></td></tr></table></figure>\n<h5 id=\"null&#x7C7B;&#x578B;\"><a href=\"#Null&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"Null&#x7C7B;&#x578B;\"></a>Null&#x7C7B;&#x578B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Null&#x4E5F;&#x662F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x503C;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4E13;&#x7528;&#x503C;null&#x3002;&#x503C;undefined&#x5B9E;&#x9645;&#x4E0D;&#x662F;&#x4ECE;&#x503C;null&#x6D3E;&#x751F;&#x6765;&#x7684;&#xFF0C;&#x56E0;&#x6B64;ECMAScript&#x628A;&#x5B83;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;&#x76F8;&#x7B49;&#x3002;</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alert(<span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus &quot;true&quot;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#x5C3D;&#x7BA1;&#x8FD9;&#x4E24;&#x4E2A;&#x503C;&#x76F8;&#x7B49;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x7684;&#x542B;&#x4E49;&#x4E0D;&#x540C;&#x3002;undefined&#x662F;&#x58F0;&#x660E;&#x4E86;&#x53D8;&#x91CF;&#x4F46;&#x672A;&#x5BF9;&#x5176;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x7684;&#x503C;&#xFF0C;null&#x5219;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5C1A;&#x672A;&#x5B58;&#x5728;&#x7684;&#x5BF9;&#x8C61;&#x3002;</div></pre></td></tr></table></figure>\n<h5 id=\"boolean&#x7C7B;&#x578B;\"><a href=\"#Boolean&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"Boolean&#x7C7B;&#x578B;\"></a>Boolean&#x7C7B;&#x578B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Boolean&#x6709;&#x4E24;&#x4E2A;&#x503C;true&#x548C;false</div></pre></td></tr></table></figure>\n<h5 id=\"number&#x7C7B;&#x578B;\"><a href=\"#Number&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"Number&#x7C7B;&#x578B;\"></a>Number&#x7C7B;&#x578B;</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Number&#x53EF;&#x4EE5;&#x8868;&#x793A;32&#x4F4D;&#x6574;&#x6570;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x8868;&#x793A;64&#x4F4D;&#x6D6E;&#x70B9;&#x6570;&#xFF0C;&#x4E0D;&#x540C;&#x8FDB;&#x5236;&#x95F4;&#x7684;&#x8868;&#x793A;&#xFF1A;</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> iNum=<span class=\"number\">55</span>;<span class=\"comment\">// 10&#x8FDB;&#x5236;</span></div><div class=\"line\"><span class=\"keyword\">var</span> iNum=<span class=\"number\">070</span>;<span class=\"comment\">// 8&#x8FDB;&#x5236;var iNum=oxAB;//16&#x8FDB;&#x5236;</span></div><div class=\"line\"><span class=\"keyword\">var</span> fNum=<span class=\"number\">3.125e7</span>;<span class=\"comment\">//&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#x8868;&#x793A;&#x6D6E;&#x70B9;&#x6570;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#x51E0;&#x4E2A;&#x7279;&#x6B8A;&#x503C;&#x4E5F;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;Number&#x7C7B;&#x578B;&#xFF0C;&#x524D;&#x4E24;&#x4E2A;&#x662F;Number.MAX_VALUE&#x548C;Number.MIN_VALUE&#xFF0C;&#x5B83;&#x4EEC;&#x5B9A;&#x4E49;&#x4E86;Number&#x503C;&#x96C6;&#x5408;&#x7684;&#x5916;&#x8FB9;&#x754C;&#x3002;&#x6240;&#x6709;ECMAScript&#x6570;&#x90FD;&#x5FC5;&#x987B;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x503C;&#x4E4B;&#x95F4;&#xFF0C;&#x4E0D;&#x8FC7;&#x8BA1;&#x7B97;&#x751F;&#x6210;&#x7684;&#x6570;&#x503C;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x4E0D;&#x843D;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x4E4B;&#x95F4;&#x3002;</div><div class=\"line\"></div><div class=\"line\">&#x5F53;&#x8BA1;&#x7B97;&#x751F;&#x6210;&#x7684;&#x6570;&#x5927;&#x4E8E;Number.MAX_VALUE&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x88AB;&#x8D4B;&#x4E88;&#x503C;Number.POSITIVE_INFINITY&#xFF0C;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x518D;&#x6709;&#x6570;&#x5B57;&#x503C;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x6570;&#x503C;&#x5C0F;&#x4E8E;Number.MIN_VALUE&#x7684;&#x8BA1;&#x7B97;&#x4E5F;&#x4F1A;&#x88AB;&#x8D4B;&#x4E88;&#x503C;Number.NEGATIVE_INFINITY&#xFF0C;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x518D;&#x6709;&#x6570;&#x5B57;&#x503C;&#x3002;&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x65E0;&#x7A77;&#x5927;&#xFF0C;&#x90A3;&#x4E48;&#x751F;&#x6210;&#x7684;&#x7ED3;&#x679C;&#x4E0D;&#x80FD;&#x518D;&#x7528;&#x4E8E;&#x5176;&#x4ED6;&#x8BA1;&#x7B97;&#x3002;</div><div class=\"line\"></div><div class=\"line\">&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x6709;&#x4E13;&#x95E8;&#x7684;&#x503C;&#x8868;&#x793A;&#x65E0;&#x7A77;&#x5927;&#xFF0C;&#x5373;Infinity&#x3002;Number.POSITIVE_INFINITY&#x7684;&#x503C;&#x4E3A;Infinity&#xFF0C;Number.NEGATIVE_INFINITY&#x7684;&#x503C;&#x4E3A;-Infinity&#x3002;</div></pre></td></tr></table></figure>\n<p>&#x53EF;&#x4EE5;&#x5BF9;&#x4EFB;&#x4F55;&#x6570;&#x8C03;&#x7528;isFinit()&#x65B9;&#x6CD5;&#x6765;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x65E0;&#x7A77;&#x5927;&#x3002;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">var iResult = iNum*some_really_large_number;</div><div class=\"line\"><span class=\"keyword\">if</span>(isFinit(iResult)){ </div><div class=\"line\">    alert(<span class=\"string\">&quot;Number is finite&quot;</span>);</div><div class=\"line\">}<span class=\"keyword\">else</span>{ </div><div class=\"line\">    alert(<span class=\"string\">&quot;Number is infinite&quot;</span>);</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x503C;&#x662F;NaN&#xFF0C;&#x8868;&#x793A;&#x975E;&#x6570;(Not a Number)&#x3002;NaN&#x4E00;&#x822C;&#x4E3A;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x5931;&#x8D25;&#x65F6;&#x7684;&#x503C;&#xFF0C;NaN&#x4E0D;&#x80FD;&#x7528;&#x4E8E;&#x7B97;&#x672F;&#x8BA1;&#x7B97;&#xFF0C;NaN&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x5947;&#x7279;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x5B83;&#x4E0E;&#x81EA;&#x8EAB;&#x5E76;&#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x56E0;&#x6B64;&#x63A8;&#x8350;&#x4F7F;&#x7528;isNaN()&#xFF0C;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">alert(<span class=\"name\">NaN</span> == NaN)<span class=\"comment\">; //outpus &quot;false&quot;</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"string\">&quot;blue&quot;</span>))<span class=\"comment\">; //outpus &quot;true&quot;</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"string\">&quot;123&quot;</span>))<span class=\"comment\">; //outpus &quot;false&quot;</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"number\">123</span>))<span class=\"comment\">; //outpus &quot;false&quot;</span></div></pre></td></tr></table></figure>\n<h4 id=\"string&#x7C7B;&#x578B;\"><a href=\"#String&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"String&#x7C7B;&#x578B;\"></a>String&#x7C7B;&#x578B;</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">String&#x662F;&#x552F;&#x4E00;&#x6CA1;&#x6709;&#x56FA;&#x5B9A;&#x5927;&#x5C0F;&#x7684;&#x539F;&#x59CB;&#x7C7B;&#x578B;&#x3002;ECMAScript&#x7684;&#x5B57;&#x7B26;&#x5B57;&#x9762;&#x91CF;&#xFF1A;</div><div class=\"line\"></div><div class=\"line\">&#x5B57;&#x9762;&#x91CF;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x542B;&#x4E49;</div><div class=\"line\">\\n&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#xA0; &#xA0; &#x6362;&#x884C;</div><div class=\"line\">\\t&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#xA0; &#xA0; &#x5236;&#x8868;&#x7B26;</div><div class=\"line\">\\b&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#xA0;&#x7A7A;&#x683C;</div><div class=\"line\">\\r&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x56DE;&#x8F66;</div><div class=\"line\">\\f&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x6362;&#x9875;&#x7B26;</div><div class=\"line\">\\\\&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x53CD;&#x659C;&#x6760;</div><div class=\"line\">\\&apos;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x5355;&#x5F15;&#x53F7;</div><div class=\"line\">\\&quot;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x53CC;&#x5F15;&#x53F7;</div><div class=\"line\">\\0nnn&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#xA0;&#x516B;&#x8FDB;&#x5236;&#x4EE3;&#x7801;nnn&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26;</div><div class=\"line\">\\xnn&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; 16&#x8FDB;&#x5236;&#x4EE3;&#x7801;nn&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26;</div><div class=\"line\">\\unnnn&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#xA0; 16&#x8FDB;&#x5236;&#x7684;&#x4EE3;&#x7801;nnnn&#x8868;&#x4E0D;&#x7684;Unicode&#x5B57;&#x7B26;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<h4 id=\"原始类型\"><a href=\"#原始类型\" class=\"headerlink\" title=\"原始类型\"></a>原始类型</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ECMAScript有5种原始类型(primitive type)，即Undefined、Null、Boolean、Number和String。ECMAScript提供了typeof来判断值的类型。</div></pre></td></tr></table></figure>\n<h5 id=\"typeof运算符\"><a href=\"#typeof运算符\" class=\"headerlink\" title=\"typeof运算符\"></a>typeof运算符</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> sTemp=<span class=\"string\">\"test string\"</span>;</div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> sTemp);<span class=\"comment\">//outpus \"string\"</span></div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> <span class=\"number\">95</span>);<span class=\"comment\">//outpus \"number\"</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">typeof运算符返回值只有5种，分别为：如果变量是Undefined型返回&quot;undefined&quot;，如果变量是Boolean型返回&quot;boolean&quot;，如果变量是Number型返回&quot;number&quot;，如果变量是String型返回&quot;string&quot;，如果变量是一种引用类型或Null类型返回&quot;object&quot;。</div></pre></td></tr></table></figure>\n<h5 id=\"Undefined类型\"><a href=\"#Undefined类型\" class=\"headerlink\" title=\"Undefined类型\"></a>Undefined类型</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Undefined类型只有一个值，即undefined。当声明的变量未初始化和函数无明确的返回值时该变量的默认值和函数的返回值都是undefined。需要注意的是值undefined并不同于未定义的值，但typeof不区分这两种值。参考下面的代码：</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oTemp;</div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> oTemp); <span class=\"comment\">//outpus \"undefined\"</span></div><div class=\"line\">alert(<span class=\"keyword\">typeof</span> otemp2); <span class=\"comment\">//outpus \"undefined\"</span></div><div class=\"line\">alert(oTemp==<span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus \"true\"</span></div><div class=\"line\">alert(oTemp2==<span class=\"literal\">undefined</span>); <span class=\"comment\">//causes error</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testFunc</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">&#125;</div><div class=\"line\">alert(testFunc() == <span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus \"true\"</span></div></pre></td></tr></table></figure>\n<h5 id=\"Null类型\"><a href=\"#Null类型\" class=\"headerlink\" title=\"Null类型\"></a>Null类型</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Null也是只有一个值的类型，它只有一个专用值null。值undefined实际不是从值null派生来的，因此ECMAScript把它们定义为相等。</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alert(<span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>); <span class=\"comment\">//outpus \"true\"</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">尽管这两个值相等，但它们的含义不同。undefined是声明了变量但未对其初始化时的值，null则用于表示尚未存在的对象。</div></pre></td></tr></table></figure>\n<h5 id=\"Boolean类型\"><a href=\"#Boolean类型\" class=\"headerlink\" title=\"Boolean类型\"></a>Boolean类型</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Boolean有两个值true和false</div></pre></td></tr></table></figure>\n<h5 id=\"Number类型\"><a href=\"#Number类型\" class=\"headerlink\" title=\"Number类型\"></a>Number类型</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Number可以表示32位整数，还可以表示64位浮点数，不同进制间的表示：</div></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> iNum=<span class=\"number\">55</span>;<span class=\"comment\">// 10进制</span></div><div class=\"line\"><span class=\"keyword\">var</span> iNum=<span class=\"number\">070</span>;<span class=\"comment\">// 8进制var iNum=oxAB;//16进制</span></div><div class=\"line\"><span class=\"keyword\">var</span> fNum=<span class=\"number\">3.125e7</span>;<span class=\"comment\">//科学计数法表示浮点数</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">几个特殊值也被定义为Number类型，前两个是Number.MAX_VALUE和Number.MIN_VALUE，它们定义了Number值集合的外边界。所有ECMAScript数都必须在这两个值之间，不过计算生成的数值结果可以不落在这两个数之间。</div><div class=\"line\"></div><div class=\"line\">当计算生成的数大于Number.MAX_VALUE时，它将被赋予值Number.POSITIVE_INFINITY，意味着不再有数字值。同样，生成的数值小于Number.MIN_VALUE的计算也会被赋予值Number.NEGATIVE_INFINITY，也意味着不再有数字值。如果计算返回的结果是无穷大，那么生成的结果不能再用于其他计算。</div><div class=\"line\"></div><div class=\"line\">事实上，有专门的值表示无穷大，即Infinity。Number.POSITIVE_INFINITY的值为Infinity，Number.NEGATIVE_INFINITY的值为-Infinity。</div></pre></td></tr></table></figure>\n<p>可以对任何数调用isFinit()方法来判断是不是无穷大。例：</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">var iResult = iNum*some_really_large_number;</div><div class=\"line\"><span class=\"keyword\">if</span>(isFinit(iResult))&#123; </div><div class=\"line\">    alert(<span class=\"string\">\"Number is finite\"</span>);</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123; </div><div class=\"line\">    alert(<span class=\"string\">\"Number is infinite\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>还有一个特殊值是NaN，表示非数(Not a Number)。NaN一般为类型转换失败时的值，NaN不能用于算术计算，NaN的另一个奇特之处在于它与自身并不相等，因此推荐使用isNaN()，如：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">alert(<span class=\"name\">NaN</span> == NaN)<span class=\"comment\">; //outpus \"false\"</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"string\">\"blue\"</span>))<span class=\"comment\">; //outpus \"true\"</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"string\">\"123\"</span>))<span class=\"comment\">; //outpus \"false\"</span></div><div class=\"line\">alert(<span class=\"name\">isNaN</span>(<span class=\"number\">123</span>))<span class=\"comment\">; //outpus \"false\"</span></div></pre></td></tr></table></figure>\n<h4 id=\"String类型\"><a href=\"#String类型\" class=\"headerlink\" title=\"String类型\"></a>String类型</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">String是唯一没有固定大小的原始类型。ECMAScript的字符字面量：</div><div class=\"line\"></div><div class=\"line\">字面量　　　　　　　　含义</div><div class=\"line\">\\n　　　　　　　　     换行</div><div class=\"line\">\\t　　　　　　　　     制表符</div><div class=\"line\">\\b　　　　　　　　　  空格</div><div class=\"line\">\\r　　　　　　　　　　回车</div><div class=\"line\">\\f　　　　　　　　　　换页符</div><div class=\"line\">\\\\　　　　　　　　　　反斜杠</div><div class=\"line\">\\&apos;　　　　　　　　　　单引号</div><div class=\"line\">\\&quot;　　　　　　　　　　双引号</div><div class=\"line\">\\0nnn　　　　　　　  八进制代码nnn表示的字符</div><div class=\"line\">\\xnn　　　　　　　　 16进制代码nn表示的字符</div><div class=\"line\">\\unnnn　　　　　　   16进制的代码nnnn表不的Unicode字符</div></pre></td></tr></table></figure>\n"},{"title":"《JavaScript高级程序设计》阅读笔记：函数表达式、闭包、私有变量","date":"2016-07-28T16:00:00.000Z","modifiedOn":"2016-07-28T16:00:00.000Z","toc":true,"_content":"\n----------\n#### 定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。\n\n\n\n##### 1.函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：\n\n```\n\ntest();\n\nfunction test(){\n\nalert(1);\n\n}\n\n```\n\n##### 2.函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：\n\n```\n\ntest(); // test is not a function\n\nvar test=function(){\n\nalert(1);\n\n}\n\n```\n----------\n#### 递归函数是通过在函数内部调用自身实现的。\n\n##### 直接使用函数名进行递归调用\n\n```\n\nfunction f(num){\n\n  if(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*f(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\n```\n\n这种实现的缺点是，在函数内部直接写死了函数名称。如果进行如下设置就会报错：\n\n```\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//报错， f is not a function\n\n```\n\n##### 通过arguments.callee解决，arguments.callee是一个指向正在执行的函数的指针。这样就避免了上述问题。\n\n```\n\nfunction f(num){\n\n  if(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*arguments.callee(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//6\n\n```\n\n不过这种方式还有一个缺点，就是在严格模式下会执行失败。\n\n添加\"use strict\"后执行会报错：\n\n```\n\n'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them\n\n```\n\n##### 采用命名函数表达式可以在严格模式下成功。\n\n```\n\n\"use strict\";\n\nvar f=function t(num){\n\nif(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*t(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//6\n\n```\n----------\n\n#### 闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。\n\n##### 闭包与变量\n\n###### 闭包只能取得包含函数中任意变量的最后一个值。例如：\n\n```\n\nfunction createFunctions(){\n\n  var result=new Array();\n\n  for(var i=0;i<10;i++){\n\n    result[i]=function(){\n\n    return i;\n\n    }\n\n  }\n\n  return result;\n\n}\n\nvar result=createFunctions();\n\nresult[1]();//10\n\n```\n\n这个方法调用传入1-10返回结果都是10，这并不符合预期。\n\n###### 通过匿名函数进行改造：\n\n```\n\nfunction createFunctions(){\n\n  var result=new Array();\n\n  for(var i=0;i<10;i++){\n\n    result[i]=(function(num){\n\n    return num;\n\n    })(i);\n\n  }\n\n  return result;\n\n}\n\nvar result=createFunctions();\n\nresult[2];//2\n\n```\n\n改造后的运行结果符合我们的预期了。因为将i传递给num命名参数时是按值传递的。\n\n##### 闭包中的this\n\nthis变量是在运行时基于函数的执行环境绑定的。\n\n在全局执行环境中，this指向window对象；\n\n当函数作为某个对象的方法时，this等于那个对象；\n\n匿名函数的执行具有全局性，this通常指向window对象。\n\n###### 闭包中this实例：\n\n```\n\nvar name='window';\n\nvar object={\n\n  name:\"object\",\n\n  getName:function(){\n\n    return function(){\n\n        return this.name;\n\n    }\n\n} \n\n};\n\nobject.getName()();//window\n\n```\n\n###### 先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：\n\n```\n\nvar name='window';\n\nvar object={\n\n  name:\"object\",\n\n  getName:function(){\n\nvar that=this;\n\n     return function(){      \n\n        return that.name;\n\n    }\n\n} \n\n};\n\nobject.getName()();//object\n\n```\n\n","source":"_posts/《JavaScript高级程序设计》阅读笔记：函数表达式、闭包、私有变量 .md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记：函数表达式、闭包、私有变量 \ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-07-29\nmodifiedOn: 2016-07-29\ntoc: true\n---\n\n----------\n#### 定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。\n\n\n\n##### 1.函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：\n\n```\n\ntest();\n\nfunction test(){\n\nalert(1);\n\n}\n\n```\n\n##### 2.函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：\n\n```\n\ntest(); // test is not a function\n\nvar test=function(){\n\nalert(1);\n\n}\n\n```\n----------\n#### 递归函数是通过在函数内部调用自身实现的。\n\n##### 直接使用函数名进行递归调用\n\n```\n\nfunction f(num){\n\n  if(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*f(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\n```\n\n这种实现的缺点是，在函数内部直接写死了函数名称。如果进行如下设置就会报错：\n\n```\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//报错， f is not a function\n\n```\n\n##### 通过arguments.callee解决，arguments.callee是一个指向正在执行的函数的指针。这样就避免了上述问题。\n\n```\n\nfunction f(num){\n\n  if(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*arguments.callee(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//6\n\n```\n\n不过这种方式还有一个缺点，就是在严格模式下会执行失败。\n\n添加\"use strict\"后执行会报错：\n\n```\n\n'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them\n\n```\n\n##### 采用命名函数表达式可以在严格模式下成功。\n\n```\n\n\"use strict\";\n\nvar f=function t(num){\n\nif(num==1){\n\n  return 1;\n\n  }else{\n\n  return num*t(num-1);\n\n  }\n\n}\n\nconsole.log(f(4));//24\n\nconsole.log(f(5));//120\n\nvar test=f;\n\nf=null;\n\nconsole.log(test(3));//6\n\n```\n----------\n\n#### 闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。\n\n##### 闭包与变量\n\n###### 闭包只能取得包含函数中任意变量的最后一个值。例如：\n\n```\n\nfunction createFunctions(){\n\n  var result=new Array();\n\n  for(var i=0;i<10;i++){\n\n    result[i]=function(){\n\n    return i;\n\n    }\n\n  }\n\n  return result;\n\n}\n\nvar result=createFunctions();\n\nresult[1]();//10\n\n```\n\n这个方法调用传入1-10返回结果都是10，这并不符合预期。\n\n###### 通过匿名函数进行改造：\n\n```\n\nfunction createFunctions(){\n\n  var result=new Array();\n\n  for(var i=0;i<10;i++){\n\n    result[i]=(function(num){\n\n    return num;\n\n    })(i);\n\n  }\n\n  return result;\n\n}\n\nvar result=createFunctions();\n\nresult[2];//2\n\n```\n\n改造后的运行结果符合我们的预期了。因为将i传递给num命名参数时是按值传递的。\n\n##### 闭包中的this\n\nthis变量是在运行时基于函数的执行环境绑定的。\n\n在全局执行环境中，this指向window对象；\n\n当函数作为某个对象的方法时，this等于那个对象；\n\n匿名函数的执行具有全局性，this通常指向window对象。\n\n###### 闭包中this实例：\n\n```\n\nvar name='window';\n\nvar object={\n\n  name:\"object\",\n\n  getName:function(){\n\n    return function(){\n\n        return this.name;\n\n    }\n\n} \n\n};\n\nobject.getName()();//window\n\n```\n\n###### 先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：\n\n```\n\nvar name='window';\n\nvar object={\n\n  name:\"object\",\n\n  getName:function(){\n\nvar that=this;\n\n     return function(){      \n\n        return that.name;\n\n    }\n\n} \n\n};\n\nobject.getName()();//object\n\n```\n\n","slug":"《JavaScript高级程序设计》阅读笔记：函数表达式、闭包、私有变量 ","published":1,"updated":"2016-08-21T12:31:55.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vh000o1ov61dqm1niu","content":"<hr>\n<h4 id=\"&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x548C;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;-&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x51FD;&#x6570;&#x63D0;&#x5347;\"><a href=\"#&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x548C;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x51FD;&#x6570;&#x63D0;&#x5347;&#x3002;\" class=\"headerlink\" title=\"&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x548C;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x51FD;&#x6570;&#x63D0;&#x5347;&#x3002;\"></a>&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x548C;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x51FD;&#x6570;&#x63D0;&#x5347;&#x3002;</h4><h5 id=\"1&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#x6240;&#x4EE5;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;\"><a href=\"#1-&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x6240;&#x4EE5;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;\" class=\"headerlink\" title=\"1.&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x6240;&#x4EE5;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;\"></a>1.&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x6240;&#x4EE5;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x4E5F;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">test();</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span></span>{</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h5 id=\"2&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x7684;&#x8BDD;&#x4F1A;&#x62A5;&#x9519;\"><a href=\"#2-&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x7684;&#x8BDD;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;\" class=\"headerlink\" title=\"2.&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x7684;&#x8BDD;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;\"></a>2.&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x51FD;&#x6570;&#x63D0;&#x5347;&#xFF0C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E4B;&#x524D;&#x7684;&#x8BDD;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">test(); <span class=\"comment\">// test is not a function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"&#x9012;&#x5F52;&#x51FD;&#x6570;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x81EA;&#x8EAB;&#x5B9E;&#x73B0;&#x7684;\"><a href=\"#&#x9012;&#x5F52;&#x51FD;&#x6570;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x81EA;&#x8EAB;&#x5B9E;&#x73B0;&#x7684;&#x3002;\" class=\"headerlink\" title=\"&#x9012;&#x5F52;&#x51FD;&#x6570;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x81EA;&#x8EAB;&#x5B9E;&#x73B0;&#x7684;&#x3002;\"></a>&#x9012;&#x5F52;&#x51FD;&#x6570;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x81EA;&#x8EAB;&#x5B9E;&#x73B0;&#x7684;&#x3002;</h4><h5 id=\"&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x540D;&#x8FDB;&#x884C;&#x9012;&#x5F52;&#x8C03;&#x7528;\"><a href=\"#&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x540D;&#x8FDB;&#x884C;&#x9012;&#x5F52;&#x8C03;&#x7528;\" class=\"headerlink\" title=\"&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x540D;&#x8FDB;&#x884C;&#x9012;&#x5F52;&#x8C03;&#x7528;\"></a>&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x540D;&#x8FDB;&#x884C;&#x9012;&#x5F52;&#x8C03;&#x7528;</h5><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">function <span class=\"built_in\">f</span>(num){</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(num==1){</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> 1;</div><div class=\"line\"></div><div class=\"line\">  }<span class=\"keyword\">else</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*<span class=\"built_in\">f</span>(num-1);</div><div class=\"line\"></div><div class=\"line\">  }</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"built_in\">f</span>(4));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"built_in\">f</span>(5));<span class=\"comment\">//120</span></div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x79CD;&#x5B9E;&#x73B0;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x76F4;&#x63A5;&#x5199;&#x6B7B;&#x4E86;&#x51FD;&#x6570;&#x540D;&#x79F0;&#x3002;&#x5982;&#x679C;&#x8FDB;&#x884C;&#x5982;&#x4E0B;&#x8BBE;&#x7F6E;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">test</span>=f;</div><div class=\"line\"></div><div class=\"line\">f=null;</div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"keyword\">test</span>(3));<span class=\"comment\">//&#x62A5;&#x9519;&#xFF0C; f is not a function</span></div></pre></td></tr></table></figure>\n<h5 id=\"&#x901A;&#x8FC7;argumentscallee&#x89E3;&#x51B3;argumentscallee&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;-&#x8FD9;&#x6837;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;\"><a href=\"#&#x901A;&#x8FC7;arguments-callee&#x89E3;&#x51B3;&#xFF0C;arguments-callee&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x3002;\" class=\"headerlink\" title=\"&#x901A;&#x8FC7;arguments.callee&#x89E3;&#x51B3;&#xFF0C;arguments.callee&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x3002;\"></a>&#x901A;&#x8FC7;arguments.callee&#x89E3;&#x51B3;&#xFF0C;arguments.callee&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x3002;</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">num</span>)</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(num==<span class=\"number\">1</span>){</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">  }<span class=\"keyword\">else</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*<span class=\"built_in\">arguments</span>.callee(num<span class=\"number\">-1</span>);</div><div class=\"line\"></div><div class=\"line\">  }</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">4</span>));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">5</span>));<span class=\"comment\">//120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=f;</div><div class=\"line\"></div><div class=\"line\">f=<span class=\"literal\">null</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(test(<span class=\"number\">3</span>));<span class=\"comment\">//6</span></div></pre></td></tr></table></figure>\n<p>&#x4E0D;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x70B9;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x4E25;&#x683C;&#x6A21;&#x5F0F;&#x4E0B;&#x4F1A;&#x6267;&#x884C;&#x5931;&#x8D25;&#x3002;</p>\n<p>&#x6DFB;&#x52A0;&#x201D;use strict&#x201D;&#x540E;&#x6267;&#x884C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;</p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"string\">&apos;caller&apos;</span>, <span class=\"string\">&apos;callee&apos;</span>, <span class=\"keyword\">and</span> <span class=\"string\">&apos;arguments&apos;</span> properties may <span class=\"keyword\">not</span> be accessed <span class=\"keyword\">on</span> <span class=\"keyword\">strict</span> mode functions <span class=\"keyword\">or</span> the arguments objects <span class=\"keyword\">for</span> calls <span class=\"keyword\">to</span> them</div></pre></td></tr></table></figure>\n<h5 id=\"&#x91C7;&#x7528;&#x547D;&#x540D;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;&#x4E25;&#x683C;&#x6A21;&#x5F0F;&#x4E0B;&#x6210;&#x529F;\"><a href=\"#&#x91C7;&#x7528;&#x547D;&#x540D;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;&#x4E25;&#x683C;&#x6A21;&#x5F0F;&#x4E0B;&#x6210;&#x529F;&#x3002;\" class=\"headerlink\" title=\"&#x91C7;&#x7528;&#x547D;&#x540D;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;&#x4E25;&#x683C;&#x6A21;&#x5F0F;&#x4E0B;&#x6210;&#x529F;&#x3002;\"></a>&#x91C7;&#x7528;&#x547D;&#x540D;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x53EF;&#x4EE5;&#x5728;&#x4E25;&#x683C;&#x6A21;&#x5F0F;&#x4E0B;&#x6210;&#x529F;&#x3002;</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></span></div><div class=\"line\">&quot;use strict&quot;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> f=<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">t</span>(<span class=\"params\">num</span>)</span>{</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span>(num==<span class=\"number\">1</span>){</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">  }<span class=\"keyword\">else</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*t(num<span class=\"number\">-1</span>);</div><div class=\"line\"></div><div class=\"line\">  }</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">4</span>));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">5</span>));<span class=\"comment\">//120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=f;</div><div class=\"line\"></div><div class=\"line\">f=<span class=\"literal\">null</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(test(<span class=\"number\">3</span>));<span class=\"comment\">//6</span></div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"&#x95ED;&#x5305;&#x662F;&#x6709;&#x6743;&#x8BBF;&#x95EE;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4F5C;&#x7528;&#x57DF;&#x5185;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;-&#x521B;&#x5EFA;&#x95ED;&#x5305;&#x7684;&#x5E38;&#x89C1;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x521B;&#x5EFA;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x51FD;&#x6570;-&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#x4F1A;&#x628A;&#x5916;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x6DFB;&#x52A0;&#x5230;&#x5176;&#x4F5C;&#x7528;&#x57DF;&#x94FE;&#x4E2D;\"><a href=\"#&#x95ED;&#x5305;&#x662F;&#x6709;&#x6743;&#x8BBF;&#x95EE;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4F5C;&#x7528;&#x57DF;&#x5185;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x3002;&#x521B;&#x5EFA;&#x95ED;&#x5305;&#x7684;&#x5E38;&#x89C1;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x521B;&#x5EFA;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x628A;&#x5916;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x6DFB;&#x52A0;&#x5230;&#x5176;&#x4F5C;&#x7528;&#x57DF;&#x94FE;&#x4E2D;&#x3002;\" class=\"headerlink\" title=\"&#x95ED;&#x5305;&#x662F;&#x6709;&#x6743;&#x8BBF;&#x95EE;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4F5C;&#x7528;&#x57DF;&#x5185;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x3002;&#x521B;&#x5EFA;&#x95ED;&#x5305;&#x7684;&#x5E38;&#x89C1;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x521B;&#x5EFA;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x628A;&#x5916;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x6DFB;&#x52A0;&#x5230;&#x5176;&#x4F5C;&#x7528;&#x57DF;&#x94FE;&#x4E2D;&#x3002;\"></a>&#x95ED;&#x5305;&#x662F;&#x6709;&#x6743;&#x8BBF;&#x95EE;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4F5C;&#x7528;&#x57DF;&#x5185;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x3002;&#x521B;&#x5EFA;&#x95ED;&#x5305;&#x7684;&#x5E38;&#x89C1;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x521B;&#x5EFA;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x628A;&#x5916;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x6DFB;&#x52A0;&#x5230;&#x5176;&#x4F5C;&#x7528;&#x57DF;&#x94FE;&#x4E2D;&#x3002;</h4><h5 id=\"&#x95ED;&#x5305;&#x4E0E;&#x53D8;&#x91CF;\"><a href=\"#&#x95ED;&#x5305;&#x4E0E;&#x53D8;&#x91CF;\" class=\"headerlink\" title=\"&#x95ED;&#x5305;&#x4E0E;&#x53D8;&#x91CF;\"></a>&#x95ED;&#x5305;&#x4E0E;&#x53D8;&#x91CF;</h5><h6 id=\"&#x95ED;&#x5305;&#x53EA;&#x80FD;&#x53D6;&#x5F97;&#x5305;&#x542B;&#x51FD;&#x6570;&#x4E2D;&#x4EFB;&#x610F;&#x53D8;&#x91CF;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;-&#x4F8B;&#x5982;\"><a href=\"#&#x95ED;&#x5305;&#x53EA;&#x80FD;&#x53D6;&#x5F97;&#x5305;&#x542B;&#x51FD;&#x6570;&#x4E2D;&#x4EFB;&#x610F;&#x53D8;&#x91CF;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF1A;\" class=\"headerlink\" title=\"&#x95ED;&#x5305;&#x53EA;&#x80FD;&#x53D6;&#x5F97;&#x5305;&#x542B;&#x51FD;&#x6570;&#x4E2D;&#x4EFB;&#x610F;&#x53D8;&#x91CF;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF1A;\"></a>&#x95ED;&#x5305;&#x53EA;&#x80FD;&#x53D6;&#x5F97;&#x5305;&#x542B;&#x51FD;&#x6570;&#x4E2D;&#x4EFB;&#x610F;&#x53D8;&#x91CF;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;&#x3002;&#x4F8B;&#x5982;&#xFF1A;</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createFunctions</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> result=<span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++){</div><div class=\"line\"></div><div class=\"line\">    result[i]=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> i;</div><div class=\"line\"></div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">  }</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> result=createFunctions();</div><div class=\"line\"></div><div class=\"line\">result[<span class=\"number\">1</span>]();<span class=\"comment\">//10</span></div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x4F20;&#x5165;1-10&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x90FD;&#x662F;10&#xFF0C;&#x8FD9;&#x5E76;&#x4E0D;&#x7B26;&#x5408;&#x9884;&#x671F;&#x3002;</p>\n<h6 id=\"&#x901A;&#x8FC7;&#x533F;&#x540D;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6539;&#x9020;\"><a href=\"#&#x901A;&#x8FC7;&#x533F;&#x540D;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6539;&#x9020;&#xFF1A;\" class=\"headerlink\" title=\"&#x901A;&#x8FC7;&#x533F;&#x540D;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6539;&#x9020;&#xFF1A;\"></a>&#x901A;&#x8FC7;&#x533F;&#x540D;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6539;&#x9020;&#xFF1A;</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createFunctions</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> result=<span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++){</div><div class=\"line\"></div><div class=\"line\">    result[i]=(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>{</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> num;</div><div class=\"line\"></div><div class=\"line\">    })(i);</div><div class=\"line\"></div><div class=\"line\">  }</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> result=createFunctions();</div><div class=\"line\"></div><div class=\"line\">result[<span class=\"number\">2</span>];<span class=\"comment\">//2</span></div></pre></td></tr></table></figure>\n<p>&#x6539;&#x9020;&#x540E;&#x7684;&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x7B26;&#x5408;&#x6211;&#x4EEC;&#x7684;&#x9884;&#x671F;&#x4E86;&#x3002;&#x56E0;&#x4E3A;&#x5C06;i&#x4F20;&#x9012;&#x7ED9;num&#x547D;&#x540D;&#x53C2;&#x6570;&#x65F6;&#x662F;&#x6309;&#x503C;&#x4F20;&#x9012;&#x7684;&#x3002;</p>\n<h5 id=\"&#x95ED;&#x5305;&#x4E2D;&#x7684;this\"><a href=\"#&#x95ED;&#x5305;&#x4E2D;&#x7684;this\" class=\"headerlink\" title=\"&#x95ED;&#x5305;&#x4E2D;&#x7684;this\"></a>&#x95ED;&#x5305;&#x4E2D;&#x7684;this</h5><p>this&#x53D8;&#x91CF;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x57FA;&#x4E8E;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x73AF;&#x5883;&#x7ED1;&#x5B9A;&#x7684;&#x3002;</p>\n<p>&#x5728;&#x5168;&#x5C40;&#x6267;&#x884C;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;this&#x6307;&#x5411;window&#x5BF9;&#x8C61;&#xFF1B;</p>\n<p>&#x5F53;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;this&#x7B49;&#x4E8E;&#x90A3;&#x4E2A;&#x5BF9;&#x8C61;&#xFF1B;</p>\n<p>&#x533F;&#x540D;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x5177;&#x6709;&#x5168;&#x5C40;&#x6027;&#xFF0C;this&#x901A;&#x5E38;&#x6307;&#x5411;window&#x5BF9;&#x8C61;&#x3002;</p>\n<h6 id=\"&#x95ED;&#x5305;&#x4E2D;this&#x5B9E;&#x4F8B;\"><a href=\"#&#x95ED;&#x5305;&#x4E2D;this&#x5B9E;&#x4F8B;&#xFF1A;\" class=\"headerlink\" title=\"&#x95ED;&#x5305;&#x4E2D;this&#x5B9E;&#x4F8B;&#xFF1A;\"></a>&#x95ED;&#x5305;&#x4E2D;this&#x5B9E;&#x4F8B;&#xFF1A;</h6><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">&apos;window&apos;</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> object={</div><div class=\"line\"></div><div class=\"line\">  name:<span class=\"string\">&quot;object&quot;</span>,</div><div class=\"line\"></div><div class=\"line\">  getName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\"></div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">} </div><div class=\"line\"></div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\">object.getName()();<span class=\"comment\">//window</span></div></pre></td></tr></table></figure>\n<h6 id=\"&#x5148;&#x5C06;&#x95ED;&#x5305;&#x5916;&#x90E8;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x7684;this&#x4FDD;&#x5B58;&#x5230;&#x4E00;&#x4E2A;&#x95ED;&#x5305;&#x80FD;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x53D8;&#x91CF;&#x4E2D;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x95ED;&#x5305;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#x4E86;-&#x4F8B;&#x5982;\"><a href=\"#&#x5148;&#x5C06;&#x95ED;&#x5305;&#x5916;&#x90E8;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x7684;this&#x4FDD;&#x5B58;&#x5230;&#x4E00;&#x4E2A;&#x95ED;&#x5305;&#x80FD;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x53D8;&#x91CF;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x95ED;&#x5305;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#x4E86;&#x3002;&#x4F8B;&#x5982;&#xFF1A;\" class=\"headerlink\" title=\"&#x5148;&#x5C06;&#x95ED;&#x5305;&#x5916;&#x90E8;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x7684;this&#x4FDD;&#x5B58;&#x5230;&#x4E00;&#x4E2A;&#x95ED;&#x5305;&#x80FD;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x53D8;&#x91CF;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x95ED;&#x5305;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#x4E86;&#x3002;&#x4F8B;&#x5982;&#xFF1A;\"></a>&#x5148;&#x5C06;&#x95ED;&#x5305;&#x5916;&#x90E8;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x7684;this&#x4FDD;&#x5B58;&#x5230;&#x4E00;&#x4E2A;&#x95ED;&#x5305;&#x80FD;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x53D8;&#x91CF;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x95ED;&#x5305;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#x4E86;&#x3002;&#x4F8B;&#x5982;&#xFF1A;</h6><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">&apos;window&apos;</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> object={</div><div class=\"line\"></div><div class=\"line\">  name:<span class=\"string\">&quot;object&quot;</span>,</div><div class=\"line\"></div><div class=\"line\">  getName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> that=<span class=\"keyword\">this</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{      </div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> that.name;</div><div class=\"line\"></div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">} </div><div class=\"line\"></div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\">object.getName()();<span class=\"comment\">//object</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<h4 id=\"定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。\"><a href=\"#定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。\" class=\"headerlink\" title=\"定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。\"></a>定义函数有两种方式：函数声明和函数表达式。它们之间一个重要的区别是函数提升。</h4><h5 id=\"1-函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：\"><a href=\"#1-函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：\" class=\"headerlink\" title=\"1.函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：\"></a>1.函数声明会进行函数提升，所以函数调用在函数声明之前也不会报错：</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">test();</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"2-函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：\"><a href=\"#2-函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：\" class=\"headerlink\" title=\"2.函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：\"></a>2.函数表达式不会进行函数提升，函数调用在函数声明之前的话会报错：</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">test(); <span class=\"comment\">// test is not a function</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"递归函数是通过在函数内部调用自身实现的。\"><a href=\"#递归函数是通过在函数内部调用自身实现的。\" class=\"headerlink\" title=\"递归函数是通过在函数内部调用自身实现的。\"></a>递归函数是通过在函数内部调用自身实现的。</h4><h5 id=\"直接使用函数名进行递归调用\"><a href=\"#直接使用函数名进行递归调用\" class=\"headerlink\" title=\"直接使用函数名进行递归调用\"></a>直接使用函数名进行递归调用</h5><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">function <span class=\"built_in\">f</span>(num)&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(num==1)&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> 1;</div><div class=\"line\"></div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*<span class=\"built_in\">f</span>(num-1);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"built_in\">f</span>(4));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"built_in\">f</span>(5));<span class=\"comment\">//120</span></div></pre></td></tr></table></figure>\n<p>这种实现的缺点是，在函数内部直接写死了函数名称。如果进行如下设置就会报错：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">test</span>=f;</div><div class=\"line\"></div><div class=\"line\">f=null;</div><div class=\"line\"></div><div class=\"line\">console.<span class=\"built_in\">log</span>(<span class=\"keyword\">test</span>(3));<span class=\"comment\">//报错， f is not a function</span></div></pre></td></tr></table></figure>\n<h5 id=\"通过arguments-callee解决，arguments-callee是一个指向正在执行的函数的指针。这样就避免了上述问题。\"><a href=\"#通过arguments-callee解决，arguments-callee是一个指向正在执行的函数的指针。这样就避免了上述问题。\" class=\"headerlink\" title=\"通过arguments.callee解决，arguments.callee是一个指向正在执行的函数的指针。这样就避免了上述问题。\"></a>通过arguments.callee解决，arguments.callee是一个指向正在执行的函数的指针。这样就避免了上述问题。</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">num</span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(num==<span class=\"number\">1</span>)&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*<span class=\"built_in\">arguments</span>.callee(num<span class=\"number\">-1</span>);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">4</span>));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">5</span>));<span class=\"comment\">//120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=f;</div><div class=\"line\"></div><div class=\"line\">f=<span class=\"literal\">null</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(test(<span class=\"number\">3</span>));<span class=\"comment\">//6</span></div></pre></td></tr></table></figure>\n<p>不过这种方式还有一个缺点，就是在严格模式下会执行失败。</p>\n<p>添加”use strict”后执行会报错：</p>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'caller'</span>, <span class=\"string\">'callee'</span>, <span class=\"keyword\">and</span> <span class=\"string\">'arguments'</span> properties may <span class=\"keyword\">not</span> be accessed <span class=\"keyword\">on</span> <span class=\"keyword\">strict</span> mode functions <span class=\"keyword\">or</span> the arguments objects <span class=\"keyword\">for</span> calls <span class=\"keyword\">to</span> them</div></pre></td></tr></table></figure>\n<h5 id=\"采用命名函数表达式可以在严格模式下成功。\"><a href=\"#采用命名函数表达式可以在严格模式下成功。\" class=\"headerlink\" title=\"采用命名函数表达式可以在严格模式下成功。\"></a>采用命名函数表达式可以在严格模式下成功。</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\"></div><div class=\"line\">\"use strict\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> f=<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">t</span>(<span class=\"params\">num</span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span>(num==<span class=\"number\">1</span>)&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> num*t(num<span class=\"number\">-1</span>);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">4</span>));<span class=\"comment\">//24</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(f(<span class=\"number\">5</span>));<span class=\"comment\">//120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> test=f;</div><div class=\"line\"></div><div class=\"line\">f=<span class=\"literal\">null</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(test(<span class=\"number\">3</span>));<span class=\"comment\">//6</span></div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。\"><a href=\"#闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。\" class=\"headerlink\" title=\"闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。\"></a>闭包是有权访问另一个函数作用域内变量的函数。创建闭包的常见方式就是在一个函数内创建另外一个函数。在另一个函数内部定义的函数，会把外部函数的作用域添加到其作用域链中。</h4><h5 id=\"闭包与变量\"><a href=\"#闭包与变量\" class=\"headerlink\" title=\"闭包与变量\"></a>闭包与变量</h5><h6 id=\"闭包只能取得包含函数中任意变量的最后一个值。例如：\"><a href=\"#闭包只能取得包含函数中任意变量的最后一个值。例如：\" class=\"headerlink\" title=\"闭包只能取得包含函数中任意变量的最后一个值。例如：\"></a>闭包只能取得包含函数中任意变量的最后一个值。例如：</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createFunctions</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> result=<span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</div><div class=\"line\"></div><div class=\"line\">    result[i]=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> i;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> result=createFunctions();</div><div class=\"line\"></div><div class=\"line\">result[<span class=\"number\">1</span>]();<span class=\"comment\">//10</span></div></pre></td></tr></table></figure>\n<p>这个方法调用传入1-10返回结果都是10，这并不符合预期。</p>\n<h6 id=\"通过匿名函数进行改造：\"><a href=\"#通过匿名函数进行改造：\" class=\"headerlink\" title=\"通过匿名函数进行改造：\"></a>通过匿名函数进行改造：</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createFunctions</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> result=<span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</div><div class=\"line\"></div><div class=\"line\">    result[i]=(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> num;</div><div class=\"line\"></div><div class=\"line\">    &#125;)(i);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> result=createFunctions();</div><div class=\"line\"></div><div class=\"line\">result[<span class=\"number\">2</span>];<span class=\"comment\">//2</span></div></pre></td></tr></table></figure>\n<p>改造后的运行结果符合我们的预期了。因为将i传递给num命名参数时是按值传递的。</p>\n<h5 id=\"闭包中的this\"><a href=\"#闭包中的this\" class=\"headerlink\" title=\"闭包中的this\"></a>闭包中的this</h5><p>this变量是在运行时基于函数的执行环境绑定的。</p>\n<p>在全局执行环境中，this指向window对象；</p>\n<p>当函数作为某个对象的方法时，this等于那个对象；</p>\n<p>匿名函数的执行具有全局性，this通常指向window对象。</p>\n<h6 id=\"闭包中this实例：\"><a href=\"#闭包中this实例：\" class=\"headerlink\" title=\"闭包中this实例：\"></a>闭包中this实例：</h6><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">'window'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> object=&#123;</div><div class=\"line\"></div><div class=\"line\">  name:<span class=\"string\">\"object\"</span>,</div><div class=\"line\"></div><div class=\"line\">  getName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125; </div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">object.getName()();<span class=\"comment\">//window</span></div></pre></td></tr></table></figure>\n<h6 id=\"先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：\"><a href=\"#先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：\" class=\"headerlink\" title=\"先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：\"></a>先将闭包外部作用域中的this保存到一个闭包能访问到的变量中，这样就可以让闭包访问相应的对象了。例如：</h6><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">'window'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> object=&#123;</div><div class=\"line\"></div><div class=\"line\">  name:<span class=\"string\">\"object\"</span>,</div><div class=\"line\"></div><div class=\"line\">  getName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> that=<span class=\"keyword\">this</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;      </div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> that.name;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125; </div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">object.getName()();<span class=\"comment\">//object</span></div></pre></td></tr></table></figure>\n"},{"title":"《JavaScript高级程序设计》阅读笔记：面向对象之继承","date":"2016-07-30T16:00:00.000Z","modifiedOn":"2016-07-30T16:00:00.000Z","toc":true,"_content":"\n----------\n## 原型链继承\n让构造函数的原型对象等于另一个类型的实例，利用原型让一个引用类型继承另一个引用类型的属性和方法\n\n```\nfunction SuperType()\n{\n    this.property=true;\n}\n\nSuperType.prototype.getSuperValue=function(){\n    return this.property;\n};\n\nfunction SubType()\n{\n    this.subProperty=false;\n}\n\n//继承SuperType\n\nSubType.prototype=new SuperType();\n\nSubType.prototype.getSubValue=function(){\n    return this.subProperty;\n}\n\nvar instance=new SubType();\nalert(instance.getSuperValue());//true\n\n```\n\n代码示例中，完整原型链如下\n\n![](/img/面向对象之继承.png)\n\n\n\n\n\n原型链继承的问题：父类型引用类型的属性会被所有子类型实例共享，这是不符合预期的\n\n```\n\nfunction SuperType()\n{\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nfunction SubType()\n{\n}\n\n//继承SuperType\n\nSubType.prototype=new SuperType();\n\nvar instance1=new SubType();\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\nvar instance2=new SubType();\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\",\"black\"\n\n```\n\n## 借用构造函数继承\n基本思想是在子类型构造函数内部调用超类型构造函数\n\n```\nfunction SuperType()\n{\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nfunction SubType()\n{\n    //继承SuperType\n    SuperType.call(this);\n}\n\n\n\nvar instance1=new SubType();\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\nvar instance2=new SubType();\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\n```\n\n借用构造函数可以像超类型构造函数传递参数\n\n```\n\nfunction SuperType(name)\n{\n    this.name=name;\n}\n\nfunction SubType()\n{\n    //继承SuperType\n    SuperType.call(this,\"Jim\");\n    this.age=28;\n}\n\nvar instance1=new SubType();\n\nalert(instance1.name);//\"Jim\"\n\nalert(instance1.age);//28\n```\n\n借用构造函数的问题：不能复用超类型的方法\n\n## 组合继承\n使用原型链实现对原型属性和方法的继承，通过借用构造函数实现对实例属性的继承\n\n```\n\nfunction SuperType(name)\n{\n    this.name=name;\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nSuperType.prototype.sayName=function(){\n    alert(this.name);\n};\n\nfunction SubType(name,age)\n{\n    //继承SuperType\n    SuperType.call(this,name);\n    this.age=age;\n}\n\nSubType.prototype=new SuperType();\n\nSubType.prototype.sayAge=function(){\n    alert(this.age);\n}\n\nvar instance1=new SubType(\"Jim\",29);\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\ninstance1.sayName();//\"Jim\"\n\ninstance1.sayAge();//29\n\nvar instance2=new SubType(\"Jack\",28);\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\ninstance2.sayName();//\"Jack\"\n\ninstance2.sayAge();//28\n\n```\n\n## 寄生组合式继承\n寄生组合式继承解决了组合继承中，两次调用超类型构造函数的问题\n\n```\nfunction object(o)\n{\n    function F(){}\n    F.prototype=o;\n    return new F();\n}\n\nfunction inheritPrototype(subType,superType)\n{\n    var prototype =object(superType.prototype);\n    prototype.constructor=superType;//原书是prototype.constructor=subType，看书时认为这里应该是superType\n    subType.prototype=prototype;\n}\n\nfunction SuperType(name)\n{\n    this.name=name;\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nSuperType.prototype.sayName=function(){\n    alert(this.name);\n};\n\nfunction SubType(name,age)\n{\n    //继承SuperType\n    SuperType.call(this,name);\n    this.age=age;\n}\n\ninheritPrototype(SubType,SuperType);\n\nSubType.prototype.sayAge=function(){\n    alert(this.age);\n}\n\nvar instance1=new SubType(\"Jim\",29);\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\ninstance1.sayName();//\"Jim\"\n\ninstance1.sayAge();//29\n\nvar instance2=new SubType(\"Jack\",28);\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\ninstance2.sayName();//\"Jack\"\n\ninstance2.sayAge();//28\n\n```\n\n\n\n","source":"_posts/《JavaScript高级程序设计》阅读笔记：面向对象之继承.md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记：面向对象之继承\ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-07-31\nmodifiedOn: 2016-07-31\ntoc: true\n---\n\n----------\n## 原型链继承\n让构造函数的原型对象等于另一个类型的实例，利用原型让一个引用类型继承另一个引用类型的属性和方法\n\n```\nfunction SuperType()\n{\n    this.property=true;\n}\n\nSuperType.prototype.getSuperValue=function(){\n    return this.property;\n};\n\nfunction SubType()\n{\n    this.subProperty=false;\n}\n\n//继承SuperType\n\nSubType.prototype=new SuperType();\n\nSubType.prototype.getSubValue=function(){\n    return this.subProperty;\n}\n\nvar instance=new SubType();\nalert(instance.getSuperValue());//true\n\n```\n\n代码示例中，完整原型链如下\n\n![](/img/面向对象之继承.png)\n\n\n\n\n\n原型链继承的问题：父类型引用类型的属性会被所有子类型实例共享，这是不符合预期的\n\n```\n\nfunction SuperType()\n{\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nfunction SubType()\n{\n}\n\n//继承SuperType\n\nSubType.prototype=new SuperType();\n\nvar instance1=new SubType();\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\nvar instance2=new SubType();\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\",\"black\"\n\n```\n\n## 借用构造函数继承\n基本思想是在子类型构造函数内部调用超类型构造函数\n\n```\nfunction SuperType()\n{\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nfunction SubType()\n{\n    //继承SuperType\n    SuperType.call(this);\n}\n\n\n\nvar instance1=new SubType();\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\nvar instance2=new SubType();\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\n```\n\n借用构造函数可以像超类型构造函数传递参数\n\n```\n\nfunction SuperType(name)\n{\n    this.name=name;\n}\n\nfunction SubType()\n{\n    //继承SuperType\n    SuperType.call(this,\"Jim\");\n    this.age=28;\n}\n\nvar instance1=new SubType();\n\nalert(instance1.name);//\"Jim\"\n\nalert(instance1.age);//28\n```\n\n借用构造函数的问题：不能复用超类型的方法\n\n## 组合继承\n使用原型链实现对原型属性和方法的继承，通过借用构造函数实现对实例属性的继承\n\n```\n\nfunction SuperType(name)\n{\n    this.name=name;\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nSuperType.prototype.sayName=function(){\n    alert(this.name);\n};\n\nfunction SubType(name,age)\n{\n    //继承SuperType\n    SuperType.call(this,name);\n    this.age=age;\n}\n\nSubType.prototype=new SuperType();\n\nSubType.prototype.sayAge=function(){\n    alert(this.age);\n}\n\nvar instance1=new SubType(\"Jim\",29);\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\ninstance1.sayName();//\"Jim\"\n\ninstance1.sayAge();//29\n\nvar instance2=new SubType(\"Jack\",28);\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\ninstance2.sayName();//\"Jack\"\n\ninstance2.sayAge();//28\n\n```\n\n## 寄生组合式继承\n寄生组合式继承解决了组合继承中，两次调用超类型构造函数的问题\n\n```\nfunction object(o)\n{\n    function F(){}\n    F.prototype=o;\n    return new F();\n}\n\nfunction inheritPrototype(subType,superType)\n{\n    var prototype =object(superType.prototype);\n    prototype.constructor=superType;//原书是prototype.constructor=subType，看书时认为这里应该是superType\n    subType.prototype=prototype;\n}\n\nfunction SuperType(name)\n{\n    this.name=name;\n    this.colors=[\"red\",\"blue\",\"green\"];\n}\n\nSuperType.prototype.sayName=function(){\n    alert(this.name);\n};\n\nfunction SubType(name,age)\n{\n    //继承SuperType\n    SuperType.call(this,name);\n    this.age=age;\n}\n\ninheritPrototype(SubType,SuperType);\n\nSubType.prototype.sayAge=function(){\n    alert(this.age);\n}\n\nvar instance1=new SubType(\"Jim\",29);\n\ninstance1.colors.push(\"black\");\n\nalert(instance1.colors);//\"red\",\"blue\",\"green\",\"black\"\n\ninstance1.sayName();//\"Jim\"\n\ninstance1.sayAge();//29\n\nvar instance2=new SubType(\"Jack\",28);\n\nalert(instance2.colors);//\"red\",\"blue\",\"green\"\n\ninstance2.sayName();//\"Jack\"\n\ninstance2.sayAge();//28\n\n```\n\n\n\n","slug":"《JavaScript高级程序设计》阅读笔记：面向对象之继承","published":1,"updated":"2016-08-21T12:31:56.148Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vl000t1ov667ws1r6d","content":"<hr>\n<h2 id=\"&#x539F;&#x578B;&#x94FE;&#x7EE7;&#x627F;\"><a href=\"#&#x539F;&#x578B;&#x94FE;&#x7EE7;&#x627F;\" class=\"headerlink\" title=\"&#x539F;&#x578B;&#x94FE;&#x7EE7;&#x627F;\"></a>&#x539F;&#x578B;&#x94FE;&#x7EE7;&#x627F;</h2><p>&#x8BA9;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x539F;&#x578B;&#x5BF9;&#x8C61;&#x7B49;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5229;&#x7528;&#x539F;&#x578B;&#x8BA9;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7EE7;&#x627F;&#x53E6;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.property=<span class=\"literal\">true</span>;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.getSuperValue=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.property;</div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.subProperty=<span class=\"literal\">false</span>;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.getSubValue=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subProperty;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\">alert(instance.getSuperValue());<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>&#x4EE3;&#x7801;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x5B8C;&#x6574;&#x539F;&#x578B;&#x94FE;&#x5982;&#x4E0B;</p>\n<p><img src=\"/img/&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x4E4B;&#x7EE7;&#x627F;.png\" alt=\"\"></p>\n<p>&#x539F;&#x578B;&#x94FE;&#x7EE7;&#x627F;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x7236;&#x7C7B;&#x578B;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x4F1A;&#x88AB;&#x6240;&#x6709;&#x5B50;&#x7C7B;&#x578B;&#x5B9E;&#x4F8B;&#x5171;&#x4EAB;&#xFF0C;&#x8FD9;&#x662F;&#x4E0D;&#x7B26;&#x5408;&#x9884;&#x671F;&#x7684;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">&quot;black&quot;</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;,&quot;black&quot;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;,&quot;black&quot;</span></div></pre></td></tr></table></figure>\n<h2 id=\"&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7EE7;&#x627F;\"><a href=\"#&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7EE7;&#x627F;\" class=\"headerlink\" title=\"&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7EE7;&#x627F;\"></a>&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7EE7;&#x627F;</h2><p>&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#x5728;&#x5B50;&#x7C7B;&#x578B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x8D85;&#x7C7B;&#x578B;&#x6784;&#x9020;&#x51FD;&#x6570;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>);</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">&quot;black&quot;</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;,&quot;black&quot;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;</span></div></pre></td></tr></table></figure>\n<p>&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x50CF;&#x8D85;&#x7C7B;&#x578B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F20;&#x9012;&#x53C2;&#x6570;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,<span class=\"string\">&quot;Jim&quot;</span>);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=<span class=\"number\">28</span>;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance1.name);<span class=\"comment\">//&quot;Jim&quot;</span></div><div class=\"line\"></div><div class=\"line\">alert(instance1.age);<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n<p>&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x4E0D;&#x80FD;&#x590D;&#x7528;&#x8D85;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;</p>\n<h2 id=\"&#x7EC4;&#x5408;&#x7EE7;&#x627F;\"><a href=\"#&#x7EC4;&#x5408;&#x7EE7;&#x627F;\" class=\"headerlink\" title=\"&#x7EC4;&#x5408;&#x7EE7;&#x627F;\"></a>&#x7EC4;&#x5408;&#x7EE7;&#x627F;</h2><p>&#x4F7F;&#x7528;&#x539F;&#x578B;&#x94FE;&#x5B9E;&#x73B0;&#x5BF9;&#x539F;&#x578B;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#x7684;&#x7EE7;&#x627F;&#xFF0C;&#x901A;&#x8FC7;&#x501F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x5BF9;&#x5B9E;&#x4F8B;&#x5C5E;&#x6027;&#x7684;&#x7EE7;&#x627F;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">(name,age)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,name);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.sayAge=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.age);</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType(<span class=\"string\">&quot;Jim&quot;</span>,<span class=\"number\">29</span>);</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">&quot;black&quot;</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;,&quot;black&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayName();<span class=\"comment\">//&quot;Jim&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayAge();<span class=\"comment\">//29</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType(<span class=\"string\">&quot;Jack&quot;</span>,<span class=\"number\">28</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayName();<span class=\"comment\">//&quot;Jack&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayAge();<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n<h2 id=\"&#x5BC4;&#x751F;&#x7EC4;&#x5408;&#x5F0F;&#x7EE7;&#x627F;\"><a href=\"#&#x5BC4;&#x751F;&#x7EC4;&#x5408;&#x5F0F;&#x7EE7;&#x627F;\" class=\"headerlink\" title=\"&#x5BC4;&#x751F;&#x7EC4;&#x5408;&#x5F0F;&#x7EE7;&#x627F;\"></a>&#x5BC4;&#x751F;&#x7EC4;&#x5408;&#x5F0F;&#x7EE7;&#x627F;</h2><p>&#x5BC4;&#x751F;&#x7EC4;&#x5408;&#x5F0F;&#x7EE7;&#x627F;&#x89E3;&#x51B3;&#x4E86;&#x7EC4;&#x5408;&#x7EE7;&#x627F;&#x4E2D;&#xFF0C;&#x4E24;&#x6B21;&#x8C03;&#x7528;&#x8D85;&#x7C7B;&#x578B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x95EE;&#x9898;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span><span class=\"params\">(o)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span><span class=\"params\">()</span></span>{}</div><div class=\"line\">    F.prototype=o;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span><span class=\"params\">(subType,superType)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">var</span> prototype =object(superType.prototype);</div><div class=\"line\">    prototype.constructor=superType;<span class=\"comment\">//&#x539F;&#x4E66;&#x662F;prototype.constructor=subType&#xFF0C;&#x770B;&#x4E66;&#x65F6;&#x8BA4;&#x4E3A;&#x8FD9;&#x91CC;&#x5E94;&#x8BE5;&#x662F;superType</span></div><div class=\"line\">    subType.prototype=prototype;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">(name,age)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"comment\">//&#x7EE7;&#x627F;SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,name);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">inheritPrototype(SubType,SuperType);</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.sayAge=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.age);</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType(<span class=\"string\">&quot;Jim&quot;</span>,<span class=\"number\">29</span>);</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">&quot;black&quot;</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;,&quot;black&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayName();<span class=\"comment\">//&quot;Jim&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayAge();<span class=\"comment\">//29</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType(<span class=\"string\">&quot;Jack&quot;</span>,<span class=\"number\">28</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayName();<span class=\"comment\">//&quot;Jack&quot;</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayAge();<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<h2 id=\"原型链继承\"><a href=\"#原型链继承\" class=\"headerlink\" title=\"原型链继承\"></a>原型链继承</h2><p>让构造函数的原型对象等于另一个类型的实例，利用原型让一个引用类型继承另一个引用类型的属性和方法</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.property=<span class=\"literal\">true</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.getSuperValue=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.property;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.subProperty=<span class=\"literal\">false</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//继承SuperType</span></div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.getSubValue=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subProperty;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\">alert(instance.getSuperValue());<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>代码示例中，完整原型链如下</p>\n<p><img src=\"/img/面向对象之继承.png\" alt=\"\"></p>\n<p>原型链继承的问题：父类型引用类型的属性会被所有子类型实例共享，这是不符合预期的</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">\"red\"</span>,<span class=\"string\">\"blue\"</span>,<span class=\"string\">\"green\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//继承SuperType</span></div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">\"black\"</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\",\"black\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\",\"black\"</span></div></pre></td></tr></table></figure>\n<h2 id=\"借用构造函数继承\"><a href=\"#借用构造函数继承\" class=\"headerlink\" title=\"借用构造函数继承\"></a>借用构造函数继承</h2><p>基本思想是在子类型构造函数内部调用超类型构造函数</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">\"red\"</span>,<span class=\"string\">\"blue\"</span>,<span class=\"string\">\"green\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//继承SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">\"black\"</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\",\"black\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\"</span></div></pre></td></tr></table></figure>\n<p>借用构造函数可以像超类型构造函数传递参数</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//继承SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,<span class=\"string\">\"Jim\"</span>);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=<span class=\"number\">28</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType();</div><div class=\"line\"></div><div class=\"line\">alert(instance1.name);<span class=\"comment\">//\"Jim\"</span></div><div class=\"line\"></div><div class=\"line\">alert(instance1.age);<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n<p>借用构造函数的问题：不能复用超类型的方法</p>\n<h2 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h2><p>使用原型链实现对原型属性和方法的继承，通过借用构造函数实现对实例属性的继承</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">\"red\"</span>,<span class=\"string\">\"blue\"</span>,<span class=\"string\">\"green\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">(name,age)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//继承SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,name);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SubType.prototype=<span class=\"keyword\">new</span> SuperType();</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.sayAge=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.age);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType(<span class=\"string\">\"Jim\"</span>,<span class=\"number\">29</span>);</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">\"black\"</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\",\"black\"</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayName();<span class=\"comment\">//\"Jim\"</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayAge();<span class=\"comment\">//29</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType(<span class=\"string\">\"Jack\"</span>,<span class=\"number\">28</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\"</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayName();<span class=\"comment\">//\"Jack\"</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayAge();<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n<h2 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h2><p>寄生组合式继承解决了组合继承中，两次调用超类型构造函数的问题</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span><span class=\"params\">(o)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span><span class=\"params\">()</span></span>&#123;&#125;</div><div class=\"line\">    F.prototype=o;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span><span class=\"params\">(subType,superType)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> prototype =object(superType.prototype);</div><div class=\"line\">    prototype.constructor=superType;<span class=\"comment\">//原书是prototype.constructor=subType，看书时认为这里应该是superType</span></div><div class=\"line\">    subType.prototype=prototype;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span><span class=\"params\">(name)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors=[<span class=\"string\">\"red\"</span>,<span class=\"string\">\"blue\"</span>,<span class=\"string\">\"green\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SuperType.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span><span class=\"params\">(name,age)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//继承SuperType</span></div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>,name);</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">inheritPrototype(SubType,SuperType);</div><div class=\"line\"></div><div class=\"line\">SubType.prototype.sayAge=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.age);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance1=<span class=\"keyword\">new</span> SubType(<span class=\"string\">\"Jim\"</span>,<span class=\"number\">29</span>);</div><div class=\"line\"></div><div class=\"line\">instance1.colors.push(<span class=\"string\">\"black\"</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance1.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\",\"black\"</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayName();<span class=\"comment\">//\"Jim\"</span></div><div class=\"line\"></div><div class=\"line\">instance1.sayAge();<span class=\"comment\">//29</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> instance2=<span class=\"keyword\">new</span> SubType(<span class=\"string\">\"Jack\"</span>,<span class=\"number\">28</span>);</div><div class=\"line\"></div><div class=\"line\">alert(instance2.colors);<span class=\"comment\">//\"red\",\"blue\",\"green\"</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayName();<span class=\"comment\">//\"Jack\"</span></div><div class=\"line\"></div><div class=\"line\">instance2.sayAge();<span class=\"comment\">//28</span></div></pre></td></tr></table></figure>\n"},{"title":"《JavaScript高级程序设计》阅读笔记：面向对象之创建对象","date":"2016-07-29T16:00:00.000Z","modifiedOn":"2016-07-29T16:00:00.000Z","toc":true,"_content":"\n----------\n### 创建对象\n##### 工厂模式\n工厂模式优点：有了封装的概念，解决了创建多个相似对象的问题\n\n缺点：没有解决对象识别问题,所有对象都仅是Object的实例\n\n```\nfunction createPerson(name,age,job)\n{\n    var o=new Object();\n    o.name=name;\n    o.age=age;\n    o.job=job;\n    o.sayName=function(){\n        alert(this.name);\n    };\n    return o;\n}\nvar person1=createPerson(\"Jack\",29,\"Engineer\");\n\n//检测对象类型\nalert(person1 instanceof Object) //true\nalert(person1 instanceof Person) //error Person is not defined\n```\n##### 构造函数模式\n\n构造函数模式相比工厂模式的优点就在于，构造函数模式可以将他的实例标示为特定类型\n\n```\nfunction Person(name,age,job)\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=function(){\n        alert(this.name);\n    };\n}\n\nvar person1=new Person(\"Jack\",29,\"Engineer\");\n\n//检测对象类型\nalert(person1 instanceof Object) //true\nalert(person1 instanceof Person) //true\n```\n\n构造函数也是函数，如果不通过new 操作符调用，和其他函数没有不同\n\n```\nfunction Person(name,age,job)\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=function(){\n        alert(this.name);\n    };\n}\n\n//以构造函数模式调用\nvar person1=new Person(\"Jack\",29,\"Engineer\");\nperson1.sayName();//Jack\n\n//以普通函数调用\nPerson(\"Lily\",25,\"Actor\");//执行环境为全局执行环节，this指向window\nwindow.sayName();//Lily\n\n//在另一个对象的作用域中调用\nvar o=new Object();\nPerson.apply(o,[\"Jim\",21,\"Teacher\"]);//扩展Person至实例对象o的作用域\no.sayName();//Jim\n```\n\n构造函数模式缺点在于实例方法无法复用，创建两个对象person1,person2的sayName方法的不等的，解决方法可以将函数定义转至构造函数外部，构造函数这用函数指针作为对象属性，指向外部的函数定义。\n\n但是这样的实现，首先污染了全局作用域，其次破坏了封装性\n\n```\n\nfunction Person(name,age,job)\n\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=sayName;\n}\n\nfunction sayName(){\n    alert(this.Name);\n}\n\nvar person1=new Person(\"Karl\",28,\"Doctor\");\n```\n##### 原型模式\n\n每个函数都有一个prototype属性，这个属性是一个指针，指向一个对象，这个对象用途是包含可以由特定类型的所有实例共享的属性和方法\n\n```\n\nfunction Person()\n{    \n}\n\nPerson.prototype.name=\"Jim\";\nPerson.prototype.age=29;\nPerson.prototype.job=\"Teacher\";\nPerson.prototype.sayName=function(){\n    alert(this.Name);\n};\n\nvar person1=new Person();\nperson1.sayName();//\"Jim\"\nvar person2=new Person();\nalert(person1.sayName==person2.sayName);//true\n```\n\n代码这构造函数、原型对象和实例对象之间关系如下图\n\n![](/img/面向对象之创建对象.png)\n\n\n\n\n原型模式简易写法\n\n```\nfunction Person()\n{    \n}\n\nPerson.prototype={\n    constructor:Person,//对象字面量创建了新对象，如不指定，constructor指向了Object\n    name:\"Jim\",\n    age:29,\n    job:\"Teacher\",\n    sayName:function(){\n        alert(this.name);\n    }\n};\n\n```\n\n原型模式的缺点：所有实例在默认情况下取得相同属性值\n\n##### 构造器与原型混合模式\n```\nfunction Person(name,age,job)\n{    \n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.friends=[\"Tom\",\"Jack\"];\n}\n\nPerson.prototype={\n    constructor:Person,//对象字面量创建了新对象，如不指定，constructor指向了Object\n    sayName:function(){\n        alert(this.name);\n    }\n};\n\nvar person1=new Person(\"Jim\",25,\"Teacher\");\nvar person2=new Person(\"Lily\",20,\"Actor\");\nperson1.friends.push(\"Mark\");\nalert(person1.friends===person2.friends);//false\nalert(person1.sayName===person2.sayName);//true\n```\n##### 动态原型模式\n所有代码封装在构造函数，首次调用将方法添加至原型对象\n\n```\nfunction Person(name,age,job)\n{    \n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.friends=[\"Tom\",\"Jack\"];\n    //方法\n    if(typeof this.sayName != \"function\")\n    {\n        Person.prototype.sayName=function(){\n            alert(this.name);\n        };\n    }\n}\n\n```\n","source":"_posts/《JavaScript高级程序设计》阅读笔记：面向对象之创建对象.md","raw":"---\ntitle: 《JavaScript高级程序设计》阅读笔记：面向对象之创建对象 \ncategory: 《JavaScript高级程序设计》阅读笔记\ntags: javascript\ndate: 2016-07-30\nmodifiedOn: 2016-07-30\ntoc: true\n---\n\n----------\n### 创建对象\n##### 工厂模式\n工厂模式优点：有了封装的概念，解决了创建多个相似对象的问题\n\n缺点：没有解决对象识别问题,所有对象都仅是Object的实例\n\n```\nfunction createPerson(name,age,job)\n{\n    var o=new Object();\n    o.name=name;\n    o.age=age;\n    o.job=job;\n    o.sayName=function(){\n        alert(this.name);\n    };\n    return o;\n}\nvar person1=createPerson(\"Jack\",29,\"Engineer\");\n\n//检测对象类型\nalert(person1 instanceof Object) //true\nalert(person1 instanceof Person) //error Person is not defined\n```\n##### 构造函数模式\n\n构造函数模式相比工厂模式的优点就在于，构造函数模式可以将他的实例标示为特定类型\n\n```\nfunction Person(name,age,job)\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=function(){\n        alert(this.name);\n    };\n}\n\nvar person1=new Person(\"Jack\",29,\"Engineer\");\n\n//检测对象类型\nalert(person1 instanceof Object) //true\nalert(person1 instanceof Person) //true\n```\n\n构造函数也是函数，如果不通过new 操作符调用，和其他函数没有不同\n\n```\nfunction Person(name,age,job)\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=function(){\n        alert(this.name);\n    };\n}\n\n//以构造函数模式调用\nvar person1=new Person(\"Jack\",29,\"Engineer\");\nperson1.sayName();//Jack\n\n//以普通函数调用\nPerson(\"Lily\",25,\"Actor\");//执行环境为全局执行环节，this指向window\nwindow.sayName();//Lily\n\n//在另一个对象的作用域中调用\nvar o=new Object();\nPerson.apply(o,[\"Jim\",21,\"Teacher\"]);//扩展Person至实例对象o的作用域\no.sayName();//Jim\n```\n\n构造函数模式缺点在于实例方法无法复用，创建两个对象person1,person2的sayName方法的不等的，解决方法可以将函数定义转至构造函数外部，构造函数这用函数指针作为对象属性，指向外部的函数定义。\n\n但是这样的实现，首先污染了全局作用域，其次破坏了封装性\n\n```\n\nfunction Person(name,age,job)\n\n{\n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.sayName=sayName;\n}\n\nfunction sayName(){\n    alert(this.Name);\n}\n\nvar person1=new Person(\"Karl\",28,\"Doctor\");\n```\n##### 原型模式\n\n每个函数都有一个prototype属性，这个属性是一个指针，指向一个对象，这个对象用途是包含可以由特定类型的所有实例共享的属性和方法\n\n```\n\nfunction Person()\n{    \n}\n\nPerson.prototype.name=\"Jim\";\nPerson.prototype.age=29;\nPerson.prototype.job=\"Teacher\";\nPerson.prototype.sayName=function(){\n    alert(this.Name);\n};\n\nvar person1=new Person();\nperson1.sayName();//\"Jim\"\nvar person2=new Person();\nalert(person1.sayName==person2.sayName);//true\n```\n\n代码这构造函数、原型对象和实例对象之间关系如下图\n\n![](/img/面向对象之创建对象.png)\n\n\n\n\n原型模式简易写法\n\n```\nfunction Person()\n{    \n}\n\nPerson.prototype={\n    constructor:Person,//对象字面量创建了新对象，如不指定，constructor指向了Object\n    name:\"Jim\",\n    age:29,\n    job:\"Teacher\",\n    sayName:function(){\n        alert(this.name);\n    }\n};\n\n```\n\n原型模式的缺点：所有实例在默认情况下取得相同属性值\n\n##### 构造器与原型混合模式\n```\nfunction Person(name,age,job)\n{    \n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.friends=[\"Tom\",\"Jack\"];\n}\n\nPerson.prototype={\n    constructor:Person,//对象字面量创建了新对象，如不指定，constructor指向了Object\n    sayName:function(){\n        alert(this.name);\n    }\n};\n\nvar person1=new Person(\"Jim\",25,\"Teacher\");\nvar person2=new Person(\"Lily\",20,\"Actor\");\nperson1.friends.push(\"Mark\");\nalert(person1.friends===person2.friends);//false\nalert(person1.sayName===person2.sayName);//true\n```\n##### 动态原型模式\n所有代码封装在构造函数，首次调用将方法添加至原型对象\n\n```\nfunction Person(name,age,job)\n{    \n    this.name=name;\n    this.age=age;\n    this.job=job;\n    this.friends=[\"Tom\",\"Jack\"];\n    //方法\n    if(typeof this.sayName != \"function\")\n    {\n        Person.prototype.sayName=function(){\n            alert(this.name);\n        };\n    }\n}\n\n```\n","slug":"《JavaScript高级程序设计》阅读笔记：面向对象之创建对象","published":1,"updated":"2016-08-21T12:31:55.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vn000v1ov6ar2n233m","content":"<hr>\n<h3 id=\"&#x521B;&#x5EFA;&#x5BF9;&#x8C61;\"><a href=\"#&#x521B;&#x5EFA;&#x5BF9;&#x8C61;\" class=\"headerlink\" title=\"&#x521B;&#x5EFA;&#x5BF9;&#x8C61;\"></a>&#x521B;&#x5EFA;&#x5BF9;&#x8C61;</h3><h5 id=\"&#x5DE5;&#x5382;&#x6A21;&#x5F0F;\"><a href=\"#&#x5DE5;&#x5382;&#x6A21;&#x5F0F;\" class=\"headerlink\" title=\"&#x5DE5;&#x5382;&#x6A21;&#x5F0F;\"></a>&#x5DE5;&#x5382;&#x6A21;&#x5F0F;</h5><p>&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x4F18;&#x70B9;&#xFF1A;&#x6709;&#x4E86;&#x5C01;&#x88C5;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x521B;&#x5EFA;&#x591A;&#x4E2A;&#x76F8;&#x4F3C;&#x5BF9;&#x8C61;&#x7684;&#x95EE;&#x9898;</p>\n<p>&#x7F3A;&#x70B9;&#xFF1A;&#x6CA1;&#x6709;&#x89E3;&#x51B3;&#x5BF9;&#x8C61;&#x8BC6;&#x522B;&#x95EE;&#x9898;,&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x90FD;&#x4EC5;&#x662F;Object&#x7684;&#x5B9E;&#x4F8B;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\">name,age,job</span>)</span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name=name;</div><div class=\"line\">    o.age=age;</div><div class=\"line\">    o.job=job;</div><div class=\"line\">    o.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    };</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">}</div><div class=\"line\"><span class=\"keyword\">var</span> person1=createPerson(<span class=\"string\">&quot;Jack&quot;</span>,<span class=\"number\">29</span>,<span class=\"string\">&quot;Engineer&quot;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x68C0;&#x6D4B;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">//true</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">//error Person is not defined</span></div></pre></td></tr></table></figure>\n<h5 id=\"&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;\"><a href=\"#&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;\" class=\"headerlink\" title=\"&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;\"></a>&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;</h5><p>&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;&#x76F8;&#x6BD4;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x7684;&#x4F18;&#x70B9;&#x5C31;&#x5728;&#x4E8E;&#xFF0C;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x5C06;&#x4ED6;&#x7684;&#x5B9E;&#x4F8B;&#x6807;&#x793A;&#x4E3A;&#x7279;&#x5B9A;&#x7C7B;&#x578B;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    };</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jack&quot;</span>,<span class=\"number\">29</span>,<span class=\"string\">&quot;Engineer&quot;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x68C0;&#x6D4B;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">//true</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E5F;&#x662F;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x901A;&#x8FC7;new &#x64CD;&#x4F5C;&#x7B26;&#x8C03;&#x7528;&#xFF0C;&#x548C;&#x5176;&#x4ED6;&#x51FD;&#x6570;&#x6CA1;&#x6709;&#x4E0D;&#x540C;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>{</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    };</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x4EE5;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;&#x8C03;&#x7528;</span></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jack&quot;</span>,<span class=\"number\">29</span>,<span class=\"string\">&quot;Engineer&quot;</span>);</div><div class=\"line\">person1.sayName();<span class=\"comment\">//Jack</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x4EE5;&#x666E;&#x901A;&#x51FD;&#x6570;&#x8C03;&#x7528;</span></div><div class=\"line\">Person(<span class=\"string\">&quot;Lily&quot;</span>,<span class=\"number\">25</span>,<span class=\"string\">&quot;Actor&quot;</span>);<span class=\"comment\">//&#x6267;&#x884C;&#x73AF;&#x5883;&#x4E3A;&#x5168;&#x5C40;&#x6267;&#x884C;&#x73AF;&#x8282;&#xFF0C;this&#x6307;&#x5411;window</span></div><div class=\"line\"><span class=\"built_in\">window</span>.sayName();<span class=\"comment\">//Lily</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x8C03;&#x7528;</span></div><div class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">Person.apply(o,[<span class=\"string\">&quot;Jim&quot;</span>,<span class=\"number\">21</span>,<span class=\"string\">&quot;Teacher&quot;</span>]);<span class=\"comment\">//&#x6269;&#x5C55;Person&#x81F3;&#x5B9E;&#x4F8B;&#x5BF9;&#x8C61;o&#x7684;&#x4F5C;&#x7528;&#x57DF;</span></div><div class=\"line\">o.sayName();<span class=\"comment\">//Jim</span></div></pre></td></tr></table></figure>\n<p>&#x6784;&#x9020;&#x51FD;&#x6570;&#x6A21;&#x5F0F;&#x7F3A;&#x70B9;&#x5728;&#x4E8E;&#x5B9E;&#x4F8B;&#x65B9;&#x6CD5;&#x65E0;&#x6CD5;&#x590D;&#x7528;&#xFF0C;&#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;person1,person2&#x7684;sayName&#x65B9;&#x6CD5;&#x7684;&#x4E0D;&#x7B49;&#x7684;&#xFF0C;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5C06;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x8F6C;&#x81F3;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5916;&#x90E8;&#xFF0C;&#x6784;&#x9020;&#x51FD;&#x6570;&#x8FD9;&#x7528;&#x51FD;&#x6570;&#x6307;&#x9488;&#x4F5C;&#x4E3A;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#xFF0C;&#x6307;&#x5411;&#x5916;&#x90E8;&#x7684;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x3002;</p>\n<p>&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x9996;&#x5148;&#x6C61;&#x67D3;&#x4E86;&#x5168;&#x5C40;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x5176;&#x6B21;&#x7834;&#x574F;&#x4E86;&#x5C01;&#x88C5;&#x6027;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></span></div><div class=\"line\"></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=sayName;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.Name);</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Karl&quot;</span>,<span class=\"number\">28</span>,<span class=\"string\">&quot;Doctor&quot;</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"&#x539F;&#x578B;&#x6A21;&#x5F0F;\"><a href=\"#&#x539F;&#x578B;&#x6A21;&#x5F0F;\" class=\"headerlink\" title=\"&#x539F;&#x578B;&#x6A21;&#x5F0F;\"></a>&#x539F;&#x578B;&#x6A21;&#x5F0F;</h5><p>&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x90FD;&#x6709;&#x4E00;&#x4E2A;prototype&#x5C5E;&#x6027;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7528;&#x9014;&#x662F;&#x5305;&#x542B;&#x53EF;&#x4EE5;&#x7531;&#x7279;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x6240;&#x6709;&#x5B9E;&#x4F8B;&#x5171;&#x4EAB;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">()</span></span></div><div class=\"line\">{    </div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">Person.prototype.name=<span class=\"string\">&quot;Jim&quot;</span>;</div><div class=\"line\">Person.prototype.age=<span class=\"number\">29</span>;</div><div class=\"line\">Person.prototype.job=<span class=\"string\">&quot;Teacher&quot;</span>;</div><div class=\"line\">Person.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.Name);</div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person();</div><div class=\"line\">person1.sayName();<span class=\"comment\">//&quot;Jim&quot;</span></div><div class=\"line\"><span class=\"keyword\">var</span> person2=<span class=\"keyword\">new</span> Person();</div><div class=\"line\">alert(person1.sayName==person2.sayName);<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>&#x4EE3;&#x7801;&#x8FD9;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3001;&#x539F;&#x578B;&#x5BF9;&#x8C61;&#x548C;&#x5B9E;&#x4F8B;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;</p>\n<p><img src=\"/img/&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x4E4B;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;.png\" alt=\"\"></p>\n<p>&#x539F;&#x578B;&#x6A21;&#x5F0F;&#x7B80;&#x6613;&#x5199;&#x6CD5;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">()</span></span></div><div class=\"line\">{    </div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">Person.prototype={</div><div class=\"line\">    constructor:Person,<span class=\"comment\">//&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x521B;&#x5EFA;&#x4E86;&#x65B0;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;constructor&#x6307;&#x5411;&#x4E86;Object</span></div><div class=\"line\">    name:<span class=\"string\">&quot;Jim&quot;</span>,</div><div class=\"line\">    age:<span class=\"number\">29</span>,</div><div class=\"line\">    job:<span class=\"string\">&quot;Teacher&quot;</span>,</div><div class=\"line\">    sayName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    }</div><div class=\"line\">};</div></pre></td></tr></table></figure>\n<p>&#x539F;&#x578B;&#x6A21;&#x5F0F;&#x7684;&#x7F3A;&#x70B9;&#xFF1A;&#x6240;&#x6709;&#x5B9E;&#x4F8B;&#x5728;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x53D6;&#x5F97;&#x76F8;&#x540C;&#x5C5E;&#x6027;&#x503C;</p>\n<h5 id=\"&#x6784;&#x9020;&#x5668;&#x4E0E;&#x539F;&#x578B;&#x6DF7;&#x5408;&#x6A21;&#x5F0F;\"><a href=\"#&#x6784;&#x9020;&#x5668;&#x4E0E;&#x539F;&#x578B;&#x6DF7;&#x5408;&#x6A21;&#x5F0F;\" class=\"headerlink\" title=\"&#x6784;&#x9020;&#x5668;&#x4E0E;&#x539F;&#x578B;&#x6DF7;&#x5408;&#x6A21;&#x5F0F;\"></a>&#x6784;&#x9020;&#x5668;&#x4E0E;&#x539F;&#x578B;&#x6DF7;&#x5408;&#x6A21;&#x5F0F;</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></span></div><div class=\"line\">{    </div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends=[<span class=\"string\">&quot;Tom&quot;</span>,<span class=\"string\">&quot;Jack&quot;</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">Person.prototype={</div><div class=\"line\">    constructor:Person,<span class=\"comment\">//&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x521B;&#x5EFA;&#x4E86;&#x65B0;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;constructor&#x6307;&#x5411;&#x4E86;Object</span></div><div class=\"line\">    sayName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    }</div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jim&quot;</span>,<span class=\"number\">25</span>,<span class=\"string\">&quot;Teacher&quot;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> person2=<span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Lily&quot;</span>,<span class=\"number\">20</span>,<span class=\"string\">&quot;Actor&quot;</span>);</div><div class=\"line\">person1.friends.push(<span class=\"string\">&quot;Mark&quot;</span>);</div><div class=\"line\">alert(person1.friends===person2.friends);<span class=\"comment\">//false</span></div><div class=\"line\">alert(person1.sayName===person2.sayName);<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<h5 id=\"&#x52A8;&#x6001;&#x539F;&#x578B;&#x6A21;&#x5F0F;\"><a href=\"#&#x52A8;&#x6001;&#x539F;&#x578B;&#x6A21;&#x5F0F;\" class=\"headerlink\" title=\"&#x52A8;&#x6001;&#x539F;&#x578B;&#x6A21;&#x5F0F;\"></a>&#x52A8;&#x6001;&#x539F;&#x578B;&#x6A21;&#x5F0F;</h5><p>&#x6240;&#x6709;&#x4EE3;&#x7801;&#x5C01;&#x88C5;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x9996;&#x6B21;&#x8C03;&#x7528;&#x5C06;&#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x81F3;&#x539F;&#x578B;&#x5BF9;&#x8C61;</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></span></div><div class=\"line\">{    </div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends=[<span class=\"string\">&quot;Tom&quot;</span>,<span class=\"string\">&quot;Jack&quot;</span>];</div><div class=\"line\">    <span class=\"comment\">//&#x65B9;&#x6CD5;</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">&quot;function&quot;</span>)</div><div class=\"line\">    {</div><div class=\"line\">        Person.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{</div><div class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">        };</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<hr>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><p>工厂模式优点：有了封装的概念，解决了创建多个相似对象的问题</p>\n<p>缺点：没有解决对象识别问题,所有对象都仅是Object的实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\">name,age,job</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name=name;</div><div class=\"line\">    o.age=age;</div><div class=\"line\">    o.job=job;</div><div class=\"line\">    o.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> person1=createPerson(<span class=\"string\">\"Jack\"</span>,<span class=\"number\">29</span>,<span class=\"string\">\"Engineer\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//检测对象类型</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">//true</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">//error Person is not defined</span></div></pre></td></tr></table></figure>\n<h5 id=\"构造函数模式\"><a href=\"#构造函数模式\" class=\"headerlink\" title=\"构造函数模式\"></a>构造函数模式</h5><p>构造函数模式相比工厂模式的优点就在于，构造函数模式可以将他的实例标示为特定类型</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">\"Jack\"</span>,<span class=\"number\">29</span>,<span class=\"string\">\"Engineer\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//检测对象类型</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) <span class=\"comment\">//true</span></div><div class=\"line\">alert(person1 <span class=\"keyword\">instanceof</span> Person) <span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>构造函数也是函数，如果不通过new 操作符调用，和其他函数没有不同</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,age,job</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以构造函数模式调用</span></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">\"Jack\"</span>,<span class=\"number\">29</span>,<span class=\"string\">\"Engineer\"</span>);</div><div class=\"line\">person1.sayName();<span class=\"comment\">//Jack</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以普通函数调用</span></div><div class=\"line\">Person(<span class=\"string\">\"Lily\"</span>,<span class=\"number\">25</span>,<span class=\"string\">\"Actor\"</span>);<span class=\"comment\">//执行环境为全局执行环节，this指向window</span></div><div class=\"line\"><span class=\"built_in\">window</span>.sayName();<span class=\"comment\">//Lily</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//在另一个对象的作用域中调用</span></div><div class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">Person.apply(o,[<span class=\"string\">\"Jim\"</span>,<span class=\"number\">21</span>,<span class=\"string\">\"Teacher\"</span>]);<span class=\"comment\">//扩展Person至实例对象o的作用域</span></div><div class=\"line\">o.sayName();<span class=\"comment\">//Jim</span></div></pre></td></tr></table></figure>\n<p>构造函数模式缺点在于实例方法无法复用，创建两个对象person1,person2的sayName方法的不等的，解决方法可以将函数定义转至构造函数外部，构造函数这用函数指针作为对象属性，指向外部的函数定义。</p>\n<p>但是这样的实现，首先污染了全局作用域，其次破坏了封装性</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></div><div class=\"line\"></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName=sayName;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.Name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">\"Karl\"</span>,<span class=\"number\">28</span>,<span class=\"string\">\"Doctor\"</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><p>每个函数都有一个prototype属性，这个属性是一个指针，指向一个对象，这个对象用途是包含可以由特定类型的所有实例共享的属性和方法</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype.name=<span class=\"string\">\"Jim\"</span>;</div><div class=\"line\">Person.prototype.age=<span class=\"number\">29</span>;</div><div class=\"line\">Person.prototype.job=<span class=\"string\">\"Teacher\"</span>;</div><div class=\"line\">Person.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.Name);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person();</div><div class=\"line\">person1.sayName();<span class=\"comment\">//\"Jim\"</span></div><div class=\"line\"><span class=\"keyword\">var</span> person2=<span class=\"keyword\">new</span> Person();</div><div class=\"line\">alert(person1.sayName==person2.sayName);<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<p>代码这构造函数、原型对象和实例对象之间关系如下图</p>\n<p><img src=\"/img/面向对象之创建对象.png\" alt=\"\"></p>\n<p>原型模式简易写法</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype=&#123;</div><div class=\"line\">    constructor:Person,<span class=\"comment\">//对象字面量创建了新对象，如不指定，constructor指向了Object</span></div><div class=\"line\">    name:<span class=\"string\">\"Jim\"</span>,</div><div class=\"line\">    age:<span class=\"number\">29</span>,</div><div class=\"line\">    job:<span class=\"string\">\"Teacher\"</span>,</div><div class=\"line\">    sayName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>原型模式的缺点：所有实例在默认情况下取得相同属性值</p>\n<h5 id=\"构造器与原型混合模式\"><a href=\"#构造器与原型混合模式\" class=\"headerlink\" title=\"构造器与原型混合模式\"></a>构造器与原型混合模式</h5><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></div><div class=\"line\"></span>&#123;    </div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends=[<span class=\"string\">\"Tom\"</span>,<span class=\"string\">\"Jack\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype=&#123;</div><div class=\"line\">    constructor:Person,<span class=\"comment\">//对象字面量创建了新对象，如不指定，constructor指向了Object</span></div><div class=\"line\">    sayName:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> person1=<span class=\"keyword\">new</span> Person(<span class=\"string\">\"Jim\"</span>,<span class=\"number\">25</span>,<span class=\"string\">\"Teacher\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> person2=<span class=\"keyword\">new</span> Person(<span class=\"string\">\"Lily\"</span>,<span class=\"number\">20</span>,<span class=\"string\">\"Actor\"</span>);</div><div class=\"line\">person1.friends.push(<span class=\"string\">\"Mark\"</span>);</div><div class=\"line\">alert(person1.friends===person2.friends);<span class=\"comment\">//false</span></div><div class=\"line\">alert(person1.sayName===person2.sayName);<span class=\"comment\">//true</span></div></pre></td></tr></table></figure>\n<h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><p>所有代码封装在构造函数，首次调用将方法添加至原型对象</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span><span class=\"params\">(name,age,job)</span></div><div class=\"line\"></span>&#123;    </div><div class=\"line\">    <span class=\"keyword\">this</span>.name=name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.age=age;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job=job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends=[<span class=\"string\">\"Tom\"</span>,<span class=\"string\">\"Jack\"</span>];</div><div class=\"line\">    <span class=\"comment\">//方法</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">\"function\"</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        Person.prototype.sayName=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">        &#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"常用gulp插件介绍","date":"2016-08-08T16:00:00.000Z","modifiedOn":"2016-08-18T16:00:00.000Z","toc":true,"_content":"\n这里介绍一些gulp比较常用的插件，包括util工具类、stream相关、inject相关、Angular相关、压缩工具类、server相关、特定语言相关等。\n<!-- more -->\n\n### util工具类\n\n这个分类下主要介绍一些辅助工具类的插件。\n\n#### [gulp-load-plugins](https://www.npmjs.com/package/gulp-load-plugins)\n\n顾名思义，本插件的功能就是帮你自动require你在`package.json`中声明的依赖。只要一句`var $ = require('gulp-load-plugins')()`，则`package.json`中声明的`gulp-`或`gulp.`开头的插件就会自动被放在变量`$`下面。如`$.util`就等于`require('gulp-util')`，而有两个连字符的插件则会自动命名为驼峰格式，如`$.taskListing`则等于`require('gulp-task-listing')`。有了这个插件，就不用一个一个的require了。这个插件还有一些常用的参数配置，这里列几个常用的：\n\n* `lazyload: true`，用到这个插件的时候再去require，默认为true。\n* `rename: {'gulp-task-listing': 'list'}`，如果有些插件名字太长，可以使用该参数重命名。\n* `scope: ['dependencies']`，本插件默认会扫描`package.json`里的所有dependence，可以使用该参数进行限制。\n\n要使用这些参数只要在require的时候传入即可，如`require('gulp-load-plugins')({lazy: true})`。\n\n#### [gulp-task-loader](https://www.npmjs.com/package/gulp-task-loader)\n\n这个插件的作用很简单，就是可以将gulpfile.js拆分成多个文件，放到目录下，是任务更清晰，结构更分明，使用方法如下：\nclear.js\n```javascript\n'use strict';\nvar del = require('del');\n\nmodule.exports = function() {\n    return del.sync(this.opts.destDir);\n};\n```\ncopy.js\n```javascript\n'use strict';\n\nmodule.exports = function() {\n    return this.gulp.src(this.opts.publicDir)\n     .pipe(this.gulp.dest(this.opts.destDir));\n};\nmodule.exports.dependencies = ['clean'];\n```\n\ngulpfile.js\n```javascript\n'use strict';\nvar gulp = require('gulp');\nvar config = {\n    pkg: require('./package.json'),\n    publicDir: ['./{public,public/**}'],\n    destDir: 'dest',\n    version: \"0.01\"\n};\n\nrequire('gulp-task-loader')(config);\ngulp.task('build', ['clean', 'copy');\n\n```\n\n可以看到copy.js中最后有这样一行代码`module.exports.dependencies = ['clean'];`,这个是用做任务依赖的，只有前一个任务执行完毕后才能执行当前任务，使用起来还是很简单的\n\n\n#### [gulp-task-listing](https://www.npmjs.com/package/gulp-task-listing)\n\n这个插件的作用也很容易猜，它可以打印出`gulpfile.js`中定义的所有task，这个插件我们在[重构你的gulpfile](/2015/03/24/refactor-your-gulpfile/)这篇文章的最后介绍过，值得一提的是它还可以根据task的名字确定它是不是一个子task，比如带有`:`、`-`、`_`的task就被认为是子task。我一般把这个插件作为默认的task来调用，如\n\n``` javascript\ngulp.task('default', ['help']);\ngulp.task('help', $.taskListing);\n```\n\n这样，如果只执行`gulp`的话就会打印出所有定义好的task，非常实用。\n\n#### [yargs](https://www.npmjs.com/package/yargs)\n\n严格的说，`yargs`不是专门用于gulp的，它是Node中处理命令行参数的通用解决方案。只要一句代码`var args = require('yargs').argv;`就可以让命令行的参数都放在变量`args`上，非常方便。它可以处理的参数类型也是多种多样的：\n\n* 单字符的简单参数，如传入`-m=5`或`-m 5`，则可得到`args.m = 5`。\n* 多字符参数（必须使用双连字符），如传入`--test=5`或`--test 5`，则可得到`args.test = 5`。\n* 不带值的参数，如传入`--mock`，则会被认为是布尔类型的参数，可得到`args.mock = true`。\n\n除此之外，还支持很多其他类型的传参方式，具体可参考[它的文档](https://www.npmjs.com/package/yargs)。\n\n#### [gulp-util](https://www.npmjs.com/package/gulp-util)\n\ngulp-util带有很多方便的函数，其中最常用的应该就是log了。`$.util.log()`支持传入多个参数，打印结果会将多个参数用空格连接起来。它与`console.log`的区别就是所有`$.util.log`的结果会自动带上时间前缀。另外，它还支持颜色，如`$.util.log($.util.colors.magenta('123'));`打印出来的123是品红色的。其实`$.util.colors`就是一个[chalk](https://github.com/sindresorhus/chalk)的实例，而chalk是专门用来处理命令行打印着色的一个工具。\n\n#### [del](https://www.npmjs.com/package/del)\n\ngrunt自身提供一个[grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean)用来处理支持glob匹配的删除，而del就是gulp上对应的工具。del支持和`gulp.src`参数同样的匹配，除此之外，它的第二个参数还支持一个回调函数，当删除完成以后执行，所以这是一个异步的删除。常用的调用方法为：`del([xxx], callback)`。\n\n#### [gulp-bytediff](https://www.npmjs.com/package/gulp-bytediff)\n\n这是一个统计文件大小变化的工具，通常与压缩类工具放在一起实用，比如\n\n``` javascript\ngulp.src('**/*.html')\n    .pipe($.bytediff.start())\n    .pipe($.minifyHtml({empty: true}))\n    .pipe($.bytediff.stop(bytediffFormatter))\n    .pipe(gulp.dest('dist'));\n\nfunction bytediffFormatter (data) {\n    var difference = (data.savings > 0) ? ' smaller.' : ' larger.';\n    return data.fileName + ' went from ' +\n        (data.startSize / 1000).toFixed(2) + ' kB to ' +\n        (data.endSize / 1000).toFixed(2) + ' kB and is ' +\n        formatPercent(1 - data.percent, 2) + '%' + difference;\n}\n```\n\n在压缩的pipe前后加上`$.bytediff.start()`和`$.bytediff.stop(callback)`，即可统计压缩前后文件的变化。在callback中传入的参数data上，可以访问到很多变量，如文件名，变化前后的大小，变化百分比等等。\n\n#### [gulp-print](https://www.npmjs.com/package/gulp-print)\n\n这个插件的作用很简单，打印出stream里面的所有文件名，通常调试的时候比较需要。\n\n#### [gulp-bump](https://www.npmjs.com/package/gulp-bump)\n\n这个插件也可以顾名思义：用来升级版本用的，废话不说，直接看例子吧：\n\n``` javascript\nreturn gulp\n    .src('package.json')\n    .pipe($.bump(options))\n    .pipe(gulp.dest('dist'));\n```\n\n重点来看这里的options，我们可直接传递一个具体的version进去，也可以按照Node的版本规范传递一个type进去，让其自己生成对应的version：\n\n* `version`，直接传递要升级到的版本号，如`1.2.3`。\n* `type`，可接受的值包括下面四个，倘若现在的版本号为`1.2.3`，则对应的新版本号为：\n    * prerelease：`1.2.3-0`\n    * patch：`1.2.4`\n    * minor：`1.3.0`\n    * major：`2.0.0`\n\n最终这个升级后的版本号会反映在`package.json`中，当然，你也可以在gulp.src中传入更多的文件（如`bower.json`）来替换更多的文件。\n\n#### [gulp-header](https://www.npmjs.com/package/gulp-header)\n\n这个工具用来在压缩后的JS、CSS文件中添加头部注释，你可以包含任意想要的信息，通常就是作者、描述、版本号、license等，比如：\n\n``` javascript\nfunction getHeader () {\n    var pkg = require('package.json');\n    var template = ['/**',\n        ' * <%= pkg.name %> - <%= pkg.description %>',\n        ' * @authors <%= pkg.authors %>',\n        ' * @version v<%= pkg.version %>',\n        ' * @link <%= pkg.homepage %>',\n        ' * @license <%= pkg.license %>',\n        ' */',\n        ''\n    ].join('\\n');\n    return $.header(template, {\n        pkg: pkg\n    });\n}\n```\n\n这个函数将`package.json`中的各种信息提取出来，变成头部注释，只要在压缩的pipe中调用`.pipe(getHeader())`即可。\n\n### stream相关\n\n这个部分主要介绍一些跟stream操作有关的插件。\n\n#### [gulp-filter](https://www.npmjs.com/package/gulp-filter)\n\ngulp-filter可以把stream里的文件根据一定的规则进行筛选过滤。比如`gulp.src`中传入匹配符匹配了很多文件，可以把这些文件pipe给gulp-filter作二次筛选，如`gulp.src('**/*.js').pipe($.filter(**/a/*.js))`，本来选中了所有子文件下的js文件，经过筛选后变成名为a的子文件夹下的js文件。那有人要问了，为什么不直接将需要的筛选传入`gulp.src`，干嘛要多筛选一步呢？这里面有两种情况：\n\n* `gulp.src`与`$.filter`中间可能需要别的处理，比如我对所有文件做了操作1以后，还需要筛选出一部分做操作2。\n* 第二种情况就要谈到gulp-filter的另外一个特性：筛选之后还可以restore回去。比如我对所有文件做了操作1，筛选了一部分做操作2，最后要把所有的文件都拷贝到最终的位置。代码如下：\n\n``` javascript\nvar filter = $.filter('**/a/*.js');\ngulp.src('**/*.js')\n    .pipe(action1())\n    .pipe(filter)\n    .pipe(action2())\n    .pipe(filter.restore())\n    .pipe(gulp.dest('dist'))\n```\n\n可以看到，如果没有restore这个操作，那么拷贝到最终位置的文件将只包含被过滤出来的文件，这样一restore，所有的文件都被拷贝了。\n\n#### [gulp-flatten](https://www.npmjs.com/package/gulp-flatten)\n\ngulp-flatten非常实用，可能知道别的库中flatten函数的同学已经猜到它是干嘛的了。比如`gulp.src('**/*.js')`匹配了很多文件，包括`a/b/c.js`，`d/e.js`，`f/g/h/i/j/k.js`，`l.js`，这些文件的层级都不一样，一旦我们将这个文件pipe给`$.flatten()`，则所有的文件夹层级都会去掉，最终的文件将是`c.js`，`e.js`，`k.js`，`l.js`，在一些场景下还是非常有用的。\n\n#### [gulp-plumber](https://www.npmjs.com/package/gulp-plumber)\n\n这个插件的作用简单来说就是一旦pipe中的某一steam报错了，保证下面的steam还继续执行。因为pipe默认的onerror函数会把剩下的stream给unpipe掉，这个插件阻止了这种行为。那它一般用于哪种场景呢？比如，代码每次build之前要跑一遍jshint和jscs来确保所有代码都符合规范，但一旦某些代码不符合规范，整个build流程就会停止，这个时候就需要gulp-plumber出场了。如：\n\n``` javascript\ngulp.task('build', ['jslint', 'xxxx']);\ngulp.task('jslint', function () {\n    return gulp\n        .src(config.js.all)\n        .pipe($.plumber())\n        .pipe($.jshint())\n        .pipe($.jscs()); \n});\n```\n\n这样，一旦jshint或jscs报错，整个build流程还是可以继续走下去的，而且gulp-plumber会给出一个报错提醒我们：\n\n```\n[16:52:36] Plumber found unhandled error:\n Error in plugin 'gulp-jshint'\nMessage:\n    JSHint failed for: xxxx.js\n```\n\n#### [gulp-if](https://www.npmjs.com/package/gulp-if)\n\n这个插件的功能也很简单，可以条件性的添加stream，如`.pipe($.if(flag, action1()))`，则只会在`flag`变量为true时才会将`action1()`添加到stream中去。其实不用这个插件也可以达到类似的效果，那就是gulp-util里有一个函数叫做`noop()`，也就是no operation，这个函数其实是返回一个什么都不干的空stream。利用这个函数我们可以这么写：`.pipe(flag ? action1() : $.util.noop())`，与上例的效果是一样的。\n\n#### [merge-stream](https://www.npmjs.com/package/merge-stream)\n\n一个gulp的task只能返回一个stream，但有的时候有这么一种情景：有两类文件，它们的原始位置和处理后的位置都是不同的，但它们的处理流程相同。由于`gulp.src`和`gulp.dest`的参数不同，我们就需要写两个task来分别完成这个任务，一方面略显重复，另一方面逻辑上来讲这两个task本来就是处理同样的事情的。这种情况就需要merge-stream登场了，它的作用就是将多个stream合成一个返回。比如下面这个例子：\n\n``` javascript\nvar merge = require('merge-stream');\ngulp.task('jade', function () {\n    var stream1 = jade(src1, dest1);\n    var stream2 = jade(src2, dest2);\n    return merge(stream1, stream2);\n});\n\nfunction jade (src, dest) {\n    return gulp\n        .src(src)\n        .pipe($.jade())\n        .pipe(gulp.dest(dest));\n}\n```\n\n可以看到，处理的流程被提取出来放入一个函数，它接受两个参数，分别是src和dest。然后在task中直接调用这个函数生成两个stream，然后返回merge-stream合并后的结果。\n\n#### [run-sequence](https://www.npmjs.com/package/run-sequence)\n\ngulp里的task都是异步并发执行的，有的时候我们需要一连串的task按顺序执行，这时就需要run-sequence登场了。它的调用很简单：`runSequence('task1', 'task2', ['task3', 'task4'], 'task5')`，这里的task都是gulp定义好的task名称，task1完成后才会执行task2，以此类推。注意到task3和task4被放在中括号里了，这表明，task3和task4可以并发执行的，但两个都执行完后才会执行task5。这里要说明的是，每个task要么返回一个stream，即`return gulp.src().pipe().pipe()`，要么支持回调函数，即`gulp.task('task1', function (done) { action1(done); })`，满足了这两点才能保证正常的执行顺序，因为这是gulp对[异步task的基本要求](https://github.com/gulpjs/gulp/blob/master/docs/API.md#async-task-support)。\n\n### inject相关\n\n这个部分主要介绍一些将JS/CSS自动插入到HTML的相关插件。\n\n#### [wiredep](https://www.npmjs.com/package/wiredep)\n\nwiredep就是wire dependence的意思，它的作用就是把`bower.json`中声明的dependence自动的包含到HTML中去。要插入文件，wiredep需要解决两个问题：\n\n* 插入的位置：wiredep通过识别HTML中的注释来识别插入位置，如\n\n``` html\n<!-- bower:css -->\n<!-- endbower -->\n<!-- bower:js -->\n<!-- endbower -->\n```\n\n不同类型的文件被插入到不同的区块。\n\n* 插入什么文件：要插入的文件列表自然来自`bower.json`，每个bower安装的依赖库，根目录下边都有一个自己的`bower.json`文件，其中的`main`字段指明了使用这个库需要包含的文件，wiredep最终包含的文件列表就来自这个字段。有些情况下，库自身的`bower.json`的main字段可能会多包含文件或少包含文件，如果想要定制这个列表，则可以在自己的`bower.json`中使用`overrides`字段，如下面的代码覆盖了`mdi`这个库的`main`字段。\n\n``` javascript\n\"overrides\": {\n  \"mdi\": {\n    \"main\": [\n      \"css/materialdesignicons.css\"\n    ]\n  }\n},\n```\n\nwiredep插件支持很多参数，常用的主要有两个：\n\n* bowerJson：指定`bower.json`的内容，注意这个字段不是`bower.json`文件的位置，这个参数需要使用require后的结果赋值：`require('bower.json')`。\n* directory：指定存放bower安装后的依赖包的路径，通常是bower_components。注意最终插入到HTML中的文件列表的路径是index.html文件相对于本文件夹的相对路径。\n\n使用wiredep也比较简单，直接把它传入到stream中即可，如`gulp.src('index.html').pipe(wiredep(options))`。\n\n#### [gulp-inject](https://www.npmjs.com/package/gulp-inject)\n\n这个插件的作用与wiredep类似，不同的是可以自己任意指定需要插入文件的列表。它同样是利用注释来寻找插入的位置，它识别的默认注释为`<!-- inject:js -->`，但更加智能：\n\n* 支持各种模板语言：可以根据`gulp.src`指定的源文件自动识别注释和插入内容，除了支持HTML外，还支持jade、haml等。若源为jade文件，则识别的注释为`//- inject:js`，插入的内容为：`script(src=\"<filename>.js\")`。\n* 配置非常灵活：\n    * name：默认识别的注释标签格式为`<!-- name:ext -->`，这里的name默认值就是“inject”，而ext的默认值是要插入的文件的扩展名。那么name属性可配置意味着可以添加自定义的插入区块，如`<!-- production:js -->`，这个标签可以只插入生产环境需要包含的JS文件。\n    * starttag和endtag：支持自定义需要识别的注释内容。\n    * addPrefix和addSuffix：支持在插入文件的路径上自定义前缀、后缀。\n    * relative：指定插入文件的路径是否为相对路径。\n    * ingorePath：指定插入文件的路径前面会忽略掉指定的路径。\n    * read：这个参数通常给false，不需要真正的去读取文件。\n\n这个插件的使用场景通常是，我们需要index里有多个区块，比如上面name的例子，只有当为production环境编译的时候才去包含相关的文件。\n\n#### [gulp-useref](https://www.npmjs.com/package/gulp-useref) 与 [gulp-rev](https://www.npmjs.com/package/gulp-rev)、[gulp-rev-replace](https://www.npmjs.com/package/gulp-rev-replace)\n\n这三个工具之所以放在一起讲，是因为它们一般都是一起使用的。它们要解决什么问题呢？通过上面的wiredep也好，gulp-inject也好，插入了一堆JS、CSS文件到HTML中，一旦部署到生产环境，这么多文件必然是要合并压缩的。光是压缩还不够，为了解决缓存问题，每次合并压缩后要给最终的文件加hash，这样每次文件内容一变动，hash也会跟着变动，就不存在浏览器依然使用缓存的老文件的问题。这样得到最终的文件以后，肯定还要将这个文件替换回HTML中去，一大堆的script和link标签替换成最终合并压缩带hash的版本。\n\n前面啰啰嗦嗦的一大堆工作就是这三个插件要解决的问题了。首先，gulp-useref根据注释将HTML中需要合并压缩的区块找出来，对区块内的所有文件进行合并。**注意：它只负责合并，不负责压缩！**所以合并出来的文件我们要自行压缩，压缩以后调用gulp-rev负责在文件名后追加hash。最后调用gulp-rev-replace负责把最终的文件名替换回HTML中去。扯了大半天，还是直接上例子吧。先来看看HTML中的注释：\n\n``` html\n<!-- build:css static/styles/lib.css -->\n<!-- bower:css -->\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css static/styles/app.css -->\n<!-- inject:css -->\n<!-- endinject -->\n<!-- endbuild -->\n\n<!-- build:js static/js/lib.js -->\n<!-- bower:js -->\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:js static/js/app.js -->\n<!-- inject:js -->\n<!-- endinject -->\n<!-- endbuild -->\n```\n\ngulp-useref识别的就是build开头的注释，build后面首先跟的是类型扩展名，然后后面的路径就是build区块中的所有文件进行合并后的文件路径，这个相对路径是相对于这个HTML的路径。上面的例子中我们用build区块把bower和inject进来的文件包起来，这些文件就可以被gulp-useref合并了。再来看gulp中useref相关task的定义：\n\n``` javascript\nvar assets = $.useref.assets({searchPath: 'app/src/'});\n\nvar cssFilter = $.filter('**/*.css');\nvar jsAppFilter = $.filter('**/app.js');\nvar jslibFilter = $.filter('**/lib.js');\n\nreturn gulp\n    .src('index.html')\n    .pipe(assets)\n    .pipe(cssFilter)\n    .pipe($.csso())\n    .pipe(cssFilter.restore())\n    .pipe(jsAppFilter)\n    .pipe($.uglify())\n    .pipe(getHeader())\n    .pipe(jsAppFilter.restore())\n    .pipe(jslibFilter)\n    .pipe($.uglify())\n    .pipe(jslibFilter.restore())\n    .pipe($.rev())\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.revReplace())\n    .pipe(gulp.dest('dist'));\n```\n\n首先一上来，先调用`$.useref.assets()`函数，这个函数返回一个stream，包含已经合并后的文件。可以尝试在第9行后面加上前面介绍过的gulp-print插件`.pipe($.print())`，打印出stream里的文件，发现就是前面HTML中4个build注释块后面的4个文件。注意这里调用的时候跟了一个`searchPath`的参数，它的用处就是指定从哪个路径开始寻找build区块底下的文件。比如build区块底下有这么一行``，那最终gulp-useref将从这个路径`app/src/static/js/a.js`找到这个文件。第3到5行定义了3个filter，这主要是为了后面压缩准备的。下面正式看stream的pipe流程。先选出要处理的HTML文件，然后调用刚才得到的`assets`得到合并后的4个文件，第10到12行筛选出合并后的CSS文件进行压缩（压缩类插件下篇文章再讲），第13到16行筛选出app.js进行压缩，第17到19行筛选出lib.js进行压缩。之所以要区别对待app.js和lib.js，是因为app.js是我们自己写的代码，压缩后要加上header（第15行，使用前面介绍过的gulp-header插件），而lib.js是第三方的各种库，直接压缩即可。后面调用gulp-rev给压缩后的4个文件加hash，然后调用`assets.restore()`将src源换回HTML文件，这是为了后面调用`$.useref()`，因为`$.useref()`做替换的src源是HTML文件，同样后面调用gulp-rev-replace将带hash的文件替换回HTML，它要求的src源也必须是HTML文件。这里的顺序很重要，因为这几个插件接受的源不一样，gulp-rev接受的是JS、CSS文件，而gulp-useref和gulp-rev-replace接受的是HTML。还有一个问题：gulp-rev-replace是怎么知道gulp-rev进行hash前后的文件名对应关系呢？其实gulp-rev会生成一个manifest的文件，内容是类似下面的JSON：\n\n``` javascript\n{\n    \"static/styles/lib.css\": \"static/styles/lib-d41d8cd98f.css\"\n    \"static/js/lib.js\": \"static/js/lib-273c2cin3f.js\"\n}\n```\n\n当然这个文件默认是不会生成在文件系统里的，可以通过`.pipe($.rev.manifest())`将这个文件保存到本地。有了这个文件，gulp-rev-replace甚至可以脱离gulp-rev独立工作哦！\n\n#### [gulp-html-replace](https://www.npmjs.com/package/gulp-html-replace)\n\ngulp-html-replace同样是识别以build开头的注释,与[gulp-useref](https://www.npmjs.com/package/gulp-useref)不同的是不会对build区块中的所有文件进行合并，而是根据配置直接替换掉build区块中的内容下面以一个例子做说明：\n\n\nhtml片段\n```html\n<html>\n    <head>\n        <!-- build:css -->\n        <link href=\"css/one.css\" rel=\"stylesheet\">\n        <link href=\"css/two.css\" rel=\"stylesheet\">\n        <!-- endbuild -->\n    </head>\n    <body>\n        <!-- build:vendorJs -->\n        <script type=\"text/javascript\" src=\"js/one.js\"></script> \n        <script type=\"text/javascript\" src=\"js/two.js\"></script>\n        <!-- endbuild -->\n    </body>\n</html>\n```\n\n相关任务：\n```javascript\n    gulp.src('index.html')\n        .pipe(htmlreplace({\n            'css': 'styles.min.css',\n            'vendorJs': '/js/vendor.js'\n        }))\n        .pipe(gulp.dest('dest/'));\n```\n执行任务后的html片段：\n```html\n<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"styles.min.css\">\n    </head>\n    <body>\n        <script src=\"/js/vendor.js\"></script>\n    </body>\n</html>\n```\n\n很简单，不用再做过多的说明\n\n#### [gulp-file-concat](https://www.npmjs.com/package/gulp-file-concat)\n\n顾名思义，文件合并，这个插件可以合并通过document.write引入的js和通过@import引入的css，下面看一个例子：\nindex.js:\n```javascript\n(function() {\n    document.write('<script src=\"a.js\"><\\/script>');\n    document.write('<script src=\"b.js\"><\\/script>');\n}());\n```\nindex.css:\n```css\n@import url(\"a.css\");\n@import url(\"b.css\");\n```\ngulpfile.js:\n```javascript\nvar gulp = require('gulp');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar ngAnnotate = require('gulp-ng-annotate');\nvar rename = require('gulp-rename');\n\ngulp.task('default', function() {\n  gulp.src('index.js')\n    .pipe(fileconcat({\n        relativeUrls: './'\n    }))\n    .pipe(ngAnnotate())\n    .pipe(uglify())\n    .pipe(rename(function(path){\n        path.basename = 'app';\n        path.extname = '.js'\n    }))\n    .pipe(gulp.dest('build/'));\n\n  gulp.src('index.css')\n      .pipe(fileconcat())\n      .pipe(gulp.dest('build/'));\n});\n```\n\n\n这个一个文件合并的插件，为什么要把这个插件放在这里来介绍，其实我觉得这个可以和[gulp-html-replace](https://www.npmjs.com/package/gulp-html-replace)联合使用，至于怎么用，请细细品味吧\n\n\n### Angular相关\n\n这个部分介绍与Angular相关的一些插件。\n\n#### [gulp-angular-templatecache](https://www.npmjs.com/package/gulp-angular-templatecache)\n\nAngular自带的`$templateCache`服务可以把Angular中用到的所有模板缓存下来，而这个插件的功能就是直接将指定的HTML模板文件以JS字符串的形式注册在`$tempalteCache`服务中，这样所有的模板就会随JS文件直接一次性下载下来。这个插件使用起来也非常简单，gulp.src传入需要缓存的HTML模板文件，然后`.pipe($.angularTemplatecache(filename, options))`即可。其中filename表示生成后的js文件的名字，默认为templates.js，常用的options有：\n\n* `module`：指定希望将这个模板放入哪个Angular的module中。\n* `root`：指定注册后的模板路径前缀。\n\n生成后的文件如下：\n\n``` javascript templates.js\nangular.module(\"module name\").run([$templateCache,\n  function($templateCache) {\n    $templateCache.put(\"template1.html\",\n      // template1.html content (escaped) \n    );\n    $templateCache.put(\"template2.html\",\n      // template2.html content (escaped) \n    );\n    // etc. \n  }\n]);\n```\n\n#### [gulp-ng-annotate](https://www.npmjs.com/package/gulp-ng-annotate)\n\n这个插件是[ng-annotate](https://github.com/olov/ng-annotate)的gulp插件版，它解决的是Angular中依赖注入的小问题。Angular中通过参数名来进行依赖注入，一旦压缩，参数名就会变化导致注入失败，所以官方推荐通过添加字符串进行注入。比如：\n\n``` javascript\nangular\n    .module('app.dashboard')\n    .controller('DashboardController', DashboardController);\n\nDashboardController.$inject = ['userAPI'];\n/* @ngInject */\nfunction DashboardController (userAPI) {}\n```\n\n上面的例子中我们定义了一个叫`DashboardController`的controller，它依赖一个`userAPI`的service。这个插件的作用就是根据第6行的注释`/* @ngInject */`来帮你生成第5行的内容。当然是在你忘记写的情况下，如果你自己写了它不会重复生成。除了这种使用`$inject`赋值的方式，它同样支持inline定义的方式，如\n\n``` javascript\n/* @ngInject */\n.controller('DashboardController', function (userAPI) {});\n```\n\n会生成\n\n``` javascript\n.controller('DashboardController', ['userAPI', function (userAPI) {}]);\n```\n\n它常用的参数就是`{add: true}`，表明仅在不存在的情况下才会进行添加。\n> 推荐在HTML头上使用[ng-strict-di](https://docs.angularjs.org/error/$injector/strictdi)属性，这样即便在不压缩的情况下，一旦你忘记显式的用字符串声明依赖，Angular将立刻报错。\n\n#### [gulp-protractor](https://www.npmjs.com/package/gulp-protractor)\n\nAngular的e2e测试工具[protractor](https://github.com/angular/protractor)的配套插件，可以通过它非常方便的在gulp中调用protractor。有了这玩意，你就不需要手动在gulp中调用protractor的可执行文件，然后处理进程神马的，只要一句简单的`.pipe($.protractor.protractor(options)`即可。常用的options包括：\n\n* `configFile`：即protractor的配置文件路径。\n* `args`：调用protractor时传入的参数，是个数组。最常用的就是指定protractor只跑一个suite了，如`['--suite', 'loginSuite']`，这样protractor只会跑配置文件中定义的loginSuite所包括的spec文件了。\n\n#### [gulp-order](https://www.npmjs.com/package/gulp-order)\n\n这个插件严格来说不是专门给Angular用的，但非常适合用在Angular的场景下。如果你的程序使用的是Angular自带的包管理系统，那么有一个无法避开的问题就是：所有`angular.module`的定义要最先执行，也就是说包含module定义的文件的script标签要在别的文件之前。而我们在使用gulp-inject这类插件将JS文件插入的时候通常都是通过匹配符直接选中一堆文件插入的。这时就需要解决插入的顺序问题，而这个插件就是干这个事的。它通过一个数组参数来指定排序，这个数组包含一组匹配模式，匹配到靠前模式的文件在前，匹配靠后的文件在后。如：\n\n``` javascript\ngulp\n    .src('**/*.js')\n    .pipe($.order([\n        '**/app.module.js',\n        '**/*.module.js',\n        '**/*.js'\n    ]))\n```\n\n这样，定义`app`module的文件就会在最前面，然后是其它各个module的定义，最后是剩余的JS文件。\n\n### 压缩工具类\n\n这个部分介绍对CSS、HTML、JS、图片等资源进行压缩的插件。\n\n#### [gulp-csso](https://www.npmjs.com/package/gulp-csso)\n\n压缩CSS的工具，官方说它比其它工具压得更小，因为它可以重建CSS代码结构信息，不知道什么鬼。\n\n#### [gulp-minify-html](https://www.npmjs.com/package/gulp-minify-html)\n\n压缩HTML的工具，通常在给gulp-angular-templatecache处理前先使用，这样$tempalteCache得到的就是压缩后的HTML字符串了。\n\n#### [gulp-uglify](https://www.npmjs.com/package/gulp-uglify)\n\n压缩JS的工具，这个不多介绍了。\n\n#### [gulp-imagemin](https://www.npmjs.com/package/gulp-imagemin)\n\n压缩图片的工具。在发布到生产环境之前对图片进行压缩是一个非常好的习惯，可以极大的提高页面加载的速度。如果你用[Google PageSpeed](https://developers.google.com/speed/pagespeed/)给网页评过分的话，它可以给出页面上能被继续压缩的图片。使用这个插件可以在保证质量损失很小的情况下压缩图片。\n\n### server相关\n\n这部分介绍与本地起server相关的插件。\n\n#### [browser-sync](https://www.npmjs.com/package/browser-sync)\n\n[Browsersync](http://www.browsersync.io/)应该算是本地起server的标配了吧，最大的特性是可以在不同浏览器之间同步（这也是名字的由来吧），这在测试时非常有用：起server以后根据配置自动打开多个浏览器，你操作一个，其他的浏览器会同步你的操作。另外，它还可以配合gulp的`watch()`函数实现类似live-reload的功能。之所以没有gulp对应的插件，是因为这玩意本来就可以直接require进来使用。支持非常多的参数，一整篇文章也介绍不完，具体可以参考[它的文档](http://www.browsersync.io/docs/options/)。这里要简单介绍的就是server底下的配置，如：\n\n``` javascript\nserver: {\n    baseDir: './app/',\n    index: 'index.html',\n    middleware: [\n        // middleware\n    ]\n}\n```\n\n前两个参数就不多说了，一看就明白意思，重点来看第3个参数`middleware`。middleware就是中间件，类似这样的函数`function (req, res, next){}`。简单来说，一个request请求到达server，会经过middleware数组里面的中间件函数逐个处理，这里就可以在Browsersync层面上定义很多自定义的操作。适用于Node的[connect框架](https://github.com/senchalabs/connect)的中间件都可以在这里使用，下面介绍的两个插件都是可用于Browsersync的中间件。\n\n#### [connect-history-api-fallback](https://www.npmjs.com/package/connect-history-api-fallback)\n\n这个中间件对于像Angular这样的单页面应用来说非常的实用。我们知道，Browsersync默认起来的server是一个静态server，默认是无法支持`$locationProvider.html5Mode(true);`的。使用这个插件可以轻松的达到这一点，如：\n\n``` javascript\nvar historyApiFallback = require('connect-history-api-fallback');\n// ...\nmiddleware: [\n    historyApiFallback()\n]\n```\n\n这样，所有的路由请求都会fallback到index.html处理，这也正是我们想要的。除此之外，这个插件还支持简单的rewrite，如\n\n``` javascript\nhistoryApiFallback({\n  rewrites: [\n    { from: /\\/soccer/, to: '/soccer.html'}\n  ]\n});\n```\n\n可谓是非常方便，更多的rewrite规则可以参考它的文档。\n\n#### [proxy-middleware](https://www.npmjs.com/package/proxy-middleware)\n\n这个中间件其实与上面rewrite的类似，只不过rewrite只是针对get请求，而这个proxy可以代理任何请求。设想这样一个场景，我们起了个本地的server，通常使用[ngMock](https://docs.angularjs.org/api/ngMock)来实现对API的模拟，但有的时候我们希望这个本地的server可以对接真正的API server，而这个中间件可以轻松的完成这一点：将`/api`开头的请求代理到真正的API server上去。它的使用也是非常简单：\n\n``` javascript\nvar proxy = require('proxy-middleware');\nvar proxyOptions = url.parse('https://real-server.com/api');\nproxyOptions.route = '/api';\n// ...\nmiddleware: [\n    proxy(proxyOptions)\n]\n```\n\n这样，所有以`/api`开头的API请求就会被代理到`https://real-server.com/api`上去，如`/api/user/123`请求的真实地址是`https://real-server.com/api/user/123`。\n\n### 特定语言相关\n\n这部分的插件与你选用的具体的语言以及预处理器有关。\n\n#### [gulp-jshint](https://www.npmjs.com/package/gulp-jshint) 与 [gulp-jscs](https://www.npmjs.com/package/gulp-jscs)\n\n大名鼎鼎的[jshint]()和[jscs]()的gulp插件版。这两个插件除了帮你做代码的一些静态检查外，还可以最大程度的帮助你定义所需要的代码风格。尤其是`jscs`，定义的非常细致。比如我们需要`function (a, b) {`，即function关键字后面空一格，参数之间空一格，参数列表后面的小括号与大括号之间空一格。这样的需求通过`jscs`的配置文件可以轻松的实现，具体可以参考其文档。可以将这两个task放在build之前，强制所有人在build代码的时候修改不符合要求的代码风格。我们还尝试过将`gulp jshint jscs`放入git commit的hook中，每次commit的时候自动检查代码风格，如果不符合要求，不准进行commit的操作。\n\n#### [gulp-jade](https://www.npmjs.com/package/gulp-jade)\n\n编译jade模板的插件，这个也不过多介绍。只介绍一个使用jade变量的场景，通常我们的Angular应用的`ng-app`名称在测试(e2e)与非测试时是不一样的，所以可以把这个定义成变量，在编译jade模板时传入。如我们的index.jade的头是这样定义的`html(lang=\"en\", ng-app= app)`，在编译时使用`.pipe($.jade({locals: {app: 'test'}}))`即可指定想要的`ng-app`的名字。\n\n#### [gulp-stylus](https://www.npmjs.com/package/gulp-stylus)\n\n编译stylus的插件，不多说。\n\n#### [gulp-autoprefixer](https://www.npmjs.com/package/gulp-autoprefixer)\n\n这个插件最早在[从做简历中学到的知识](/2014/01/12/what-i-learn-from-making-resume/)这篇文章中就介绍过，只不过当时介绍的是grunt版本，现在时gulp版本。这个插件的基本作用就是让你在书写CSS3的相关属性时不用关心不同浏览器的前缀问题，它会自动帮助添加各种浏览器前缀。\n","source":"_posts/常用gulp插件介绍.md","raw":"---\ntitle: 常用gulp插件介绍\ncategory: 自动管理,gulp\ntags: javascript\ndate: 2016-08-09\nmodifiedOn: 2016-08-19\ntoc: true\n---\n\n这里介绍一些gulp比较常用的插件，包括util工具类、stream相关、inject相关、Angular相关、压缩工具类、server相关、特定语言相关等。\n<!-- more -->\n\n### util工具类\n\n这个分类下主要介绍一些辅助工具类的插件。\n\n#### [gulp-load-plugins](https://www.npmjs.com/package/gulp-load-plugins)\n\n顾名思义，本插件的功能就是帮你自动require你在`package.json`中声明的依赖。只要一句`var $ = require('gulp-load-plugins')()`，则`package.json`中声明的`gulp-`或`gulp.`开头的插件就会自动被放在变量`$`下面。如`$.util`就等于`require('gulp-util')`，而有两个连字符的插件则会自动命名为驼峰格式，如`$.taskListing`则等于`require('gulp-task-listing')`。有了这个插件，就不用一个一个的require了。这个插件还有一些常用的参数配置，这里列几个常用的：\n\n* `lazyload: true`，用到这个插件的时候再去require，默认为true。\n* `rename: {'gulp-task-listing': 'list'}`，如果有些插件名字太长，可以使用该参数重命名。\n* `scope: ['dependencies']`，本插件默认会扫描`package.json`里的所有dependence，可以使用该参数进行限制。\n\n要使用这些参数只要在require的时候传入即可，如`require('gulp-load-plugins')({lazy: true})`。\n\n#### [gulp-task-loader](https://www.npmjs.com/package/gulp-task-loader)\n\n这个插件的作用很简单，就是可以将gulpfile.js拆分成多个文件，放到目录下，是任务更清晰，结构更分明，使用方法如下：\nclear.js\n```javascript\n'use strict';\nvar del = require('del');\n\nmodule.exports = function() {\n    return del.sync(this.opts.destDir);\n};\n```\ncopy.js\n```javascript\n'use strict';\n\nmodule.exports = function() {\n    return this.gulp.src(this.opts.publicDir)\n     .pipe(this.gulp.dest(this.opts.destDir));\n};\nmodule.exports.dependencies = ['clean'];\n```\n\ngulpfile.js\n```javascript\n'use strict';\nvar gulp = require('gulp');\nvar config = {\n    pkg: require('./package.json'),\n    publicDir: ['./{public,public/**}'],\n    destDir: 'dest',\n    version: \"0.01\"\n};\n\nrequire('gulp-task-loader')(config);\ngulp.task('build', ['clean', 'copy');\n\n```\n\n可以看到copy.js中最后有这样一行代码`module.exports.dependencies = ['clean'];`,这个是用做任务依赖的，只有前一个任务执行完毕后才能执行当前任务，使用起来还是很简单的\n\n\n#### [gulp-task-listing](https://www.npmjs.com/package/gulp-task-listing)\n\n这个插件的作用也很容易猜，它可以打印出`gulpfile.js`中定义的所有task，这个插件我们在[重构你的gulpfile](/2015/03/24/refactor-your-gulpfile/)这篇文章的最后介绍过，值得一提的是它还可以根据task的名字确定它是不是一个子task，比如带有`:`、`-`、`_`的task就被认为是子task。我一般把这个插件作为默认的task来调用，如\n\n``` javascript\ngulp.task('default', ['help']);\ngulp.task('help', $.taskListing);\n```\n\n这样，如果只执行`gulp`的话就会打印出所有定义好的task，非常实用。\n\n#### [yargs](https://www.npmjs.com/package/yargs)\n\n严格的说，`yargs`不是专门用于gulp的，它是Node中处理命令行参数的通用解决方案。只要一句代码`var args = require('yargs').argv;`就可以让命令行的参数都放在变量`args`上，非常方便。它可以处理的参数类型也是多种多样的：\n\n* 单字符的简单参数，如传入`-m=5`或`-m 5`，则可得到`args.m = 5`。\n* 多字符参数（必须使用双连字符），如传入`--test=5`或`--test 5`，则可得到`args.test = 5`。\n* 不带值的参数，如传入`--mock`，则会被认为是布尔类型的参数，可得到`args.mock = true`。\n\n除此之外，还支持很多其他类型的传参方式，具体可参考[它的文档](https://www.npmjs.com/package/yargs)。\n\n#### [gulp-util](https://www.npmjs.com/package/gulp-util)\n\ngulp-util带有很多方便的函数，其中最常用的应该就是log了。`$.util.log()`支持传入多个参数，打印结果会将多个参数用空格连接起来。它与`console.log`的区别就是所有`$.util.log`的结果会自动带上时间前缀。另外，它还支持颜色，如`$.util.log($.util.colors.magenta('123'));`打印出来的123是品红色的。其实`$.util.colors`就是一个[chalk](https://github.com/sindresorhus/chalk)的实例，而chalk是专门用来处理命令行打印着色的一个工具。\n\n#### [del](https://www.npmjs.com/package/del)\n\ngrunt自身提供一个[grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean)用来处理支持glob匹配的删除，而del就是gulp上对应的工具。del支持和`gulp.src`参数同样的匹配，除此之外，它的第二个参数还支持一个回调函数，当删除完成以后执行，所以这是一个异步的删除。常用的调用方法为：`del([xxx], callback)`。\n\n#### [gulp-bytediff](https://www.npmjs.com/package/gulp-bytediff)\n\n这是一个统计文件大小变化的工具，通常与压缩类工具放在一起实用，比如\n\n``` javascript\ngulp.src('**/*.html')\n    .pipe($.bytediff.start())\n    .pipe($.minifyHtml({empty: true}))\n    .pipe($.bytediff.stop(bytediffFormatter))\n    .pipe(gulp.dest('dist'));\n\nfunction bytediffFormatter (data) {\n    var difference = (data.savings > 0) ? ' smaller.' : ' larger.';\n    return data.fileName + ' went from ' +\n        (data.startSize / 1000).toFixed(2) + ' kB to ' +\n        (data.endSize / 1000).toFixed(2) + ' kB and is ' +\n        formatPercent(1 - data.percent, 2) + '%' + difference;\n}\n```\n\n在压缩的pipe前后加上`$.bytediff.start()`和`$.bytediff.stop(callback)`，即可统计压缩前后文件的变化。在callback中传入的参数data上，可以访问到很多变量，如文件名，变化前后的大小，变化百分比等等。\n\n#### [gulp-print](https://www.npmjs.com/package/gulp-print)\n\n这个插件的作用很简单，打印出stream里面的所有文件名，通常调试的时候比较需要。\n\n#### [gulp-bump](https://www.npmjs.com/package/gulp-bump)\n\n这个插件也可以顾名思义：用来升级版本用的，废话不说，直接看例子吧：\n\n``` javascript\nreturn gulp\n    .src('package.json')\n    .pipe($.bump(options))\n    .pipe(gulp.dest('dist'));\n```\n\n重点来看这里的options，我们可直接传递一个具体的version进去，也可以按照Node的版本规范传递一个type进去，让其自己生成对应的version：\n\n* `version`，直接传递要升级到的版本号，如`1.2.3`。\n* `type`，可接受的值包括下面四个，倘若现在的版本号为`1.2.3`，则对应的新版本号为：\n    * prerelease：`1.2.3-0`\n    * patch：`1.2.4`\n    * minor：`1.3.0`\n    * major：`2.0.0`\n\n最终这个升级后的版本号会反映在`package.json`中，当然，你也可以在gulp.src中传入更多的文件（如`bower.json`）来替换更多的文件。\n\n#### [gulp-header](https://www.npmjs.com/package/gulp-header)\n\n这个工具用来在压缩后的JS、CSS文件中添加头部注释，你可以包含任意想要的信息，通常就是作者、描述、版本号、license等，比如：\n\n``` javascript\nfunction getHeader () {\n    var pkg = require('package.json');\n    var template = ['/**',\n        ' * <%= pkg.name %> - <%= pkg.description %>',\n        ' * @authors <%= pkg.authors %>',\n        ' * @version v<%= pkg.version %>',\n        ' * @link <%= pkg.homepage %>',\n        ' * @license <%= pkg.license %>',\n        ' */',\n        ''\n    ].join('\\n');\n    return $.header(template, {\n        pkg: pkg\n    });\n}\n```\n\n这个函数将`package.json`中的各种信息提取出来，变成头部注释，只要在压缩的pipe中调用`.pipe(getHeader())`即可。\n\n### stream相关\n\n这个部分主要介绍一些跟stream操作有关的插件。\n\n#### [gulp-filter](https://www.npmjs.com/package/gulp-filter)\n\ngulp-filter可以把stream里的文件根据一定的规则进行筛选过滤。比如`gulp.src`中传入匹配符匹配了很多文件，可以把这些文件pipe给gulp-filter作二次筛选，如`gulp.src('**/*.js').pipe($.filter(**/a/*.js))`，本来选中了所有子文件下的js文件，经过筛选后变成名为a的子文件夹下的js文件。那有人要问了，为什么不直接将需要的筛选传入`gulp.src`，干嘛要多筛选一步呢？这里面有两种情况：\n\n* `gulp.src`与`$.filter`中间可能需要别的处理，比如我对所有文件做了操作1以后，还需要筛选出一部分做操作2。\n* 第二种情况就要谈到gulp-filter的另外一个特性：筛选之后还可以restore回去。比如我对所有文件做了操作1，筛选了一部分做操作2，最后要把所有的文件都拷贝到最终的位置。代码如下：\n\n``` javascript\nvar filter = $.filter('**/a/*.js');\ngulp.src('**/*.js')\n    .pipe(action1())\n    .pipe(filter)\n    .pipe(action2())\n    .pipe(filter.restore())\n    .pipe(gulp.dest('dist'))\n```\n\n可以看到，如果没有restore这个操作，那么拷贝到最终位置的文件将只包含被过滤出来的文件，这样一restore，所有的文件都被拷贝了。\n\n#### [gulp-flatten](https://www.npmjs.com/package/gulp-flatten)\n\ngulp-flatten非常实用，可能知道别的库中flatten函数的同学已经猜到它是干嘛的了。比如`gulp.src('**/*.js')`匹配了很多文件，包括`a/b/c.js`，`d/e.js`，`f/g/h/i/j/k.js`，`l.js`，这些文件的层级都不一样，一旦我们将这个文件pipe给`$.flatten()`，则所有的文件夹层级都会去掉，最终的文件将是`c.js`，`e.js`，`k.js`，`l.js`，在一些场景下还是非常有用的。\n\n#### [gulp-plumber](https://www.npmjs.com/package/gulp-plumber)\n\n这个插件的作用简单来说就是一旦pipe中的某一steam报错了，保证下面的steam还继续执行。因为pipe默认的onerror函数会把剩下的stream给unpipe掉，这个插件阻止了这种行为。那它一般用于哪种场景呢？比如，代码每次build之前要跑一遍jshint和jscs来确保所有代码都符合规范，但一旦某些代码不符合规范，整个build流程就会停止，这个时候就需要gulp-plumber出场了。如：\n\n``` javascript\ngulp.task('build', ['jslint', 'xxxx']);\ngulp.task('jslint', function () {\n    return gulp\n        .src(config.js.all)\n        .pipe($.plumber())\n        .pipe($.jshint())\n        .pipe($.jscs()); \n});\n```\n\n这样，一旦jshint或jscs报错，整个build流程还是可以继续走下去的，而且gulp-plumber会给出一个报错提醒我们：\n\n```\n[16:52:36] Plumber found unhandled error:\n Error in plugin 'gulp-jshint'\nMessage:\n    JSHint failed for: xxxx.js\n```\n\n#### [gulp-if](https://www.npmjs.com/package/gulp-if)\n\n这个插件的功能也很简单，可以条件性的添加stream，如`.pipe($.if(flag, action1()))`，则只会在`flag`变量为true时才会将`action1()`添加到stream中去。其实不用这个插件也可以达到类似的效果，那就是gulp-util里有一个函数叫做`noop()`，也就是no operation，这个函数其实是返回一个什么都不干的空stream。利用这个函数我们可以这么写：`.pipe(flag ? action1() : $.util.noop())`，与上例的效果是一样的。\n\n#### [merge-stream](https://www.npmjs.com/package/merge-stream)\n\n一个gulp的task只能返回一个stream，但有的时候有这么一种情景：有两类文件，它们的原始位置和处理后的位置都是不同的，但它们的处理流程相同。由于`gulp.src`和`gulp.dest`的参数不同，我们就需要写两个task来分别完成这个任务，一方面略显重复，另一方面逻辑上来讲这两个task本来就是处理同样的事情的。这种情况就需要merge-stream登场了，它的作用就是将多个stream合成一个返回。比如下面这个例子：\n\n``` javascript\nvar merge = require('merge-stream');\ngulp.task('jade', function () {\n    var stream1 = jade(src1, dest1);\n    var stream2 = jade(src2, dest2);\n    return merge(stream1, stream2);\n});\n\nfunction jade (src, dest) {\n    return gulp\n        .src(src)\n        .pipe($.jade())\n        .pipe(gulp.dest(dest));\n}\n```\n\n可以看到，处理的流程被提取出来放入一个函数，它接受两个参数，分别是src和dest。然后在task中直接调用这个函数生成两个stream，然后返回merge-stream合并后的结果。\n\n#### [run-sequence](https://www.npmjs.com/package/run-sequence)\n\ngulp里的task都是异步并发执行的，有的时候我们需要一连串的task按顺序执行，这时就需要run-sequence登场了。它的调用很简单：`runSequence('task1', 'task2', ['task3', 'task4'], 'task5')`，这里的task都是gulp定义好的task名称，task1完成后才会执行task2，以此类推。注意到task3和task4被放在中括号里了，这表明，task3和task4可以并发执行的，但两个都执行完后才会执行task5。这里要说明的是，每个task要么返回一个stream，即`return gulp.src().pipe().pipe()`，要么支持回调函数，即`gulp.task('task1', function (done) { action1(done); })`，满足了这两点才能保证正常的执行顺序，因为这是gulp对[异步task的基本要求](https://github.com/gulpjs/gulp/blob/master/docs/API.md#async-task-support)。\n\n### inject相关\n\n这个部分主要介绍一些将JS/CSS自动插入到HTML的相关插件。\n\n#### [wiredep](https://www.npmjs.com/package/wiredep)\n\nwiredep就是wire dependence的意思，它的作用就是把`bower.json`中声明的dependence自动的包含到HTML中去。要插入文件，wiredep需要解决两个问题：\n\n* 插入的位置：wiredep通过识别HTML中的注释来识别插入位置，如\n\n``` html\n<!-- bower:css -->\n<!-- endbower -->\n<!-- bower:js -->\n<!-- endbower -->\n```\n\n不同类型的文件被插入到不同的区块。\n\n* 插入什么文件：要插入的文件列表自然来自`bower.json`，每个bower安装的依赖库，根目录下边都有一个自己的`bower.json`文件，其中的`main`字段指明了使用这个库需要包含的文件，wiredep最终包含的文件列表就来自这个字段。有些情况下，库自身的`bower.json`的main字段可能会多包含文件或少包含文件，如果想要定制这个列表，则可以在自己的`bower.json`中使用`overrides`字段，如下面的代码覆盖了`mdi`这个库的`main`字段。\n\n``` javascript\n\"overrides\": {\n  \"mdi\": {\n    \"main\": [\n      \"css/materialdesignicons.css\"\n    ]\n  }\n},\n```\n\nwiredep插件支持很多参数，常用的主要有两个：\n\n* bowerJson：指定`bower.json`的内容，注意这个字段不是`bower.json`文件的位置，这个参数需要使用require后的结果赋值：`require('bower.json')`。\n* directory：指定存放bower安装后的依赖包的路径，通常是bower_components。注意最终插入到HTML中的文件列表的路径是index.html文件相对于本文件夹的相对路径。\n\n使用wiredep也比较简单，直接把它传入到stream中即可，如`gulp.src('index.html').pipe(wiredep(options))`。\n\n#### [gulp-inject](https://www.npmjs.com/package/gulp-inject)\n\n这个插件的作用与wiredep类似，不同的是可以自己任意指定需要插入文件的列表。它同样是利用注释来寻找插入的位置，它识别的默认注释为`<!-- inject:js -->`，但更加智能：\n\n* 支持各种模板语言：可以根据`gulp.src`指定的源文件自动识别注释和插入内容，除了支持HTML外，还支持jade、haml等。若源为jade文件，则识别的注释为`//- inject:js`，插入的内容为：`script(src=\"<filename>.js\")`。\n* 配置非常灵活：\n    * name：默认识别的注释标签格式为`<!-- name:ext -->`，这里的name默认值就是“inject”，而ext的默认值是要插入的文件的扩展名。那么name属性可配置意味着可以添加自定义的插入区块，如`<!-- production:js -->`，这个标签可以只插入生产环境需要包含的JS文件。\n    * starttag和endtag：支持自定义需要识别的注释内容。\n    * addPrefix和addSuffix：支持在插入文件的路径上自定义前缀、后缀。\n    * relative：指定插入文件的路径是否为相对路径。\n    * ingorePath：指定插入文件的路径前面会忽略掉指定的路径。\n    * read：这个参数通常给false，不需要真正的去读取文件。\n\n这个插件的使用场景通常是，我们需要index里有多个区块，比如上面name的例子，只有当为production环境编译的时候才去包含相关的文件。\n\n#### [gulp-useref](https://www.npmjs.com/package/gulp-useref) 与 [gulp-rev](https://www.npmjs.com/package/gulp-rev)、[gulp-rev-replace](https://www.npmjs.com/package/gulp-rev-replace)\n\n这三个工具之所以放在一起讲，是因为它们一般都是一起使用的。它们要解决什么问题呢？通过上面的wiredep也好，gulp-inject也好，插入了一堆JS、CSS文件到HTML中，一旦部署到生产环境，这么多文件必然是要合并压缩的。光是压缩还不够，为了解决缓存问题，每次合并压缩后要给最终的文件加hash，这样每次文件内容一变动，hash也会跟着变动，就不存在浏览器依然使用缓存的老文件的问题。这样得到最终的文件以后，肯定还要将这个文件替换回HTML中去，一大堆的script和link标签替换成最终合并压缩带hash的版本。\n\n前面啰啰嗦嗦的一大堆工作就是这三个插件要解决的问题了。首先，gulp-useref根据注释将HTML中需要合并压缩的区块找出来，对区块内的所有文件进行合并。**注意：它只负责合并，不负责压缩！**所以合并出来的文件我们要自行压缩，压缩以后调用gulp-rev负责在文件名后追加hash。最后调用gulp-rev-replace负责把最终的文件名替换回HTML中去。扯了大半天，还是直接上例子吧。先来看看HTML中的注释：\n\n``` html\n<!-- build:css static/styles/lib.css -->\n<!-- bower:css -->\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:css static/styles/app.css -->\n<!-- inject:css -->\n<!-- endinject -->\n<!-- endbuild -->\n\n<!-- build:js static/js/lib.js -->\n<!-- bower:js -->\n<!-- endbower -->\n<!-- endbuild -->\n\n<!-- build:js static/js/app.js -->\n<!-- inject:js -->\n<!-- endinject -->\n<!-- endbuild -->\n```\n\ngulp-useref识别的就是build开头的注释，build后面首先跟的是类型扩展名，然后后面的路径就是build区块中的所有文件进行合并后的文件路径，这个相对路径是相对于这个HTML的路径。上面的例子中我们用build区块把bower和inject进来的文件包起来，这些文件就可以被gulp-useref合并了。再来看gulp中useref相关task的定义：\n\n``` javascript\nvar assets = $.useref.assets({searchPath: 'app/src/'});\n\nvar cssFilter = $.filter('**/*.css');\nvar jsAppFilter = $.filter('**/app.js');\nvar jslibFilter = $.filter('**/lib.js');\n\nreturn gulp\n    .src('index.html')\n    .pipe(assets)\n    .pipe(cssFilter)\n    .pipe($.csso())\n    .pipe(cssFilter.restore())\n    .pipe(jsAppFilter)\n    .pipe($.uglify())\n    .pipe(getHeader())\n    .pipe(jsAppFilter.restore())\n    .pipe(jslibFilter)\n    .pipe($.uglify())\n    .pipe(jslibFilter.restore())\n    .pipe($.rev())\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe($.revReplace())\n    .pipe(gulp.dest('dist'));\n```\n\n首先一上来，先调用`$.useref.assets()`函数，这个函数返回一个stream，包含已经合并后的文件。可以尝试在第9行后面加上前面介绍过的gulp-print插件`.pipe($.print())`，打印出stream里的文件，发现就是前面HTML中4个build注释块后面的4个文件。注意这里调用的时候跟了一个`searchPath`的参数，它的用处就是指定从哪个路径开始寻找build区块底下的文件。比如build区块底下有这么一行``，那最终gulp-useref将从这个路径`app/src/static/js/a.js`找到这个文件。第3到5行定义了3个filter，这主要是为了后面压缩准备的。下面正式看stream的pipe流程。先选出要处理的HTML文件，然后调用刚才得到的`assets`得到合并后的4个文件，第10到12行筛选出合并后的CSS文件进行压缩（压缩类插件下篇文章再讲），第13到16行筛选出app.js进行压缩，第17到19行筛选出lib.js进行压缩。之所以要区别对待app.js和lib.js，是因为app.js是我们自己写的代码，压缩后要加上header（第15行，使用前面介绍过的gulp-header插件），而lib.js是第三方的各种库，直接压缩即可。后面调用gulp-rev给压缩后的4个文件加hash，然后调用`assets.restore()`将src源换回HTML文件，这是为了后面调用`$.useref()`，因为`$.useref()`做替换的src源是HTML文件，同样后面调用gulp-rev-replace将带hash的文件替换回HTML，它要求的src源也必须是HTML文件。这里的顺序很重要，因为这几个插件接受的源不一样，gulp-rev接受的是JS、CSS文件，而gulp-useref和gulp-rev-replace接受的是HTML。还有一个问题：gulp-rev-replace是怎么知道gulp-rev进行hash前后的文件名对应关系呢？其实gulp-rev会生成一个manifest的文件，内容是类似下面的JSON：\n\n``` javascript\n{\n    \"static/styles/lib.css\": \"static/styles/lib-d41d8cd98f.css\"\n    \"static/js/lib.js\": \"static/js/lib-273c2cin3f.js\"\n}\n```\n\n当然这个文件默认是不会生成在文件系统里的，可以通过`.pipe($.rev.manifest())`将这个文件保存到本地。有了这个文件，gulp-rev-replace甚至可以脱离gulp-rev独立工作哦！\n\n#### [gulp-html-replace](https://www.npmjs.com/package/gulp-html-replace)\n\ngulp-html-replace同样是识别以build开头的注释,与[gulp-useref](https://www.npmjs.com/package/gulp-useref)不同的是不会对build区块中的所有文件进行合并，而是根据配置直接替换掉build区块中的内容下面以一个例子做说明：\n\n\nhtml片段\n```html\n<html>\n    <head>\n        <!-- build:css -->\n        <link href=\"css/one.css\" rel=\"stylesheet\">\n        <link href=\"css/two.css\" rel=\"stylesheet\">\n        <!-- endbuild -->\n    </head>\n    <body>\n        <!-- build:vendorJs -->\n        <script type=\"text/javascript\" src=\"js/one.js\"></script> \n        <script type=\"text/javascript\" src=\"js/two.js\"></script>\n        <!-- endbuild -->\n    </body>\n</html>\n```\n\n相关任务：\n```javascript\n    gulp.src('index.html')\n        .pipe(htmlreplace({\n            'css': 'styles.min.css',\n            'vendorJs': '/js/vendor.js'\n        }))\n        .pipe(gulp.dest('dest/'));\n```\n执行任务后的html片段：\n```html\n<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"styles.min.css\">\n    </head>\n    <body>\n        <script src=\"/js/vendor.js\"></script>\n    </body>\n</html>\n```\n\n很简单，不用再做过多的说明\n\n#### [gulp-file-concat](https://www.npmjs.com/package/gulp-file-concat)\n\n顾名思义，文件合并，这个插件可以合并通过document.write引入的js和通过@import引入的css，下面看一个例子：\nindex.js:\n```javascript\n(function() {\n    document.write('<script src=\"a.js\"><\\/script>');\n    document.write('<script src=\"b.js\"><\\/script>');\n}());\n```\nindex.css:\n```css\n@import url(\"a.css\");\n@import url(\"b.css\");\n```\ngulpfile.js:\n```javascript\nvar gulp = require('gulp');\nvar fileconcat = require('gulp-file-concat');\nvar uglify = require('gulp-uglify');\nvar ngAnnotate = require('gulp-ng-annotate');\nvar rename = require('gulp-rename');\n\ngulp.task('default', function() {\n  gulp.src('index.js')\n    .pipe(fileconcat({\n        relativeUrls: './'\n    }))\n    .pipe(ngAnnotate())\n    .pipe(uglify())\n    .pipe(rename(function(path){\n        path.basename = 'app';\n        path.extname = '.js'\n    }))\n    .pipe(gulp.dest('build/'));\n\n  gulp.src('index.css')\n      .pipe(fileconcat())\n      .pipe(gulp.dest('build/'));\n});\n```\n\n\n这个一个文件合并的插件，为什么要把这个插件放在这里来介绍，其实我觉得这个可以和[gulp-html-replace](https://www.npmjs.com/package/gulp-html-replace)联合使用，至于怎么用，请细细品味吧\n\n\n### Angular相关\n\n这个部分介绍与Angular相关的一些插件。\n\n#### [gulp-angular-templatecache](https://www.npmjs.com/package/gulp-angular-templatecache)\n\nAngular自带的`$templateCache`服务可以把Angular中用到的所有模板缓存下来，而这个插件的功能就是直接将指定的HTML模板文件以JS字符串的形式注册在`$tempalteCache`服务中，这样所有的模板就会随JS文件直接一次性下载下来。这个插件使用起来也非常简单，gulp.src传入需要缓存的HTML模板文件，然后`.pipe($.angularTemplatecache(filename, options))`即可。其中filename表示生成后的js文件的名字，默认为templates.js，常用的options有：\n\n* `module`：指定希望将这个模板放入哪个Angular的module中。\n* `root`：指定注册后的模板路径前缀。\n\n生成后的文件如下：\n\n``` javascript templates.js\nangular.module(\"module name\").run([$templateCache,\n  function($templateCache) {\n    $templateCache.put(\"template1.html\",\n      // template1.html content (escaped) \n    );\n    $templateCache.put(\"template2.html\",\n      // template2.html content (escaped) \n    );\n    // etc. \n  }\n]);\n```\n\n#### [gulp-ng-annotate](https://www.npmjs.com/package/gulp-ng-annotate)\n\n这个插件是[ng-annotate](https://github.com/olov/ng-annotate)的gulp插件版，它解决的是Angular中依赖注入的小问题。Angular中通过参数名来进行依赖注入，一旦压缩，参数名就会变化导致注入失败，所以官方推荐通过添加字符串进行注入。比如：\n\n``` javascript\nangular\n    .module('app.dashboard')\n    .controller('DashboardController', DashboardController);\n\nDashboardController.$inject = ['userAPI'];\n/* @ngInject */\nfunction DashboardController (userAPI) {}\n```\n\n上面的例子中我们定义了一个叫`DashboardController`的controller，它依赖一个`userAPI`的service。这个插件的作用就是根据第6行的注释`/* @ngInject */`来帮你生成第5行的内容。当然是在你忘记写的情况下，如果你自己写了它不会重复生成。除了这种使用`$inject`赋值的方式，它同样支持inline定义的方式，如\n\n``` javascript\n/* @ngInject */\n.controller('DashboardController', function (userAPI) {});\n```\n\n会生成\n\n``` javascript\n.controller('DashboardController', ['userAPI', function (userAPI) {}]);\n```\n\n它常用的参数就是`{add: true}`，表明仅在不存在的情况下才会进行添加。\n> 推荐在HTML头上使用[ng-strict-di](https://docs.angularjs.org/error/$injector/strictdi)属性，这样即便在不压缩的情况下，一旦你忘记显式的用字符串声明依赖，Angular将立刻报错。\n\n#### [gulp-protractor](https://www.npmjs.com/package/gulp-protractor)\n\nAngular的e2e测试工具[protractor](https://github.com/angular/protractor)的配套插件，可以通过它非常方便的在gulp中调用protractor。有了这玩意，你就不需要手动在gulp中调用protractor的可执行文件，然后处理进程神马的，只要一句简单的`.pipe($.protractor.protractor(options)`即可。常用的options包括：\n\n* `configFile`：即protractor的配置文件路径。\n* `args`：调用protractor时传入的参数，是个数组。最常用的就是指定protractor只跑一个suite了，如`['--suite', 'loginSuite']`，这样protractor只会跑配置文件中定义的loginSuite所包括的spec文件了。\n\n#### [gulp-order](https://www.npmjs.com/package/gulp-order)\n\n这个插件严格来说不是专门给Angular用的，但非常适合用在Angular的场景下。如果你的程序使用的是Angular自带的包管理系统，那么有一个无法避开的问题就是：所有`angular.module`的定义要最先执行，也就是说包含module定义的文件的script标签要在别的文件之前。而我们在使用gulp-inject这类插件将JS文件插入的时候通常都是通过匹配符直接选中一堆文件插入的。这时就需要解决插入的顺序问题，而这个插件就是干这个事的。它通过一个数组参数来指定排序，这个数组包含一组匹配模式，匹配到靠前模式的文件在前，匹配靠后的文件在后。如：\n\n``` javascript\ngulp\n    .src('**/*.js')\n    .pipe($.order([\n        '**/app.module.js',\n        '**/*.module.js',\n        '**/*.js'\n    ]))\n```\n\n这样，定义`app`module的文件就会在最前面，然后是其它各个module的定义，最后是剩余的JS文件。\n\n### 压缩工具类\n\n这个部分介绍对CSS、HTML、JS、图片等资源进行压缩的插件。\n\n#### [gulp-csso](https://www.npmjs.com/package/gulp-csso)\n\n压缩CSS的工具，官方说它比其它工具压得更小，因为它可以重建CSS代码结构信息，不知道什么鬼。\n\n#### [gulp-minify-html](https://www.npmjs.com/package/gulp-minify-html)\n\n压缩HTML的工具，通常在给gulp-angular-templatecache处理前先使用，这样$tempalteCache得到的就是压缩后的HTML字符串了。\n\n#### [gulp-uglify](https://www.npmjs.com/package/gulp-uglify)\n\n压缩JS的工具，这个不多介绍了。\n\n#### [gulp-imagemin](https://www.npmjs.com/package/gulp-imagemin)\n\n压缩图片的工具。在发布到生产环境之前对图片进行压缩是一个非常好的习惯，可以极大的提高页面加载的速度。如果你用[Google PageSpeed](https://developers.google.com/speed/pagespeed/)给网页评过分的话，它可以给出页面上能被继续压缩的图片。使用这个插件可以在保证质量损失很小的情况下压缩图片。\n\n### server相关\n\n这部分介绍与本地起server相关的插件。\n\n#### [browser-sync](https://www.npmjs.com/package/browser-sync)\n\n[Browsersync](http://www.browsersync.io/)应该算是本地起server的标配了吧，最大的特性是可以在不同浏览器之间同步（这也是名字的由来吧），这在测试时非常有用：起server以后根据配置自动打开多个浏览器，你操作一个，其他的浏览器会同步你的操作。另外，它还可以配合gulp的`watch()`函数实现类似live-reload的功能。之所以没有gulp对应的插件，是因为这玩意本来就可以直接require进来使用。支持非常多的参数，一整篇文章也介绍不完，具体可以参考[它的文档](http://www.browsersync.io/docs/options/)。这里要简单介绍的就是server底下的配置，如：\n\n``` javascript\nserver: {\n    baseDir: './app/',\n    index: 'index.html',\n    middleware: [\n        // middleware\n    ]\n}\n```\n\n前两个参数就不多说了，一看就明白意思，重点来看第3个参数`middleware`。middleware就是中间件，类似这样的函数`function (req, res, next){}`。简单来说，一个request请求到达server，会经过middleware数组里面的中间件函数逐个处理，这里就可以在Browsersync层面上定义很多自定义的操作。适用于Node的[connect框架](https://github.com/senchalabs/connect)的中间件都可以在这里使用，下面介绍的两个插件都是可用于Browsersync的中间件。\n\n#### [connect-history-api-fallback](https://www.npmjs.com/package/connect-history-api-fallback)\n\n这个中间件对于像Angular这样的单页面应用来说非常的实用。我们知道，Browsersync默认起来的server是一个静态server，默认是无法支持`$locationProvider.html5Mode(true);`的。使用这个插件可以轻松的达到这一点，如：\n\n``` javascript\nvar historyApiFallback = require('connect-history-api-fallback');\n// ...\nmiddleware: [\n    historyApiFallback()\n]\n```\n\n这样，所有的路由请求都会fallback到index.html处理，这也正是我们想要的。除此之外，这个插件还支持简单的rewrite，如\n\n``` javascript\nhistoryApiFallback({\n  rewrites: [\n    { from: /\\/soccer/, to: '/soccer.html'}\n  ]\n});\n```\n\n可谓是非常方便，更多的rewrite规则可以参考它的文档。\n\n#### [proxy-middleware](https://www.npmjs.com/package/proxy-middleware)\n\n这个中间件其实与上面rewrite的类似，只不过rewrite只是针对get请求，而这个proxy可以代理任何请求。设想这样一个场景，我们起了个本地的server，通常使用[ngMock](https://docs.angularjs.org/api/ngMock)来实现对API的模拟，但有的时候我们希望这个本地的server可以对接真正的API server，而这个中间件可以轻松的完成这一点：将`/api`开头的请求代理到真正的API server上去。它的使用也是非常简单：\n\n``` javascript\nvar proxy = require('proxy-middleware');\nvar proxyOptions = url.parse('https://real-server.com/api');\nproxyOptions.route = '/api';\n// ...\nmiddleware: [\n    proxy(proxyOptions)\n]\n```\n\n这样，所有以`/api`开头的API请求就会被代理到`https://real-server.com/api`上去，如`/api/user/123`请求的真实地址是`https://real-server.com/api/user/123`。\n\n### 特定语言相关\n\n这部分的插件与你选用的具体的语言以及预处理器有关。\n\n#### [gulp-jshint](https://www.npmjs.com/package/gulp-jshint) 与 [gulp-jscs](https://www.npmjs.com/package/gulp-jscs)\n\n大名鼎鼎的[jshint]()和[jscs]()的gulp插件版。这两个插件除了帮你做代码的一些静态检查外，还可以最大程度的帮助你定义所需要的代码风格。尤其是`jscs`，定义的非常细致。比如我们需要`function (a, b) {`，即function关键字后面空一格，参数之间空一格，参数列表后面的小括号与大括号之间空一格。这样的需求通过`jscs`的配置文件可以轻松的实现，具体可以参考其文档。可以将这两个task放在build之前，强制所有人在build代码的时候修改不符合要求的代码风格。我们还尝试过将`gulp jshint jscs`放入git commit的hook中，每次commit的时候自动检查代码风格，如果不符合要求，不准进行commit的操作。\n\n#### [gulp-jade](https://www.npmjs.com/package/gulp-jade)\n\n编译jade模板的插件，这个也不过多介绍。只介绍一个使用jade变量的场景，通常我们的Angular应用的`ng-app`名称在测试(e2e)与非测试时是不一样的，所以可以把这个定义成变量，在编译jade模板时传入。如我们的index.jade的头是这样定义的`html(lang=\"en\", ng-app= app)`，在编译时使用`.pipe($.jade({locals: {app: 'test'}}))`即可指定想要的`ng-app`的名字。\n\n#### [gulp-stylus](https://www.npmjs.com/package/gulp-stylus)\n\n编译stylus的插件，不多说。\n\n#### [gulp-autoprefixer](https://www.npmjs.com/package/gulp-autoprefixer)\n\n这个插件最早在[从做简历中学到的知识](/2014/01/12/what-i-learn-from-making-resume/)这篇文章中就介绍过，只不过当时介绍的是grunt版本，现在时gulp版本。这个插件的基本作用就是让你在书写CSS3的相关属性时不用关心不同浏览器的前缀问题，它会自动帮助添加各种浏览器前缀。\n","slug":"常用gulp插件介绍","published":1,"updated":"2016-08-21T12:31:56.464Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vs00101ov68il7cnkk","content":"<p>&#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;gulp&#x6BD4;&#x8F83;&#x5E38;&#x7528;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;util&#x5DE5;&#x5177;&#x7C7B;&#x3001;stream&#x76F8;&#x5173;&#x3001;inject&#x76F8;&#x5173;&#x3001;Angular&#x76F8;&#x5173;&#x3001;&#x538B;&#x7F29;&#x5DE5;&#x5177;&#x7C7B;&#x3001;server&#x76F8;&#x5173;&#x3001;&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x76F8;&#x5173;&#x7B49;&#x3002;<br><a id=\"more\"></a></p>\n<h3 id=\"util&#x5DE5;&#x5177;&#x7C7B;\"><a href=\"#util&#x5DE5;&#x5177;&#x7C7B;\" class=\"headerlink\" title=\"util&#x5DE5;&#x5177;&#x7C7B;\"></a>util&#x5DE5;&#x5177;&#x7C7B;</h3><p>&#x8FD9;&#x4E2A;&#x5206;&#x7C7B;&#x4E0B;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;&#x8F85;&#x52A9;&#x5DE5;&#x5177;&#x7C7B;&#x7684;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-load-plugins\"><a href=\"#gulp-load-plugins\" class=\"headerlink\" title=\"gulp-load-plugins\"></a><a href=\"https://www.npmjs.com/package/gulp-load-plugins\" target=\"_blank\" rel=\"external\">gulp-load-plugins</a></h4><p>&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x672C;&#x63D2;&#x4EF6;&#x7684;&#x529F;&#x80FD;&#x5C31;&#x662F;&#x5E2E;&#x4F60;&#x81EA;&#x52A8;require&#x4F60;&#x5728;<code>package.json</code>&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x4F9D;&#x8D56;&#x3002;&#x53EA;&#x8981;&#x4E00;&#x53E5;<code>var $ = require(&apos;gulp-load-plugins&apos;)()</code>&#xFF0C;&#x5219;<code>package.json</code>&#x4E2D;&#x58F0;&#x660E;&#x7684;<code>gulp-</code>&#x6216;<code>gulp.</code>&#x5F00;&#x5934;&#x7684;&#x63D2;&#x4EF6;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x88AB;&#x653E;&#x5728;&#x53D8;&#x91CF;<code>$</code>&#x4E0B;&#x9762;&#x3002;&#x5982;<code>$.util</code>&#x5C31;&#x7B49;&#x4E8E;<code>require(&apos;gulp-util&apos;)</code>&#xFF0C;&#x800C;&#x6709;&#x4E24;&#x4E2A;&#x8FDE;&#x5B57;&#x7B26;&#x7684;&#x63D2;&#x4EF6;&#x5219;&#x4F1A;&#x81EA;&#x52A8;&#x547D;&#x540D;&#x4E3A;&#x9A7C;&#x5CF0;&#x683C;&#x5F0F;&#xFF0C;&#x5982;<code>$.taskListing</code>&#x5219;&#x7B49;&#x4E8E;<code>require(&apos;gulp-task-listing&apos;)</code>&#x3002;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x7684;require&#x4E86;&#x3002;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x53C2;&#x6570;&#x914D;&#x7F6E;&#xFF0C;&#x8FD9;&#x91CC;&#x5217;&#x51E0;&#x4E2A;&#x5E38;&#x7528;&#x7684;&#xFF1A;</p>\n<ul>\n<li><code>lazyload: true</code>&#xFF0C;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x518D;&#x53BB;require&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;true&#x3002;</li>\n<li><code>rename: {&apos;gulp-task-listing&apos;: &apos;list&apos;}</code>&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E9B;&#x63D2;&#x4EF6;&#x540D;&#x5B57;&#x592A;&#x957F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x53C2;&#x6570;&#x91CD;&#x547D;&#x540D;&#x3002;</li>\n<li><code>scope: [&apos;dependencies&apos;]</code>&#xFF0C;&#x672C;&#x63D2;&#x4EF6;&#x9ED8;&#x8BA4;&#x4F1A;&#x626B;&#x63CF;<code>package.json</code>&#x91CC;&#x7684;&#x6240;&#x6709;dependence&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x9650;&#x5236;&#x3002;</li>\n</ul>\n<p>&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x53EA;&#x8981;&#x5728;require&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x5373;&#x53EF;&#xFF0C;&#x5982;<code>require(&apos;gulp-load-plugins&apos;)({lazy: true})</code>&#x3002;</p>\n<h4 id=\"gulp-task-loader\"><a href=\"#gulp-task-loader\" class=\"headerlink\" title=\"gulp-task-loader\"></a><a href=\"https://www.npmjs.com/package/gulp-task-loader\" target=\"_blank\" rel=\"external\">gulp-task-loader</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x5C06;gulpfile.js&#x62C6;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x653E;&#x5230;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x662F;&#x4EFB;&#x52A1;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x7ED3;&#x6784;&#x66F4;&#x5206;&#x660E;&#xFF0C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;<br>clear.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;del&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> del.sync(<span class=\"keyword\">this</span>.opts.destDir);</div><div class=\"line\">};</div></pre></td></tr></table></figure></p>\n<p>copy.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.gulp.src(<span class=\"keyword\">this</span>.opts.publicDir)</div><div class=\"line\">     .pipe(<span class=\"keyword\">this</span>.gulp.dest(<span class=\"keyword\">this</span>.opts.destDir));</div><div class=\"line\">};</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">&apos;clean&apos;</span>];</div></pre></td></tr></table></figure></p>\n<p>gulpfile.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&apos;use strict&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> config = {</div><div class=\"line\">    pkg: <span class=\"built_in\">require</span>(<span class=\"string\">&apos;./package.json&apos;</span>),</div><div class=\"line\">    publicDir: [<span class=\"string\">&apos;./{public,public/**}&apos;</span>],</div><div class=\"line\">    destDir: <span class=\"string\">&apos;dest&apos;</span>,</div><div class=\"line\">    version: <span class=\"string\">&quot;0.01&quot;</span></div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-task-loader&apos;</span>)(config);</div><div class=\"line\">gulp.task(<span class=\"string\">&apos;build&apos;</span>, [<span class=\"string\">&apos;clean&apos;</span>, <span class=\"string\">&apos;copy&apos;</span>);</div></pre></td></tr></table></figure></p>\n<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;copy.js&#x4E2D;&#x6700;&#x540E;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x884C;&#x4EE3;&#x7801;<code>module.exports.dependencies = [&apos;clean&apos;];</code>,&#x8FD9;&#x4E2A;&#x662F;&#x7528;&#x505A;&#x4EFB;&#x52A1;&#x4F9D;&#x8D56;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x524D;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x540E;&#x624D;&#x80FD;&#x6267;&#x884C;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#xFF0C;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x8FD8;&#x662F;&#x5F88;&#x7B80;&#x5355;&#x7684;</p>\n<h4 id=\"gulp-task-listing\"><a href=\"#gulp-task-listing\" class=\"headerlink\" title=\"gulp-task-listing\"></a><a href=\"https://www.npmjs.com/package/gulp-task-listing\" target=\"_blank\" rel=\"external\">gulp-task-listing</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x4E5F;&#x5F88;&#x5BB9;&#x6613;&#x731C;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x6253;&#x5370;&#x51FA;<code>gulpfile.js</code>&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6240;&#x6709;task&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x6211;&#x4EEC;&#x5728;<a href=\"/2015/03/24/refactor-your-gulpfile/\">&#x91CD;&#x6784;&#x4F60;&#x7684;gulpfile</a>&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x6700;&#x540E;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x662F;&#x5B83;&#x8FD8;&#x53EF;&#x4EE5;&#x6839;&#x636E;task&#x7684;&#x540D;&#x5B57;&#x786E;&#x5B9A;&#x5B83;&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5B50;task&#xFF0C;&#x6BD4;&#x5982;&#x5E26;&#x6709;<code>:</code>&#x3001;<code>-</code>&#x3001;<code>_</code>&#x7684;task&#x5C31;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x5B50;task&#x3002;&#x6211;&#x4E00;&#x822C;&#x628A;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4F5C;&#x4E3A;&#x9ED8;&#x8BA4;&#x7684;task&#x6765;&#x8C03;&#x7528;&#xFF0C;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">&apos;default&apos;</span>, [<span class=\"string\">&apos;help&apos;</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">&apos;help&apos;</span>, $.taskListing);</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6837;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x6267;&#x884C;<code>gulp</code>&#x7684;&#x8BDD;&#x5C31;&#x4F1A;&#x6253;&#x5370;&#x51FA;&#x6240;&#x6709;&#x5B9A;&#x4E49;&#x597D;&#x7684;task&#xFF0C;&#x975E;&#x5E38;&#x5B9E;&#x7528;&#x3002;</p>\n<h4 id=\"yargs\"><a href=\"#yargs\" class=\"headerlink\" title=\"yargs\"></a><a href=\"https://www.npmjs.com/package/yargs\" target=\"_blank\" rel=\"external\">yargs</a></h4><p>&#x4E25;&#x683C;&#x7684;&#x8BF4;&#xFF0C;<code>yargs</code>&#x4E0D;&#x662F;&#x4E13;&#x95E8;&#x7528;&#x4E8E;gulp&#x7684;&#xFF0C;&#x5B83;&#x662F;Node&#x4E2D;&#x5904;&#x7406;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x7684;&#x901A;&#x7528;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;&#x53EA;&#x8981;&#x4E00;&#x53E5;&#x4EE3;&#x7801;<code>var args = require(&apos;yargs&apos;).argv;</code>&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x53C2;&#x6570;&#x90FD;&#x653E;&#x5728;&#x53D8;&#x91CF;<code>args</code>&#x4E0A;&#xFF0C;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E5F;&#x662F;&#x591A;&#x79CD;&#x591A;&#x6837;&#x7684;&#xFF1A;</p>\n<ul>\n<li>&#x5355;&#x5B57;&#x7B26;&#x7684;&#x7B80;&#x5355;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x4F20;&#x5165;<code>-m=5</code>&#x6216;<code>-m 5</code>&#xFF0C;&#x5219;&#x53EF;&#x5F97;&#x5230;<code>args.m = 5</code>&#x3002;</li>\n<li>&#x591A;&#x5B57;&#x7B26;&#x53C2;&#x6570;&#xFF08;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x53CC;&#x8FDE;&#x5B57;&#x7B26;&#xFF09;&#xFF0C;&#x5982;&#x4F20;&#x5165;<code>--test=5</code>&#x6216;<code>--test 5</code>&#xFF0C;&#x5219;&#x53EF;&#x5F97;&#x5230;<code>args.test = 5</code>&#x3002;</li>\n<li>&#x4E0D;&#x5E26;&#x503C;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x4F20;&#x5165;<code>--mock</code>&#xFF0C;&#x5219;&#x4F1A;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x5F97;&#x5230;<code>args.mock = true</code>&#x3002;</li>\n</ul>\n<p>&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x652F;&#x6301;&#x5F88;&#x591A;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x4F20;&#x53C2;&#x65B9;&#x5F0F;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x53C2;&#x8003;<a href=\"https://www.npmjs.com/package/yargs\" target=\"_blank\" rel=\"external\">&#x5B83;&#x7684;&#x6587;&#x6863;</a>&#x3002;</p>\n<h4 id=\"gulp-util\"><a href=\"#gulp-util\" class=\"headerlink\" title=\"gulp-util\"></a><a href=\"https://www.npmjs.com/package/gulp-util\" target=\"_blank\" rel=\"external\">gulp-util</a></h4><p>gulp-util&#x5E26;&#x6709;&#x5F88;&#x591A;&#x65B9;&#x4FBF;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x5E94;&#x8BE5;&#x5C31;&#x662F;log&#x4E86;&#x3002;<code>$.util.log()</code>&#x652F;&#x6301;&#x4F20;&#x5165;&#x591A;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x6253;&#x5370;&#x7ED3;&#x679C;&#x4F1A;&#x5C06;&#x591A;&#x4E2A;&#x53C2;&#x6570;&#x7528;&#x7A7A;&#x683C;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x5B83;&#x4E0E;<code>console.log</code>&#x7684;&#x533A;&#x522B;&#x5C31;&#x662F;&#x6240;&#x6709;<code>$.util.log</code>&#x7684;&#x7ED3;&#x679C;&#x4F1A;&#x81EA;&#x52A8;&#x5E26;&#x4E0A;&#x65F6;&#x95F4;&#x524D;&#x7F00;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5B83;&#x8FD8;&#x652F;&#x6301;&#x989C;&#x8272;&#xFF0C;&#x5982;<code>$.util.log($.util.colors.magenta(&apos;123&apos;));</code>&#x6253;&#x5370;&#x51FA;&#x6765;&#x7684;123&#x662F;&#x54C1;&#x7EA2;&#x8272;&#x7684;&#x3002;&#x5176;&#x5B9E;<code>$.util.colors</code>&#x5C31;&#x662F;&#x4E00;&#x4E2A;<a href=\"https://github.com/sindresorhus/chalk\" target=\"_blank\" rel=\"external\">chalk</a>&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x800C;chalk&#x662F;&#x4E13;&#x95E8;&#x7528;&#x6765;&#x5904;&#x7406;&#x547D;&#x4EE4;&#x884C;&#x6253;&#x5370;&#x7740;&#x8272;&#x7684;&#x4E00;&#x4E2A;&#x5DE5;&#x5177;&#x3002;</p>\n<h4 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a><a href=\"https://www.npmjs.com/package/del\" target=\"_blank\" rel=\"external\">del</a></h4><p>grunt&#x81EA;&#x8EAB;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;<a href=\"https://github.com/gruntjs/grunt-contrib-clean\" target=\"_blank\" rel=\"external\">grunt-contrib-clean</a>&#x7528;&#x6765;&#x5904;&#x7406;&#x652F;&#x6301;glob&#x5339;&#x914D;&#x7684;&#x5220;&#x9664;&#xFF0C;&#x800C;del&#x5C31;&#x662F;gulp&#x4E0A;&#x5BF9;&#x5E94;&#x7684;&#x5DE5;&#x5177;&#x3002;del&#x652F;&#x6301;&#x548C;<code>gulp.src</code>&#x53C2;&#x6570;&#x540C;&#x6837;&#x7684;&#x5339;&#x914D;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x5B83;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x8FD8;&#x652F;&#x6301;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x5F53;&#x5220;&#x9664;&#x5B8C;&#x6210;&#x4EE5;&#x540E;&#x6267;&#x884C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x7684;&#x5220;&#x9664;&#x3002;&#x5E38;&#x7528;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x4E3A;&#xFF1A;<code>del([xxx], callback)</code>&#x3002;</p>\n<h4 id=\"gulp-bytediff\"><a href=\"#gulp-bytediff\" class=\"headerlink\" title=\"gulp-bytediff\"></a><a href=\"https://www.npmjs.com/package/gulp-bytediff\" target=\"_blank\" rel=\"external\">gulp-bytediff</a></h4><p>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7EDF;&#x8BA1;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x53D8;&#x5316;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x901A;&#x5E38;&#x4E0E;&#x538B;&#x7F29;&#x7C7B;&#x5DE5;&#x5177;&#x653E;&#x5728;&#x4E00;&#x8D77;&#x5B9E;&#x7528;&#xFF0C;&#x6BD4;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(<span class=\"string\">&apos;**/*.html&apos;</span>)</div><div class=\"line\">    .pipe($.bytediff.start())</div><div class=\"line\">    .pipe($.minifyHtml({empty: <span class=\"literal\">true</span>}))</div><div class=\"line\">    .pipe($.bytediff.stop(bytediffFormatter))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;dist&apos;</span>));</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bytediffFormatter</span> (<span class=\"params\">data</span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> difference = (data.savings &gt; <span class=\"number\">0</span>) ? <span class=\"string\">&apos; smaller.&apos;</span> : <span class=\"string\">&apos; larger.&apos;</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> data.fileName + <span class=\"string\">&apos; went from &apos;</span> +</div><div class=\"line\">        (data.startSize / <span class=\"number\">1000</span>).toFixed(<span class=\"number\">2</span>) + <span class=\"string\">&apos; kB to &apos;</span> +</div><div class=\"line\">        (data.endSize / <span class=\"number\">1000</span>).toFixed(<span class=\"number\">2</span>) + <span class=\"string\">&apos; kB and is &apos;</span> +</div><div class=\"line\">        formatPercent(<span class=\"number\">1</span> - data.percent, <span class=\"number\">2</span>) + <span class=\"string\">&apos;%&apos;</span> + difference;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x5728;&#x538B;&#x7F29;&#x7684;pipe&#x524D;&#x540E;&#x52A0;&#x4E0A;<code>$.bytediff.start()</code>&#x548C;<code>$.bytediff.stop(callback)</code>&#xFF0C;&#x5373;&#x53EF;&#x7EDF;&#x8BA1;&#x538B;&#x7F29;&#x524D;&#x540E;&#x6587;&#x4EF6;&#x7684;&#x53D8;&#x5316;&#x3002;&#x5728;callback&#x4E2D;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;data&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x5F88;&#x591A;&#x53D8;&#x91CF;&#xFF0C;&#x5982;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x53D8;&#x5316;&#x524D;&#x540E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x53D8;&#x5316;&#x767E;&#x5206;&#x6BD4;&#x7B49;&#x7B49;&#x3002;</p>\n<h4 id=\"gulp-print\"><a href=\"#gulp-print\" class=\"headerlink\" title=\"gulp-print\"></a><a href=\"https://www.npmjs.com/package/gulp-print\" target=\"_blank\" rel=\"external\">gulp-print</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x6253;&#x5370;&#x51FA;stream&#x91CC;&#x9762;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x901A;&#x5E38;&#x8C03;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x6BD4;&#x8F83;&#x9700;&#x8981;&#x3002;</p>\n<h4 id=\"gulp-bump\"><a href=\"#gulp-bump\" class=\"headerlink\" title=\"gulp-bump\"></a><a href=\"https://www.npmjs.com/package/gulp-bump\" target=\"_blank\" rel=\"external\">gulp-bump</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4E5F;&#x53EF;&#x4EE5;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF1A;&#x7528;&#x6765;&#x5347;&#x7EA7;&#x7248;&#x672C;&#x7528;&#x7684;&#xFF0C;&#x5E9F;&#x8BDD;&#x4E0D;&#x8BF4;&#xFF0C;&#x76F4;&#x63A5;&#x770B;&#x4F8B;&#x5B50;&#x5427;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> gulp</div><div class=\"line\">    .src(<span class=\"string\">&apos;package.json&apos;</span>)</div><div class=\"line\">    .pipe($.bump(options))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;dist&apos;</span>));</div></pre></td></tr></table></figure>\n<p>&#x91CD;&#x70B9;&#x6765;&#x770B;&#x8FD9;&#x91CC;&#x7684;options&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;version&#x8FDB;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x6309;&#x7167;Node&#x7684;&#x7248;&#x672C;&#x89C4;&#x8303;&#x4F20;&#x9012;&#x4E00;&#x4E2A;type&#x8FDB;&#x53BB;&#xFF0C;&#x8BA9;&#x5176;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;version&#xFF1A;</p>\n<ul>\n<li><code>version</code>&#xFF0C;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x8981;&#x5347;&#x7EA7;&#x5230;&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5982;<code>1.2.3</code>&#x3002;</li>\n<li><code>type</code>&#xFF0C;&#x53EF;&#x63A5;&#x53D7;&#x7684;&#x503C;&#x5305;&#x62EC;&#x4E0B;&#x9762;&#x56DB;&#x4E2A;&#xFF0C;&#x5018;&#x82E5;&#x73B0;&#x5728;&#x7684;&#x7248;&#x672C;&#x53F7;&#x4E3A;<code>1.2.3</code>&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x65B0;&#x7248;&#x672C;&#x53F7;&#x4E3A;&#xFF1A;<ul>\n<li>prerelease&#xFF1A;<code>1.2.3-0</code></li>\n<li>patch&#xFF1A;<code>1.2.4</code></li>\n<li>minor&#xFF1A;<code>1.3.0</code></li>\n<li>major&#xFF1A;<code>2.0.0</code></li>\n</ul>\n</li>\n</ul>\n<p>&#x6700;&#x7EC8;&#x8FD9;&#x4E2A;&#x5347;&#x7EA7;&#x540E;&#x7684;&#x7248;&#x672C;&#x53F7;&#x4F1A;&#x53CD;&#x6620;&#x5728;<code>package.json</code>&#x4E2D;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;gulp.src&#x4E2D;&#x4F20;&#x5165;&#x66F4;&#x591A;&#x7684;&#x6587;&#x4EF6;&#xFF08;&#x5982;<code>bower.json</code>&#xFF09;&#x6765;&#x66FF;&#x6362;&#x66F4;&#x591A;&#x7684;&#x6587;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-header\"><a href=\"#gulp-header\" class=\"headerlink\" title=\"gulp-header\"></a><a href=\"https://www.npmjs.com/package/gulp-header\" target=\"_blank\" rel=\"external\">gulp-header</a></h4><p>&#x8FD9;&#x4E2A;&#x5DE5;&#x5177;&#x7528;&#x6765;&#x5728;&#x538B;&#x7F29;&#x540E;&#x7684;JS&#x3001;CSS&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x5934;&#x90E8;&#x6CE8;&#x91CA;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x4EFB;&#x610F;&#x60F3;&#x8981;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x4F5C;&#x8005;&#x3001;&#x63CF;&#x8FF0;&#x3001;&#x7248;&#x672C;&#x53F7;&#x3001;license&#x7B49;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getHeader</span> (<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> pkg = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;package.json&apos;</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> template = [<span class=\"string\">&apos;/**&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; * &lt;%= pkg.name %&gt; - &lt;%= pkg.description %&gt;&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; * @authors &lt;%= pkg.authors %&gt;&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; * @version v&lt;%= pkg.version %&gt;&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; * @link &lt;%= pkg.homepage %&gt;&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; * @license &lt;%= pkg.license %&gt;&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos; */&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos;&apos;</span></div><div class=\"line\">    ].join(<span class=\"string\">&apos;\\n&apos;</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> $.header(template, {</div><div class=\"line\">        pkg: pkg</div><div class=\"line\">    });</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5C06;<code>package.json</code>&#x4E2D;&#x7684;&#x5404;&#x79CD;&#x4FE1;&#x606F;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x53D8;&#x6210;&#x5934;&#x90E8;&#x6CE8;&#x91CA;&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x538B;&#x7F29;&#x7684;pipe&#x4E2D;&#x8C03;&#x7528;<code>.pipe(getHeader())</code>&#x5373;&#x53EF;&#x3002;</p>\n<h3 id=\"stream&#x76F8;&#x5173;\"><a href=\"#stream&#x76F8;&#x5173;\" class=\"headerlink\" title=\"stream&#x76F8;&#x5173;\"></a>stream&#x76F8;&#x5173;</h3><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;&#x8DDF;stream&#x64CD;&#x4F5C;&#x6709;&#x5173;&#x7684;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-filter\"><a href=\"#gulp-filter\" class=\"headerlink\" title=\"gulp-filter\"></a><a href=\"https://www.npmjs.com/package/gulp-filter\" target=\"_blank\" rel=\"external\">gulp-filter</a></h4><p>gulp-filter&#x53EF;&#x4EE5;&#x628A;stream&#x91CC;&#x7684;&#x6587;&#x4EF6;&#x6839;&#x636E;&#x4E00;&#x5B9A;&#x7684;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x7B5B;&#x9009;&#x8FC7;&#x6EE4;&#x3002;&#x6BD4;&#x5982;<code>gulp.src</code>&#x4E2D;&#x4F20;&#x5165;&#x5339;&#x914D;&#x7B26;&#x5339;&#x914D;&#x4E86;&#x5F88;&#x591A;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;pipe&#x7ED9;gulp-filter&#x4F5C;&#x4E8C;&#x6B21;&#x7B5B;&#x9009;&#xFF0C;&#x5982;<code>gulp.src(&apos;**/*.js&apos;).pipe($.filter(**/a/*.js))</code>&#xFF0C;&#x672C;&#x6765;&#x9009;&#x4E2D;&#x4E86;&#x6240;&#x6709;&#x5B50;&#x6587;&#x4EF6;&#x4E0B;&#x7684;js&#x6587;&#x4EF6;&#xFF0C;&#x7ECF;&#x8FC7;&#x7B5B;&#x9009;&#x540E;&#x53D8;&#x6210;&#x540D;&#x4E3A;a&#x7684;&#x5B50;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;js&#x6587;&#x4EF6;&#x3002;&#x90A3;&#x6709;&#x4EBA;&#x8981;&#x95EE;&#x4E86;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x76F4;&#x63A5;&#x5C06;&#x9700;&#x8981;&#x7684;&#x7B5B;&#x9009;&#x4F20;&#x5165;<code>gulp.src</code>&#xFF0C;&#x5E72;&#x561B;&#x8981;&#x591A;&#x7B5B;&#x9009;&#x4E00;&#x6B65;&#x5462;&#xFF1F;&#x8FD9;&#x91CC;&#x9762;&#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p>\n<ul>\n<li><code>gulp.src</code>&#x4E0E;<code>$.filter</code>&#x4E2D;&#x95F4;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x522B;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x5BF9;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x505A;&#x4E86;&#x64CD;&#x4F5C;1&#x4EE5;&#x540E;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x7B5B;&#x9009;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x505A;&#x64CD;&#x4F5C;2&#x3002;</li>\n<li>&#x7B2C;&#x4E8C;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x8981;&#x8C08;&#x5230;gulp-filter&#x7684;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#xFF1A;&#x7B5B;&#x9009;&#x4E4B;&#x540E;&#x8FD8;&#x53EF;&#x4EE5;restore&#x56DE;&#x53BB;&#x3002;&#x6BD4;&#x5982;&#x6211;&#x5BF9;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x505A;&#x4E86;&#x64CD;&#x4F5C;1&#xFF0C;&#x7B5B;&#x9009;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x505A;&#x64CD;&#x4F5C;2&#xFF0C;&#x6700;&#x540E;&#x8981;&#x628A;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#x90FD;&#x62F7;&#x8D1D;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> filter = $.filter(<span class=\"string\">&apos;**/a/*.js&apos;</span>);</div><div class=\"line\">gulp.src(<span class=\"string\">&apos;**/*.js&apos;</span>)</div><div class=\"line\">    .pipe(action1())</div><div class=\"line\">    .pipe(filter)</div><div class=\"line\">    .pipe(action2())</div><div class=\"line\">    .pipe(filter.restore())</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;dist&apos;</span>))</div></pre></td></tr></table></figure>\n<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;restore&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x62F7;&#x8D1D;&#x5230;&#x6700;&#x7EC8;&#x4F4D;&#x7F6E;&#x7684;&#x6587;&#x4EF6;&#x5C06;&#x53EA;&#x5305;&#x542B;&#x88AB;&#x8FC7;&#x6EE4;&#x51FA;&#x6765;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x4E00;restore&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#x90FD;&#x88AB;&#x62F7;&#x8D1D;&#x4E86;&#x3002;</p>\n<h4 id=\"gulp-flatten\"><a href=\"#gulp-flatten\" class=\"headerlink\" title=\"gulp-flatten\"></a><a href=\"https://www.npmjs.com/package/gulp-flatten\" target=\"_blank\" rel=\"external\">gulp-flatten</a></h4><p>gulp-flatten&#x975E;&#x5E38;&#x5B9E;&#x7528;&#xFF0C;&#x53EF;&#x80FD;&#x77E5;&#x9053;&#x522B;&#x7684;&#x5E93;&#x4E2D;flatten&#x51FD;&#x6570;&#x7684;&#x540C;&#x5B66;&#x5DF2;&#x7ECF;&#x731C;&#x5230;&#x5B83;&#x662F;&#x5E72;&#x561B;&#x7684;&#x4E86;&#x3002;&#x6BD4;&#x5982;<code>gulp.src(&apos;**/*.js&apos;)</code>&#x5339;&#x914D;&#x4E86;&#x5F88;&#x591A;&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;<code>a/b/c.js</code>&#xFF0C;<code>d/e.js</code>&#xFF0C;<code>f/g/h/i/j/k.js</code>&#xFF0C;<code>l.js</code>&#xFF0C;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x7684;&#x5C42;&#x7EA7;&#x90FD;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;pipe&#x7ED9;<code>$.flatten()</code>&#xFF0C;&#x5219;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x5C42;&#x7EA7;&#x90FD;&#x4F1A;&#x53BB;&#x6389;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x5C06;&#x662F;<code>c.js</code>&#xFF0C;<code>e.js</code>&#xFF0C;<code>k.js</code>&#xFF0C;<code>l.js</code>&#xFF0C;&#x5728;&#x4E00;&#x4E9B;&#x573A;&#x666F;&#x4E0B;&#x8FD8;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x3002;</p>\n<h4 id=\"gulp-plumber\"><a href=\"#gulp-plumber\" class=\"headerlink\" title=\"gulp-plumber\"></a><a href=\"https://www.npmjs.com/package/gulp-plumber\" target=\"_blank\" rel=\"external\">gulp-plumber</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x4E00;&#x65E6;pipe&#x4E2D;&#x7684;&#x67D0;&#x4E00;steam&#x62A5;&#x9519;&#x4E86;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E0B;&#x9762;&#x7684;steam&#x8FD8;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002;&#x56E0;&#x4E3A;pipe&#x9ED8;&#x8BA4;&#x7684;onerror&#x51FD;&#x6570;&#x4F1A;&#x628A;&#x5269;&#x4E0B;&#x7684;stream&#x7ED9;unpipe&#x6389;&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x963B;&#x6B62;&#x4E86;&#x8FD9;&#x79CD;&#x884C;&#x4E3A;&#x3002;&#x90A3;&#x5B83;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x54EA;&#x79CD;&#x573A;&#x666F;&#x5462;&#xFF1F;&#x6BD4;&#x5982;&#xFF0C;&#x4EE3;&#x7801;&#x6BCF;&#x6B21;build&#x4E4B;&#x524D;&#x8981;&#x8DD1;&#x4E00;&#x904D;jshint&#x548C;jscs&#x6765;&#x786E;&#x4FDD;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x90FD;&#x7B26;&#x5408;&#x89C4;&#x8303;&#xFF0C;&#x4F46;&#x4E00;&#x65E6;&#x67D0;&#x4E9B;&#x4EE3;&#x7801;&#x4E0D;&#x7B26;&#x5408;&#x89C4;&#x8303;&#xFF0C;&#x6574;&#x4E2A;build&#x6D41;&#x7A0B;&#x5C31;&#x4F1A;&#x505C;&#x6B62;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;gulp-plumber&#x51FA;&#x573A;&#x4E86;&#x3002;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">&apos;build&apos;</span>, [<span class=\"string\">&apos;jslint&apos;</span>, <span class=\"string\">&apos;xxxx&apos;</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">&apos;jslint&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> gulp</div><div class=\"line\">        .src(config.js.all)</div><div class=\"line\">        .pipe($.plumber())</div><div class=\"line\">        .pipe($.jshint())</div><div class=\"line\">        .pipe($.jscs()); </div><div class=\"line\">});</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6837;&#xFF0C;&#x4E00;&#x65E6;jshint&#x6216;jscs&#x62A5;&#x9519;&#xFF0C;&#x6574;&#x4E2A;build&#x6D41;&#x7A0B;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x8D70;&#x4E0B;&#x53BB;&#x7684;&#xFF0C;&#x800C;&#x4E14;gulp-plumber&#x4F1A;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x62A5;&#x9519;&#x63D0;&#x9192;&#x6211;&#x4EEC;&#xFF1A;</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[<span class=\"number\">16</span>:<span class=\"number\">52</span>:<span class=\"number\">36</span>] Plumber found unhandled <span class=\"string\">error:</span></div><div class=\"line\"> Error <span class=\"keyword\">in</span> plugin <span class=\"string\">&apos;gulp-jshint&apos;</span></div><div class=\"line\"><span class=\"string\">Message:</span></div><div class=\"line\">    JSHint failed <span class=\"string\">for:</span> xxxx.js</div></pre></td></tr></table></figure>\n<h4 id=\"gulp-if\"><a href=\"#gulp-if\" class=\"headerlink\" title=\"gulp-if\"></a><a href=\"https://www.npmjs.com/package/gulp-if\" target=\"_blank\" rel=\"external\">gulp-if</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x529F;&#x80FD;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EF;&#x4EE5;&#x6761;&#x4EF6;&#x6027;&#x7684;&#x6DFB;&#x52A0;stream&#xFF0C;&#x5982;<code>.pipe($.if(flag, action1()))</code>&#xFF0C;&#x5219;&#x53EA;&#x4F1A;&#x5728;<code>flag</code>&#x53D8;&#x91CF;&#x4E3A;true&#x65F6;&#x624D;&#x4F1A;&#x5C06;<code>action1()</code>&#x6DFB;&#x52A0;&#x5230;stream&#x4E2D;&#x53BB;&#x3002;&#x5176;&#x5B9E;&#x4E0D;&#x7528;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4E5F;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x7C7B;&#x4F3C;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x90A3;&#x5C31;&#x662F;gulp-util&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53EB;&#x505A;<code>noop()</code>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;no operation&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x5E72;&#x7684;&#x7A7A;stream&#x3002;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x5199;&#xFF1A;<code>.pipe(flag ? action1() : $.util.noop())</code>&#xFF0C;&#x4E0E;&#x4E0A;&#x4F8B;&#x7684;&#x6548;&#x679C;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;</p>\n<h4 id=\"merge-stream\"><a href=\"#merge-stream\" class=\"headerlink\" title=\"merge-stream\"></a><a href=\"https://www.npmjs.com/package/merge-stream\" target=\"_blank\" rel=\"external\">merge-stream</a></h4><p>&#x4E00;&#x4E2A;gulp&#x7684;task&#x53EA;&#x80FD;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;stream&#xFF0C;&#x4F46;&#x6709;&#x7684;&#x65F6;&#x5019;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x79CD;&#x60C5;&#x666F;&#xFF1A;&#x6709;&#x4E24;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x539F;&#x59CB;&#x4F4D;&#x7F6E;&#x548C;&#x5904;&#x7406;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x90FD;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x7684;&#x5904;&#x7406;&#x6D41;&#x7A0B;&#x76F8;&#x540C;&#x3002;&#x7531;&#x4E8E;<code>gulp.src</code>&#x548C;<code>gulp.dest</code>&#x7684;&#x53C2;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x5199;&#x4E24;&#x4E2A;task&#x6765;&#x5206;&#x522B;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x7565;&#x663E;&#x91CD;&#x590D;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x903B;&#x8F91;&#x4E0A;&#x6765;&#x8BB2;&#x8FD9;&#x4E24;&#x4E2A;task&#x672C;&#x6765;&#x5C31;&#x662F;&#x5904;&#x7406;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#x7684;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x9700;&#x8981;merge-stream&#x767B;&#x573A;&#x4E86;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x5C06;&#x591A;&#x4E2A;stream&#x5408;&#x6210;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x3002;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;merge-stream&apos;</span>);</div><div class=\"line\">gulp.task(<span class=\"string\">&apos;jade&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> stream1 = jade(src1, dest1);</div><div class=\"line\">    <span class=\"keyword\">var</span> stream2 = jade(src2, dest2);</div><div class=\"line\">    <span class=\"keyword\">return</span> merge(stream1, stream2);</div><div class=\"line\">});</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jade</span> (<span class=\"params\">src, dest</span>) </span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> gulp</div><div class=\"line\">        .src(src)</div><div class=\"line\">        .pipe($.jade())</div><div class=\"line\">        .pipe(gulp.dest(dest));</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5904;&#x7406;&#x7684;&#x6D41;&#x7A0B;&#x88AB;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x653E;&#x5165;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;src&#x548C;dest&#x3002;&#x7136;&#x540E;&#x5728;task&#x4E2D;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x751F;&#x6210;&#x4E24;&#x4E2A;stream&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;merge-stream&#x5408;&#x5E76;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x3002;</p>\n<h4 id=\"run-sequence\"><a href=\"#run-sequence\" class=\"headerlink\" title=\"run-sequence\"></a><a href=\"https://www.npmjs.com/package/run-sequence\" target=\"_blank\" rel=\"external\">run-sequence</a></h4><p>gulp&#x91CC;&#x7684;task&#x90FD;&#x662F;&#x5F02;&#x6B65;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x8FDE;&#x4E32;&#x7684;task&#x6309;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x65F6;&#x5C31;&#x9700;&#x8981;run-sequence&#x767B;&#x573A;&#x4E86;&#x3002;&#x5B83;&#x7684;&#x8C03;&#x7528;&#x5F88;&#x7B80;&#x5355;&#xFF1A;<code>runSequence(&apos;task1&apos;, &apos;task2&apos;, [&apos;task3&apos;, &apos;task4&apos;], &apos;task5&apos;)</code>&#xFF0C;&#x8FD9;&#x91CC;&#x7684;task&#x90FD;&#x662F;gulp&#x5B9A;&#x4E49;&#x597D;&#x7684;task&#x540D;&#x79F0;&#xFF0C;task1&#x5B8C;&#x6210;&#x540E;&#x624D;&#x4F1A;&#x6267;&#x884C;task2&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;&#x6CE8;&#x610F;&#x5230;task3&#x548C;task4&#x88AB;&#x653E;&#x5728;&#x4E2D;&#x62EC;&#x53F7;&#x91CC;&#x4E86;&#xFF0C;&#x8FD9;&#x8868;&#x660E;&#xFF0C;task3&#x548C;task4&#x53EF;&#x4EE5;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x4F46;&#x4E24;&#x4E2A;&#x90FD;&#x6267;&#x884C;&#x5B8C;&#x540E;&#x624D;&#x4F1A;&#x6267;&#x884C;task5&#x3002;&#x8FD9;&#x91CC;&#x8981;&#x8BF4;&#x660E;&#x7684;&#x662F;&#xFF0C;&#x6BCF;&#x4E2A;task&#x8981;&#x4E48;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;stream&#xFF0C;&#x5373;<code>return gulp.src().pipe().pipe()</code>&#xFF0C;&#x8981;&#x4E48;&#x652F;&#x6301;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x5373;<code>gulp.task(&apos;task1&apos;, function (done) { action1(done); })</code>&#xFF0C;&#x6EE1;&#x8DB3;&#x4E86;&#x8FD9;&#x4E24;&#x70B9;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x6B63;&#x5E38;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x662F;gulp&#x5BF9;<a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md#async-task-support\" target=\"_blank\" rel=\"external\">&#x5F02;&#x6B65;task&#x7684;&#x57FA;&#x672C;&#x8981;&#x6C42;</a>&#x3002;</p>\n<h3 id=\"inject&#x76F8;&#x5173;\"><a href=\"#inject&#x76F8;&#x5173;\" class=\"headerlink\" title=\"inject&#x76F8;&#x5173;\"></a>inject&#x76F8;&#x5173;</h3><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;&#x5C06;JS/CSS&#x81EA;&#x52A8;&#x63D2;&#x5165;&#x5230;HTML&#x7684;&#x76F8;&#x5173;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"wiredep\"><a href=\"#wiredep\" class=\"headerlink\" title=\"wiredep\"></a><a href=\"https://www.npmjs.com/package/wiredep\" target=\"_blank\" rel=\"external\">wiredep</a></h4><p>wiredep&#x5C31;&#x662F;wire dependence&#x7684;&#x610F;&#x601D;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x628A;<code>bower.json</code>&#x4E2D;&#x58F0;&#x660E;&#x7684;dependence&#x81EA;&#x52A8;&#x7684;&#x5305;&#x542B;&#x5230;HTML&#x4E2D;&#x53BB;&#x3002;&#x8981;&#x63D2;&#x5165;&#x6587;&#x4EF6;&#xFF0C;wiredep&#x9700;&#x8981;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p>\n<ul>\n<li>&#x63D2;&#x5165;&#x7684;&#x4F4D;&#x7F6E;&#xFF1A;wiredep&#x901A;&#x8FC7;&#x8BC6;&#x522B;HTML&#x4E2D;&#x7684;&#x6CE8;&#x91CA;&#x6765;&#x8BC6;&#x522B;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#xFF0C;&#x5982;</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- bower:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div></pre></td></tr></table></figure>\n<p>&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x6587;&#x4EF6;&#x88AB;&#x63D2;&#x5165;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x533A;&#x5757;&#x3002;</p>\n<ul>\n<li>&#x63D2;&#x5165;&#x4EC0;&#x4E48;&#x6587;&#x4EF6;&#xFF1A;&#x8981;&#x63D2;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x81EA;&#x7136;&#x6765;&#x81EA;<code>bower.json</code>&#xFF0C;&#x6BCF;&#x4E2A;bower&#x5B89;&#x88C5;&#x7684;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x8FB9;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;<code>bower.json</code>&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;<code>main</code>&#x5B57;&#x6BB5;&#x6307;&#x660E;&#x4E86;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x5E93;&#x9700;&#x8981;&#x5305;&#x542B;&#x7684;&#x6587;&#x4EF6;&#xFF0C;wiredep&#x6700;&#x7EC8;&#x5305;&#x542B;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x5C31;&#x6765;&#x81EA;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x3002;&#x6709;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5E93;&#x81EA;&#x8EAB;&#x7684;<code>bower.json</code>&#x7684;main&#x5B57;&#x6BB5;&#x53EF;&#x80FD;&#x4F1A;&#x591A;&#x5305;&#x542B;&#x6587;&#x4EF6;&#x6216;&#x5C11;&#x5305;&#x542B;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x5B9A;&#x5236;&#x8FD9;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x5728;&#x81EA;&#x5DF1;&#x7684;<code>bower.json</code>&#x4E2D;&#x4F7F;&#x7528;<code>overrides</code>&#x5B57;&#x6BB5;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x8986;&#x76D6;&#x4E86;<code>mdi</code>&#x8FD9;&#x4E2A;&#x5E93;&#x7684;<code>main</code>&#x5B57;&#x6BB5;&#x3002;</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">&quot;overrides&quot;</span>: {</div><div class=\"line\">  <span class=\"string\">&quot;mdi&quot;</span>: {</div><div class=\"line\">    <span class=\"string\">&quot;main&quot;</span>: [</div><div class=\"line\">      <span class=\"string\">&quot;css/materialdesignicons.css&quot;</span></div><div class=\"line\">    ]</div><div class=\"line\">  }</div><div class=\"line\">},</div></pre></td></tr></table></figure>\n<p>wiredep&#x63D2;&#x4EF6;&#x652F;&#x6301;&#x5F88;&#x591A;&#x53C2;&#x6570;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;</p>\n<ul>\n<li>bowerJson&#xFF1A;&#x6307;&#x5B9A;<code>bower.json</code>&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x4E0D;&#x662F;<code>bower.json</code>&#x6587;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x9700;&#x8981;&#x4F7F;&#x7528;require&#x540E;&#x7684;&#x7ED3;&#x679C;&#x8D4B;&#x503C;&#xFF1A;<code>require(&apos;bower.json&apos;)</code>&#x3002;</li>\n<li>directory&#xFF1A;&#x6307;&#x5B9A;&#x5B58;&#x653E;bower&#x5B89;&#x88C5;&#x540E;&#x7684;&#x4F9D;&#x8D56;&#x5305;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x901A;&#x5E38;&#x662F;bower_components&#x3002;&#x6CE8;&#x610F;&#x6700;&#x7EC8;&#x63D2;&#x5165;&#x5230;HTML&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x7684;&#x8DEF;&#x5F84;&#x662F;index.html&#x6587;&#x4EF6;&#x76F8;&#x5BF9;&#x4E8E;&#x672C;&#x6587;&#x4EF6;&#x5939;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;</li>\n</ul>\n<p>&#x4F7F;&#x7528;wiredep&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x76F4;&#x63A5;&#x628A;&#x5B83;&#x4F20;&#x5165;&#x5230;stream&#x4E2D;&#x5373;&#x53EF;&#xFF0C;&#x5982;<code>gulp.src(&apos;index.html&apos;).pipe(wiredep(options))</code>&#x3002;</p>\n<h4 id=\"gulp-inject\"><a href=\"#gulp-inject\" class=\"headerlink\" title=\"gulp-inject\"></a><a href=\"https://www.npmjs.com/package/gulp-inject\" target=\"_blank\" rel=\"external\">gulp-inject</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x4E0E;wiredep&#x7C7B;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x4EFB;&#x610F;&#x6307;&#x5B9A;&#x9700;&#x8981;&#x63D2;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x5217;&#x8868;&#x3002;&#x5B83;&#x540C;&#x6837;&#x662F;&#x5229;&#x7528;&#x6CE8;&#x91CA;&#x6765;&#x5BFB;&#x627E;&#x63D2;&#x5165;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5B83;&#x8BC6;&#x522B;&#x7684;&#x9ED8;&#x8BA4;&#x6CE8;&#x91CA;&#x4E3A;<code>&lt;!-- inject:js --&gt;</code>&#xFF0C;&#x4F46;&#x66F4;&#x52A0;&#x667A;&#x80FD;&#xFF1A;</p>\n<ul>\n<li>&#x652F;&#x6301;&#x5404;&#x79CD;&#x6A21;&#x677F;&#x8BED;&#x8A00;&#xFF1A;&#x53EF;&#x4EE5;&#x6839;&#x636E;<code>gulp.src</code>&#x6307;&#x5B9A;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x81EA;&#x52A8;&#x8BC6;&#x522B;&#x6CE8;&#x91CA;&#x548C;&#x63D2;&#x5165;&#x5185;&#x5BB9;&#xFF0C;&#x9664;&#x4E86;&#x652F;&#x6301;HTML&#x5916;&#xFF0C;&#x8FD8;&#x652F;&#x6301;jade&#x3001;haml&#x7B49;&#x3002;&#x82E5;&#x6E90;&#x4E3A;jade&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x8BC6;&#x522B;&#x7684;&#x6CE8;&#x91CA;&#x4E3A;<code>//- inject:js</code>&#xFF0C;&#x63D2;&#x5165;&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A;<code>script(src=&quot;&lt;filename&gt;.js&quot;)</code>&#x3002;</li>\n<li>&#x914D;&#x7F6E;&#x975E;&#x5E38;&#x7075;&#x6D3B;&#xFF1A;<ul>\n<li>name&#xFF1A;&#x9ED8;&#x8BA4;&#x8BC6;&#x522B;&#x7684;&#x6CE8;&#x91CA;&#x6807;&#x7B7E;&#x683C;&#x5F0F;&#x4E3A;<code>&lt;!-- name:ext --&gt;</code>&#xFF0C;&#x8FD9;&#x91CC;&#x7684;name&#x9ED8;&#x8BA4;&#x503C;&#x5C31;&#x662F;&#x201C;inject&#x201D;&#xFF0C;&#x800C;ext&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x8981;&#x63D2;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x6269;&#x5C55;&#x540D;&#x3002;&#x90A3;&#x4E48;name&#x5C5E;&#x6027;&#x53EF;&#x914D;&#x7F6E;&#x610F;&#x5473;&#x7740;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x63D2;&#x5165;&#x533A;&#x5757;&#xFF0C;&#x5982;<code>&lt;!-- production:js --&gt;</code>&#xFF0C;&#x8FD9;&#x4E2A;&#x6807;&#x7B7E;&#x53EF;&#x4EE5;&#x53EA;&#x63D2;&#x5165;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x9700;&#x8981;&#x5305;&#x542B;&#x7684;JS&#x6587;&#x4EF6;&#x3002;</li>\n<li>starttag&#x548C;endtag&#xFF1A;&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x9700;&#x8981;&#x8BC6;&#x522B;&#x7684;&#x6CE8;&#x91CA;&#x5185;&#x5BB9;&#x3002;</li>\n<li>addPrefix&#x548C;addSuffix&#xFF1A;&#x652F;&#x6301;&#x5728;&#x63D2;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#x81EA;&#x5B9A;&#x4E49;&#x524D;&#x7F00;&#x3001;&#x540E;&#x7F00;&#x3002;</li>\n<li>relative&#xFF1A;&#x6307;&#x5B9A;&#x63D2;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x4E3A;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;</li>\n<li>ingorePath&#xFF1A;&#x6307;&#x5B9A;&#x63D2;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x524D;&#x9762;&#x4F1A;&#x5FFD;&#x7565;&#x6389;&#x6307;&#x5B9A;&#x7684;&#x8DEF;&#x5F84;&#x3002;</li>\n<li>read&#xFF1A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x901A;&#x5E38;&#x7ED9;false&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x771F;&#x6B63;&#x7684;&#x53BB;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x3002;</li>\n</ul>\n</li>\n</ul>\n<p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x901A;&#x5E38;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;index&#x91CC;&#x6709;&#x591A;&#x4E2A;&#x533A;&#x5757;&#xFF0C;&#x6BD4;&#x5982;&#x4E0A;&#x9762;name&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x4E3A;production&#x73AF;&#x5883;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x624D;&#x53BB;&#x5305;&#x542B;&#x76F8;&#x5173;&#x7684;&#x6587;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-useref-&#x4E0E;-gulp-rev-gulp-rev-replace\"><a href=\"#gulp-useref-&#x4E0E;-gulp-rev&#x3001;gulp-rev-replace\" class=\"headerlink\" title=\"gulp-useref &#x4E0E; gulp-rev&#x3001;gulp-rev-replace\"></a><a href=\"https://www.npmjs.com/package/gulp-useref\" target=\"_blank\" rel=\"external\">gulp-useref</a> &#x4E0E; <a href=\"https://www.npmjs.com/package/gulp-rev\" target=\"_blank\" rel=\"external\">gulp-rev</a>&#x3001;<a href=\"https://www.npmjs.com/package/gulp-rev-replace\" target=\"_blank\" rel=\"external\">gulp-rev-replace</a></h4><p>&#x8FD9;&#x4E09;&#x4E2A;&#x5DE5;&#x5177;&#x4E4B;&#x6240;&#x4EE5;&#x653E;&#x5728;&#x4E00;&#x8D77;&#x8BB2;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x7684;&#x3002;&#x5B83;&#x4EEC;&#x8981;&#x89E3;&#x51B3;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x5462;&#xFF1F;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;wiredep&#x4E5F;&#x597D;&#xFF0C;gulp-inject&#x4E5F;&#x597D;&#xFF0C;&#x63D2;&#x5165;&#x4E86;&#x4E00;&#x5806;JS&#x3001;CSS&#x6587;&#x4EF6;&#x5230;HTML&#x4E2D;&#xFF0C;&#x4E00;&#x65E6;&#x90E8;&#x7F72;&#x5230;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#xFF0C;&#x8FD9;&#x4E48;&#x591A;&#x6587;&#x4EF6;&#x5FC5;&#x7136;&#x662F;&#x8981;&#x5408;&#x5E76;&#x538B;&#x7F29;&#x7684;&#x3002;&#x5149;&#x662F;&#x538B;&#x7F29;&#x8FD8;&#x4E0D;&#x591F;&#xFF0C;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x7F13;&#x5B58;&#x95EE;&#x9898;&#xFF0C;&#x6BCF;&#x6B21;&#x5408;&#x5E76;&#x538B;&#x7F29;&#x540E;&#x8981;&#x7ED9;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x52A0;hash&#xFF0C;&#x8FD9;&#x6837;&#x6BCF;&#x6B21;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x4E00;&#x53D8;&#x52A8;&#xFF0C;hash&#x4E5F;&#x4F1A;&#x8DDF;&#x7740;&#x53D8;&#x52A8;&#xFF0C;&#x5C31;&#x4E0D;&#x5B58;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4F9D;&#x7136;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x7684;&#x8001;&#x6587;&#x4EF6;&#x7684;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x6837;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x4EE5;&#x540E;&#xFF0C;&#x80AF;&#x5B9A;&#x8FD8;&#x8981;&#x5C06;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x66FF;&#x6362;&#x56DE;HTML&#x4E2D;&#x53BB;&#xFF0C;&#x4E00;&#x5927;&#x5806;&#x7684;script&#x548C;link&#x6807;&#x7B7E;&#x66FF;&#x6362;&#x6210;&#x6700;&#x7EC8;&#x5408;&#x5E76;&#x538B;&#x7F29;&#x5E26;hash&#x7684;&#x7248;&#x672C;&#x3002;</p>\n<p>&#x524D;&#x9762;&#x5570;&#x5570;&#x55E6;&#x55E6;&#x7684;&#x4E00;&#x5927;&#x5806;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x8FD9;&#x4E09;&#x4E2A;&#x63D2;&#x4EF6;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x4E86;&#x3002;&#x9996;&#x5148;&#xFF0C;gulp-useref&#x6839;&#x636E;&#x6CE8;&#x91CA;&#x5C06;HTML&#x4E2D;&#x9700;&#x8981;&#x5408;&#x5E76;&#x538B;&#x7F29;&#x7684;&#x533A;&#x5757;&#x627E;&#x51FA;&#x6765;&#xFF0C;&#x5BF9;&#x533A;&#x5757;&#x5185;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#x3002;<strong>&#x6CE8;&#x610F;&#xFF1A;&#x5B83;&#x53EA;&#x8D1F;&#x8D23;&#x5408;&#x5E76;&#xFF0C;&#x4E0D;&#x8D1F;&#x8D23;&#x538B;&#x7F29;&#xFF01;</strong>&#x6240;&#x4EE5;&#x5408;&#x5E76;&#x51FA;&#x6765;&#x7684;&#x6587;&#x4EF6;&#x6211;&#x4EEC;&#x8981;&#x81EA;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x538B;&#x7F29;&#x4EE5;&#x540E;&#x8C03;&#x7528;gulp-rev&#x8D1F;&#x8D23;&#x5728;&#x6587;&#x4EF6;&#x540D;&#x540E;&#x8FFD;&#x52A0;hash&#x3002;&#x6700;&#x540E;&#x8C03;&#x7528;gulp-rev-replace&#x8D1F;&#x8D23;&#x628A;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x66FF;&#x6362;&#x56DE;HTML&#x4E2D;&#x53BB;&#x3002;&#x626F;&#x4E86;&#x5927;&#x534A;&#x5929;&#xFF0C;&#x8FD8;&#x662F;&#x76F4;&#x63A5;&#x4E0A;&#x4F8B;&#x5B50;&#x5427;&#x3002;&#x5148;&#x6765;&#x770B;&#x770B;HTML&#x4E2D;&#x7684;&#x6CE8;&#x91CA;&#xFF1A;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- build:css static/styles/lib.css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:css static/styles/app.css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- inject:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endinject --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:js static/js/lib.js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:js static/js/app.js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- inject:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endinject --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div></pre></td></tr></table></figure>\n<p>gulp-useref&#x8BC6;&#x522B;&#x7684;&#x5C31;&#x662F;build&#x5F00;&#x5934;&#x7684;&#x6CE8;&#x91CA;&#xFF0C;build&#x540E;&#x9762;&#x9996;&#x5148;&#x8DDF;&#x7684;&#x662F;&#x7C7B;&#x578B;&#x6269;&#x5C55;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x540E;&#x9762;&#x7684;&#x8DEF;&#x5F84;&#x5C31;&#x662F;build&#x533A;&#x5757;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E2A;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x662F;&#x76F8;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;HTML&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x6211;&#x4EEC;&#x7528;build&#x533A;&#x5757;&#x628A;bower&#x548C;inject&#x8FDB;&#x6765;&#x7684;&#x6587;&#x4EF6;&#x5305;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x88AB;gulp-useref&#x5408;&#x5E76;&#x4E86;&#x3002;&#x518D;&#x6765;&#x770B;gulp&#x4E2D;useref&#x76F8;&#x5173;task&#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> assets = $.useref.assets({searchPath: <span class=\"string\">&apos;app/src/&apos;</span>});</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cssFilter = $.filter(<span class=\"string\">&apos;**/*.css&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> jsAppFilter = $.filter(<span class=\"string\">&apos;**/app.js&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> jslibFilter = $.filter(<span class=\"string\">&apos;**/lib.js&apos;</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">return</span> gulp</div><div class=\"line\">    .src(<span class=\"string\">&apos;index.html&apos;</span>)</div><div class=\"line\">    .pipe(assets)</div><div class=\"line\">    .pipe(cssFilter)</div><div class=\"line\">    .pipe($.csso())</div><div class=\"line\">    .pipe(cssFilter.restore())</div><div class=\"line\">    .pipe(jsAppFilter)</div><div class=\"line\">    .pipe($.uglify())</div><div class=\"line\">    .pipe(getHeader())</div><div class=\"line\">    .pipe(jsAppFilter.restore())</div><div class=\"line\">    .pipe(jslibFilter)</div><div class=\"line\">    .pipe($.uglify())</div><div class=\"line\">    .pipe(jslibFilter.restore())</div><div class=\"line\">    .pipe($.rev())</div><div class=\"line\">    .pipe(assets.restore())</div><div class=\"line\">    .pipe($.useref())</div><div class=\"line\">    .pipe($.revReplace())</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;dist&apos;</span>));</div></pre></td></tr></table></figure>\n<p>&#x9996;&#x5148;&#x4E00;&#x4E0A;&#x6765;&#xFF0C;&#x5148;&#x8C03;&#x7528;<code>$.useref.assets()</code>&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;stream&#xFF0C;&#x5305;&#x542B;&#x5DF2;&#x7ECF;&#x5408;&#x5E76;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x5728;&#x7B2C;9&#x884C;&#x540E;&#x9762;&#x52A0;&#x4E0A;&#x524D;&#x9762;&#x4ECB;&#x7ECD;&#x8FC7;&#x7684;gulp-print&#x63D2;&#x4EF6;<code>.pipe($.print())</code>&#xFF0C;&#x6253;&#x5370;&#x51FA;stream&#x91CC;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x53D1;&#x73B0;&#x5C31;&#x662F;&#x524D;&#x9762;HTML&#x4E2D;4&#x4E2A;build&#x6CE8;&#x91CA;&#x5757;&#x540E;&#x9762;&#x7684;4&#x4E2A;&#x6587;&#x4EF6;&#x3002;&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x8DDF;&#x4E86;&#x4E00;&#x4E2A;<code>searchPath</code>&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x7684;&#x7528;&#x5904;&#x5C31;&#x662F;&#x6307;&#x5B9A;&#x4ECE;&#x54EA;&#x4E2A;&#x8DEF;&#x5F84;&#x5F00;&#x59CB;&#x5BFB;&#x627E;build&#x533A;&#x5757;&#x5E95;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x6BD4;&#x5982;build&#x533A;&#x5757;&#x5E95;&#x4E0B;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x884C;<code>`&#xFF0C;&#x90A3;&#x6700;&#x7EC8;gulp-useref&#x5C06;&#x4ECE;&#x8FD9;&#x4E2A;&#x8DEF;&#x5F84;</code>app/src/static/js/a.js<code>&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x3002;&#x7B2C;3&#x5230;5&#x884C;&#x5B9A;&#x4E49;&#x4E86;3&#x4E2A;filter&#xFF0C;&#x8FD9;&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x540E;&#x9762;&#x538B;&#x7F29;&#x51C6;&#x5907;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x6B63;&#x5F0F;&#x770B;stream&#x7684;pipe&#x6D41;&#x7A0B;&#x3002;&#x5148;&#x9009;&#x51FA;&#x8981;&#x5904;&#x7406;&#x7684;HTML&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x521A;&#x624D;&#x5F97;&#x5230;&#x7684;</code>assets<code>&#x5F97;&#x5230;&#x5408;&#x5E76;&#x540E;&#x7684;4&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x7B2C;10&#x5230;12&#x884C;&#x7B5B;&#x9009;&#x51FA;&#x5408;&#x5E76;&#x540E;&#x7684;CSS&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF08;&#x538B;&#x7F29;&#x7C7B;&#x63D2;&#x4EF6;&#x4E0B;&#x7BC7;&#x6587;&#x7AE0;&#x518D;&#x8BB2;&#xFF09;&#xFF0C;&#x7B2C;13&#x5230;16&#x884C;&#x7B5B;&#x9009;&#x51FA;app.js&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x7B2C;17&#x5230;19&#x884C;&#x7B5B;&#x9009;&#x51FA;lib.js&#x8FDB;&#x884C;&#x538B;&#x7F29;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x8981;&#x533A;&#x522B;&#x5BF9;&#x5F85;app.js&#x548C;lib.js&#xFF0C;&#x662F;&#x56E0;&#x4E3A;app.js&#x662F;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x538B;&#x7F29;&#x540E;&#x8981;&#x52A0;&#x4E0A;header&#xFF08;&#x7B2C;15&#x884C;&#xFF0C;&#x4F7F;&#x7528;&#x524D;&#x9762;&#x4ECB;&#x7ECD;&#x8FC7;&#x7684;gulp-header&#x63D2;&#x4EF6;&#xFF09;&#xFF0C;&#x800C;lib.js&#x662F;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x5404;&#x79CD;&#x5E93;&#xFF0C;&#x76F4;&#x63A5;&#x538B;&#x7F29;&#x5373;&#x53EF;&#x3002;&#x540E;&#x9762;&#x8C03;&#x7528;gulp-rev&#x7ED9;&#x538B;&#x7F29;&#x540E;&#x7684;4&#x4E2A;&#x6587;&#x4EF6;&#x52A0;hash&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;</code>assets.restore()<code>&#x5C06;src&#x6E90;&#x6362;&#x56DE;HTML&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x540E;&#x9762;&#x8C03;&#x7528;</code>$.useref()<code>&#xFF0C;&#x56E0;&#x4E3A;</code>$.useref()`&#x505A;&#x66FF;&#x6362;&#x7684;src&#x6E90;&#x662F;HTML&#x6587;&#x4EF6;&#xFF0C;&#x540C;&#x6837;&#x540E;&#x9762;&#x8C03;&#x7528;gulp-rev-replace&#x5C06;&#x5E26;hash&#x7684;&#x6587;&#x4EF6;&#x66FF;&#x6362;&#x56DE;HTML&#xFF0C;&#x5B83;&#x8981;&#x6C42;&#x7684;src&#x6E90;&#x4E5F;&#x5FC5;&#x987B;&#x662F;HTML&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x987A;&#x5E8F;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x51E0;&#x4E2A;&#x63D2;&#x4EF6;&#x63A5;&#x53D7;&#x7684;&#x6E90;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;gulp-rev&#x63A5;&#x53D7;&#x7684;&#x662F;JS&#x3001;CSS&#x6587;&#x4EF6;&#xFF0C;&#x800C;gulp-useref&#x548C;gulp-rev-replace&#x63A5;&#x53D7;&#x7684;&#x662F;HTML&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;gulp-rev-replace&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;gulp-rev&#x8FDB;&#x884C;hash&#x524D;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x5462;&#xFF1F;&#x5176;&#x5B9E;gulp-rev&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;manifest&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x662F;&#x7C7B;&#x4F3C;&#x4E0B;&#x9762;&#x7684;JSON&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">{</div><div class=\"line\">    <span class=\"string\">&quot;static/styles/lib.css&quot;</span>: <span class=\"string\">&quot;static/styles/lib-d41d8cd98f.css&quot;</span></div><div class=\"line\">    <span class=\"string\">&quot;static/js/lib.js&quot;</span>: <span class=\"string\">&quot;static/js/lib-273c2cin3f.js&quot;</span></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x5728;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x91CC;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>.pipe($.rev.manifest())</code>&#x5C06;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x4FDD;&#x5B58;&#x5230;&#x672C;&#x5730;&#x3002;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;gulp-rev-replace&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x8131;&#x79BB;gulp-rev&#x72EC;&#x7ACB;&#x5DE5;&#x4F5C;&#x54E6;&#xFF01;</p>\n<h4 id=\"gulp-html-replace\"><a href=\"#gulp-html-replace\" class=\"headerlink\" title=\"gulp-html-replace\"></a><a href=\"https://www.npmjs.com/package/gulp-html-replace\" target=\"_blank\" rel=\"external\">gulp-html-replace</a></h4><p>gulp-html-replace&#x540C;&#x6837;&#x662F;&#x8BC6;&#x522B;&#x4EE5;build&#x5F00;&#x5934;&#x7684;&#x6CE8;&#x91CA;,&#x4E0E;<a href=\"https://www.npmjs.com/package/gulp-useref\" target=\"_blank\" rel=\"external\">gulp-useref</a>&#x4E0D;&#x540C;&#x7684;&#x662F;&#x4E0D;&#x4F1A;&#x5BF9;build&#x533A;&#x5757;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x800C;&#x662F;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x76F4;&#x63A5;&#x66FF;&#x6362;&#x6389;build&#x533A;&#x5757;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x4E0B;&#x9762;&#x4EE5;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x505A;&#x8BF4;&#x660E;&#xFF1A;</p>\n<p>html&#x7247;&#x6BB5;<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- build:css --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;css/one.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;css/two.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- build:vendorJs --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/one.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/two.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>&#x76F8;&#x5173;&#x4EFB;&#x52A1;&#xFF1A;<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(<span class=\"string\">&apos;index.html&apos;</span>)</div><div class=\"line\">    .pipe(htmlreplace({</div><div class=\"line\">        <span class=\"string\">&apos;css&apos;</span>: <span class=\"string\">&apos;styles.min.css&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos;vendorJs&apos;</span>: <span class=\"string\">&apos;/js/vendor.js&apos;</span></div><div class=\"line\">    }))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;dest/&apos;</span>));</div></pre></td></tr></table></figure></p>\n<p>&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x540E;&#x7684;html&#x7247;&#x6BB5;&#xFF1A;<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;styles.min.css&quot;</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/vendor.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4E0D;&#x7528;&#x518D;&#x505A;&#x8FC7;&#x591A;&#x7684;&#x8BF4;&#x660E;</p>\n<h4 id=\"gulp-file-concat\"><a href=\"#gulp-file-concat\" class=\"headerlink\" title=\"gulp-file-concat\"></a><a href=\"https://www.npmjs.com/package/gulp-file-concat\" target=\"_blank\" rel=\"external\">gulp-file-concat</a></h4><p>&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x6587;&#x4EF6;&#x5408;&#x5E76;&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x53EF;&#x4EE5;&#x5408;&#x5E76;&#x901A;&#x8FC7;document.write&#x5F15;&#x5165;&#x7684;js&#x548C;&#x901A;&#x8FC7;@import&#x5F15;&#x5165;&#x7684;css&#xFF0C;&#x4E0B;&#x9762;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;<br>index.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;a.js&quot;&gt;&lt;\\/script&gt;&apos;</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">&apos;&lt;script src=&quot;b.js&quot;&gt;&lt;\\/script&gt;&apos;</span>);</div><div class=\"line\">}());</div></pre></td></tr></table></figure></p>\n<p>index.css:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">&quot;a.css&quot;</span>);</div><div class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">&quot;b.css&quot;</span>);</div></pre></td></tr></table></figure></p>\n<p>gulpfile.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-file-concat&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-uglify&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ngAnnotate = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-ng-annotate&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;gulp-rename&apos;</span>);</div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">&apos;default&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\">  gulp.src(<span class=\"string\">&apos;index.js&apos;</span>)</div><div class=\"line\">    .pipe(fileconcat({</div><div class=\"line\">        relativeUrls: <span class=\"string\">&apos;./&apos;</span></div><div class=\"line\">    }))</div><div class=\"line\">    .pipe(ngAnnotate())</div><div class=\"line\">    .pipe(uglify())</div><div class=\"line\">    .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>{</div><div class=\"line\">        path.basename = <span class=\"string\">&apos;app&apos;</span>;</div><div class=\"line\">        path.extname = <span class=\"string\">&apos;.js&apos;</span></div><div class=\"line\">    }))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">&apos;build/&apos;</span>));</div><div class=\"line\"></div><div class=\"line\">  gulp.src(<span class=\"string\">&apos;index.css&apos;</span>)</div><div class=\"line\">      .pipe(fileconcat())</div><div class=\"line\">      .pipe(gulp.dest(<span class=\"string\">&apos;build/&apos;</span>));</div><div class=\"line\">});</div></pre></td></tr></table></figure></p>\n<p>&#x8FD9;&#x4E2A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5408;&#x5E76;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#x6765;&#x4ECB;&#x7ECD;&#xFF0C;&#x5176;&#x5B9E;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x548C;<a href=\"https://www.npmjs.com/package/gulp-html-replace\" target=\"_blank\" rel=\"external\">gulp-html-replace</a>&#x8054;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x81F3;&#x4E8E;&#x600E;&#x4E48;&#x7528;&#xFF0C;&#x8BF7;&#x7EC6;&#x7EC6;&#x54C1;&#x5473;&#x5427;</p>\n<h3 id=\"angular&#x76F8;&#x5173;\"><a href=\"#Angular&#x76F8;&#x5173;\" class=\"headerlink\" title=\"Angular&#x76F8;&#x5173;\"></a>Angular&#x76F8;&#x5173;</h3><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x4ECB;&#x7ECD;&#x4E0E;Angular&#x76F8;&#x5173;&#x7684;&#x4E00;&#x4E9B;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-angular-templatecache\"><a href=\"#gulp-angular-templatecache\" class=\"headerlink\" title=\"gulp-angular-templatecache\"></a><a href=\"https://www.npmjs.com/package/gulp-angular-templatecache\" target=\"_blank\" rel=\"external\">gulp-angular-templatecache</a></h4><p>Angular&#x81EA;&#x5E26;&#x7684;<code>$templateCache</code>&#x670D;&#x52A1;&#x53EF;&#x4EE5;&#x628A;Angular&#x4E2D;&#x7528;&#x5230;&#x7684;&#x6240;&#x6709;&#x6A21;&#x677F;&#x7F13;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x529F;&#x80FD;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x5C06;&#x6307;&#x5B9A;&#x7684;HTML&#x6A21;&#x677F;&#x6587;&#x4EF6;&#x4EE5;JS&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5F62;&#x5F0F;&#x6CE8;&#x518C;&#x5728;<code>$tempalteCache</code>&#x670D;&#x52A1;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x6240;&#x6709;&#x7684;&#x6A21;&#x677F;&#x5C31;&#x4F1A;&#x968F;JS&#x6587;&#x4EF6;&#x76F4;&#x63A5;&#x4E00;&#x6B21;&#x6027;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x3002;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x4E5F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;gulp.src&#x4F20;&#x5165;&#x9700;&#x8981;&#x7F13;&#x5B58;&#x7684;HTML&#x6A21;&#x677F;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;<code>.pipe($.angularTemplatecache(filename, options))</code>&#x5373;&#x53EF;&#x3002;&#x5176;&#x4E2D;filename&#x8868;&#x793A;&#x751F;&#x6210;&#x540E;&#x7684;js&#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;templates.js&#xFF0C;&#x5E38;&#x7528;&#x7684;options&#x6709;&#xFF1A;</p>\n<ul>\n<li><code>module</code>&#xFF1A;&#x6307;&#x5B9A;&#x5E0C;&#x671B;&#x5C06;&#x8FD9;&#x4E2A;&#x6A21;&#x677F;&#x653E;&#x5165;&#x54EA;&#x4E2A;Angular&#x7684;module&#x4E2D;&#x3002;</li>\n<li><code>root</code>&#xFF1A;&#x6307;&#x5B9A;&#x6CE8;&#x518C;&#x540E;&#x7684;&#x6A21;&#x677F;&#x8DEF;&#x5F84;&#x524D;&#x7F00;&#x3002;</li>\n</ul>\n<p>&#x751F;&#x6210;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><figcaption><span>templates.js</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(<span class=\"string\">&quot;module name&quot;</span>).run([$templateCache,</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$templateCache</span>) </span>{</div><div class=\"line\">    $templateCache.put(<span class=\"string\">&quot;template1.html&quot;</span>,</div><div class=\"line\">      <span class=\"comment\">// template1.html content (escaped) </span></div><div class=\"line\">    );</div><div class=\"line\">    $templateCache.put(<span class=\"string\">&quot;template2.html&quot;</span>,</div><div class=\"line\">      <span class=\"comment\">// template2.html content (escaped) </span></div><div class=\"line\">    );</div><div class=\"line\">    <span class=\"comment\">// etc. </span></div><div class=\"line\">  }</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h4 id=\"gulp-ng-annotate\"><a href=\"#gulp-ng-annotate\" class=\"headerlink\" title=\"gulp-ng-annotate\"></a><a href=\"https://www.npmjs.com/package/gulp-ng-annotate\" target=\"_blank\" rel=\"external\">gulp-ng-annotate</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x662F;<a href=\"https://github.com/olov/ng-annotate\" target=\"_blank\" rel=\"external\">ng-annotate</a>&#x7684;gulp&#x63D2;&#x4EF6;&#x7248;&#xFF0C;&#x5B83;&#x89E3;&#x51B3;&#x7684;&#x662F;Angular&#x4E2D;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x7684;&#x5C0F;&#x95EE;&#x9898;&#x3002;Angular&#x4E2D;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x540D;&#x6765;&#x8FDB;&#x884C;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF0C;&#x4E00;&#x65E6;&#x538B;&#x7F29;&#xFF0C;&#x53C2;&#x6570;&#x540D;&#x5C31;&#x4F1A;&#x53D8;&#x5316;&#x5BFC;&#x81F4;&#x6CE8;&#x5165;&#x5931;&#x8D25;&#xFF0C;&#x6240;&#x4EE5;&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x901A;&#x8FC7;&#x6DFB;&#x52A0;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x6CE8;&#x5165;&#x3002;&#x6BD4;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular</div><div class=\"line\">    .module(<span class=\"string\">&apos;app.dashboard&apos;</span>)</div><div class=\"line\">    .controller(<span class=\"string\">&apos;DashboardController&apos;</span>, DashboardController);</div><div class=\"line\"></div><div class=\"line\">DashboardController.$inject = [<span class=\"string\">&apos;userAPI&apos;</span>];</div><div class=\"line\"><span class=\"comment\">/* @ngInject */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DashboardController</span> (<span class=\"params\">userAPI</span>) </span>{}</div></pre></td></tr></table></figure>\n<p>&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x53EB;<code>DashboardController</code>&#x7684;controller&#xFF0C;&#x5B83;&#x4F9D;&#x8D56;&#x4E00;&#x4E2A;<code>userAPI</code>&#x7684;service&#x3002;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x6839;&#x636E;&#x7B2C;6&#x884C;&#x7684;&#x6CE8;&#x91CA;<code>/* @ngInject */</code>&#x6765;&#x5E2E;&#x4F60;&#x751F;&#x6210;&#x7B2C;5&#x884C;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5F53;&#x7136;&#x662F;&#x5728;&#x4F60;&#x5FD8;&#x8BB0;&#x5199;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x81EA;&#x5DF1;&#x5199;&#x4E86;&#x5B83;&#x4E0D;&#x4F1A;&#x91CD;&#x590D;&#x751F;&#x6210;&#x3002;&#x9664;&#x4E86;&#x8FD9;&#x79CD;&#x4F7F;&#x7528;<code>$inject</code>&#x8D4B;&#x503C;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5B83;&#x540C;&#x6837;&#x652F;&#x6301;inline&#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @ngInject */</span></div><div class=\"line\">.controller(<span class=\"string\">&apos;DashboardController&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">userAPI</span>) </span>{});</div></pre></td></tr></table></figure>\n<p>&#x4F1A;&#x751F;&#x6210;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.controller(<span class=\"string\">&apos;DashboardController&apos;</span>, [<span class=\"string\">&apos;userAPI&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">userAPI</span>) </span>{}]);</div></pre></td></tr></table></figure>\n<p>&#x5B83;&#x5E38;&#x7528;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x662F;<code>{add: true}</code>&#xFF0C;&#x8868;&#x660E;&#x4EC5;&#x5728;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x6DFB;&#x52A0;&#x3002;</p>\n<blockquote>\n<p>&#x63A8;&#x8350;&#x5728;HTML&#x5934;&#x4E0A;&#x4F7F;&#x7528;<a href=\"https://docs.angularjs.org/error/$injector/strictdi\" target=\"_blank\" rel=\"external\">ng-strict-di</a>&#x5C5E;&#x6027;&#xFF0C;&#x8FD9;&#x6837;&#x5373;&#x4FBF;&#x5728;&#x4E0D;&#x538B;&#x7F29;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E00;&#x65E6;&#x4F60;&#x5FD8;&#x8BB0;&#x663E;&#x5F0F;&#x7684;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x58F0;&#x660E;&#x4F9D;&#x8D56;&#xFF0C;Angular&#x5C06;&#x7ACB;&#x523B;&#x62A5;&#x9519;&#x3002;</p>\n</blockquote>\n<h4 id=\"gulp-protractor\"><a href=\"#gulp-protractor\" class=\"headerlink\" title=\"gulp-protractor\"></a><a href=\"https://www.npmjs.com/package/gulp-protractor\" target=\"_blank\" rel=\"external\">gulp-protractor</a></h4><p>Angular&#x7684;e2e&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;<a href=\"https://github.com/angular/protractor\" target=\"_blank\" rel=\"external\">protractor</a>&#x7684;&#x914D;&#x5957;&#x63D2;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x7684;&#x5728;gulp&#x4E2D;&#x8C03;&#x7528;protractor&#x3002;&#x6709;&#x4E86;&#x8FD9;&#x73A9;&#x610F;&#xFF0C;&#x4F60;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x624B;&#x52A8;&#x5728;gulp&#x4E2D;&#x8C03;&#x7528;protractor&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5904;&#x7406;&#x8FDB;&#x7A0B;&#x795E;&#x9A6C;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x4E00;&#x53E5;&#x7B80;&#x5355;&#x7684;<code>.pipe($.protractor.protractor(options)</code>&#x5373;&#x53EF;&#x3002;&#x5E38;&#x7528;&#x7684;options&#x5305;&#x62EC;&#xFF1A;</p>\n<ul>\n<li><code>configFile</code>&#xFF1A;&#x5373;protractor&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3002;</li>\n<li><code>args</code>&#xFF1A;&#x8C03;&#x7528;protractor&#x65F6;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x662F;&#x4E2A;&#x6570;&#x7EC4;&#x3002;&#x6700;&#x5E38;&#x7528;&#x7684;&#x5C31;&#x662F;&#x6307;&#x5B9A;protractor&#x53EA;&#x8DD1;&#x4E00;&#x4E2A;suite&#x4E86;&#xFF0C;&#x5982;<code>[&apos;--suite&apos;, &apos;loginSuite&apos;]</code>&#xFF0C;&#x8FD9;&#x6837;protractor&#x53EA;&#x4F1A;&#x8DD1;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;loginSuite&#x6240;&#x5305;&#x62EC;&#x7684;spec&#x6587;&#x4EF6;&#x4E86;&#x3002;</li>\n</ul>\n<h4 id=\"gulp-order\"><a href=\"#gulp-order\" class=\"headerlink\" title=\"gulp-order\"></a><a href=\"https://www.npmjs.com/package/gulp-order\" target=\"_blank\" rel=\"external\">gulp-order</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4E25;&#x683C;&#x6765;&#x8BF4;&#x4E0D;&#x662F;&#x4E13;&#x95E8;&#x7ED9;Angular&#x7528;&#x7684;&#xFF0C;&#x4F46;&#x975E;&#x5E38;&#x9002;&#x5408;&#x7528;&#x5728;Angular&#x7684;&#x573A;&#x666F;&#x4E0B;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x7684;&#x662F;Angular&#x81EA;&#x5E26;&#x7684;&#x5305;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5;&#x907F;&#x5F00;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#xFF1A;&#x6240;&#x6709;<code>angular.module</code>&#x7684;&#x5B9A;&#x4E49;&#x8981;&#x6700;&#x5148;&#x6267;&#x884C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5305;&#x542B;module&#x5B9A;&#x4E49;&#x7684;&#x6587;&#x4EF6;&#x7684;script&#x6807;&#x7B7E;&#x8981;&#x5728;&#x522B;&#x7684;&#x6587;&#x4EF6;&#x4E4B;&#x524D;&#x3002;&#x800C;&#x6211;&#x4EEC;&#x5728;&#x4F7F;&#x7528;gulp-inject&#x8FD9;&#x7C7B;&#x63D2;&#x4EF6;&#x5C06;JS&#x6587;&#x4EF6;&#x63D2;&#x5165;&#x7684;&#x65F6;&#x5019;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x5339;&#x914D;&#x7B26;&#x76F4;&#x63A5;&#x9009;&#x4E2D;&#x4E00;&#x5806;&#x6587;&#x4EF6;&#x63D2;&#x5165;&#x7684;&#x3002;&#x8FD9;&#x65F6;&#x5C31;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x63D2;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x5C31;&#x662F;&#x5E72;&#x8FD9;&#x4E2A;&#x4E8B;&#x7684;&#x3002;&#x5B83;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x53C2;&#x6570;&#x6765;&#x6307;&#x5B9A;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x5305;&#x542B;&#x4E00;&#x7EC4;&#x5339;&#x914D;&#x6A21;&#x5F0F;&#xFF0C;&#x5339;&#x914D;&#x5230;&#x9760;&#x524D;&#x6A21;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#x5728;&#x524D;&#xFF0C;&#x5339;&#x914D;&#x9760;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5728;&#x540E;&#x3002;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp</div><div class=\"line\">    .src(<span class=\"string\">&apos;**/*.js&apos;</span>)</div><div class=\"line\">    .pipe($.order([</div><div class=\"line\">        <span class=\"string\">&apos;**/app.module.js&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos;**/*.module.js&apos;</span>,</div><div class=\"line\">        <span class=\"string\">&apos;**/*.js&apos;</span></div><div class=\"line\">    ]))</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6837;&#xFF0C;&#x5B9A;&#x4E49;<code>app</code>module&#x7684;&#x6587;&#x4EF6;&#x5C31;&#x4F1A;&#x5728;&#x6700;&#x524D;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x5176;&#x5B83;&#x5404;&#x4E2A;module&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x6700;&#x540E;&#x662F;&#x5269;&#x4F59;&#x7684;JS&#x6587;&#x4EF6;&#x3002;</p>\n<h3 id=\"&#x538B;&#x7F29;&#x5DE5;&#x5177;&#x7C7B;\"><a href=\"#&#x538B;&#x7F29;&#x5DE5;&#x5177;&#x7C7B;\" class=\"headerlink\" title=\"&#x538B;&#x7F29;&#x5DE5;&#x5177;&#x7C7B;\"></a>&#x538B;&#x7F29;&#x5DE5;&#x5177;&#x7C7B;</h3><p>&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x4ECB;&#x7ECD;&#x5BF9;CSS&#x3001;HTML&#x3001;JS&#x3001;&#x56FE;&#x7247;&#x7B49;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#x7684;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"gulp-csso\"><a href=\"#gulp-csso\" class=\"headerlink\" title=\"gulp-csso\"></a><a href=\"https://www.npmjs.com/package/gulp-csso\" target=\"_blank\" rel=\"external\">gulp-csso</a></h4><p>&#x538B;&#x7F29;CSS&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5B98;&#x65B9;&#x8BF4;&#x5B83;&#x6BD4;&#x5176;&#x5B83;&#x5DE5;&#x5177;&#x538B;&#x5F97;&#x66F4;&#x5C0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EF;&#x4EE5;&#x91CD;&#x5EFA;CSS&#x4EE3;&#x7801;&#x7ED3;&#x6784;&#x4FE1;&#x606F;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x9B3C;&#x3002;</p>\n<h4 id=\"gulp-minify-html\"><a href=\"#gulp-minify-html\" class=\"headerlink\" title=\"gulp-minify-html\"></a><a href=\"https://www.npmjs.com/package/gulp-minify-html\" target=\"_blank\" rel=\"external\">gulp-minify-html</a></h4><p>&#x538B;&#x7F29;HTML&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x901A;&#x5E38;&#x5728;&#x7ED9;gulp-angular-templatecache&#x5904;&#x7406;&#x524D;&#x5148;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x6837;$tempalteCache&#x5F97;&#x5230;&#x7684;&#x5C31;&#x662F;&#x538B;&#x7F29;&#x540E;&#x7684;HTML&#x5B57;&#x7B26;&#x4E32;&#x4E86;&#x3002;</p>\n<h4 id=\"gulp-uglify\"><a href=\"#gulp-uglify\" class=\"headerlink\" title=\"gulp-uglify\"></a><a href=\"https://www.npmjs.com/package/gulp-uglify\" target=\"_blank\" rel=\"external\">gulp-uglify</a></h4><p>&#x538B;&#x7F29;JS&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E0D;&#x591A;&#x4ECB;&#x7ECD;&#x4E86;&#x3002;</p>\n<h4 id=\"gulp-imagemin\"><a href=\"#gulp-imagemin\" class=\"headerlink\" title=\"gulp-imagemin\"></a><a href=\"https://www.npmjs.com/package/gulp-imagemin\" target=\"_blank\" rel=\"external\">gulp-imagemin</a></h4><p>&#x538B;&#x7F29;&#x56FE;&#x7247;&#x7684;&#x5DE5;&#x5177;&#x3002;&#x5728;&#x53D1;&#x5E03;&#x5230;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4E4B;&#x524D;&#x5BF9;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x597D;&#x7684;&#x4E60;&#x60EF;&#xFF0C;&#x53EF;&#x4EE5;&#x6781;&#x5927;&#x7684;&#x63D0;&#x9AD8;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x7684;&#x901F;&#x5EA6;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7528;<a href=\"https://developers.google.com/speed/pagespeed/\" target=\"_blank\" rel=\"external\">Google PageSpeed</a>&#x7ED9;&#x7F51;&#x9875;&#x8BC4;&#x8FC7;&#x5206;&#x7684;&#x8BDD;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7ED9;&#x51FA;&#x9875;&#x9762;&#x4E0A;&#x80FD;&#x88AB;&#x7EE7;&#x7EED;&#x538B;&#x7F29;&#x7684;&#x56FE;&#x7247;&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x53EF;&#x4EE5;&#x5728;&#x4FDD;&#x8BC1;&#x8D28;&#x91CF;&#x635F;&#x5931;&#x5F88;&#x5C0F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x538B;&#x7F29;&#x56FE;&#x7247;&#x3002;</p>\n<h3 id=\"server&#x76F8;&#x5173;\"><a href=\"#server&#x76F8;&#x5173;\" class=\"headerlink\" title=\"server&#x76F8;&#x5173;\"></a>server&#x76F8;&#x5173;</h3><p>&#x8FD9;&#x90E8;&#x5206;&#x4ECB;&#x7ECD;&#x4E0E;&#x672C;&#x5730;&#x8D77;server&#x76F8;&#x5173;&#x7684;&#x63D2;&#x4EF6;&#x3002;</p>\n<h4 id=\"browser-sync\"><a href=\"#browser-sync\" class=\"headerlink\" title=\"browser-sync\"></a><a href=\"https://www.npmjs.com/package/browser-sync\" target=\"_blank\" rel=\"external\">browser-sync</a></h4><p><a href=\"http://www.browsersync.io/\" target=\"_blank\" rel=\"external\">Browsersync</a>&#x5E94;&#x8BE5;&#x7B97;&#x662F;&#x672C;&#x5730;&#x8D77;server&#x7684;&#x6807;&#x914D;&#x4E86;&#x5427;&#xFF0C;&#x6700;&#x5927;&#x7684;&#x7279;&#x6027;&#x662F;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x6D4F;&#x89C8;&#x5668;&#x4E4B;&#x95F4;&#x540C;&#x6B65;&#xFF08;&#x8FD9;&#x4E5F;&#x662F;&#x540D;&#x5B57;&#x7684;&#x7531;&#x6765;&#x5427;&#xFF09;&#xFF0C;&#x8FD9;&#x5728;&#x6D4B;&#x8BD5;&#x65F6;&#x975E;&#x5E38;&#x6709;&#x7528;&#xFF1A;&#x8D77;server&#x4EE5;&#x540E;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x81EA;&#x52A8;&#x6253;&#x5F00;&#x591A;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x4F60;&#x64CD;&#x4F5C;&#x4E00;&#x4E2A;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x540C;&#x6B65;&#x4F60;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5B83;&#x8FD8;&#x53EF;&#x4EE5;&#x914D;&#x5408;gulp&#x7684;<code>watch()</code>&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;live-reload&#x7684;&#x529F;&#x80FD;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x6CA1;&#x6709;gulp&#x5BF9;&#x5E94;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x73A9;&#x610F;&#x672C;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;require&#x8FDB;&#x6765;&#x4F7F;&#x7528;&#x3002;&#x652F;&#x6301;&#x975E;&#x5E38;&#x591A;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x6574;&#x7BC7;&#x6587;&#x7AE0;&#x4E5F;&#x4ECB;&#x7ECD;&#x4E0D;&#x5B8C;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href=\"http://www.browsersync.io/docs/options/\" target=\"_blank\" rel=\"external\">&#x5B83;&#x7684;&#x6587;&#x6863;</a>&#x3002;&#x8FD9;&#x91CC;&#x8981;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x7684;&#x5C31;&#x662F;server&#x5E95;&#x4E0B;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">server: {</div><div class=\"line\">    baseDir: <span class=\"string\">&apos;./app/&apos;</span>,</div><div class=\"line\">    index: <span class=\"string\">&apos;index.html&apos;</span>,</div><div class=\"line\">    middleware: [</div><div class=\"line\">        <span class=\"comment\">// middleware</span></div><div class=\"line\">    ]</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5C31;&#x4E0D;&#x591A;&#x8BF4;&#x4E86;&#xFF0C;&#x4E00;&#x770B;&#x5C31;&#x660E;&#x767D;&#x610F;&#x601D;&#xFF0C;&#x91CD;&#x70B9;&#x6765;&#x770B;&#x7B2C;3&#x4E2A;&#x53C2;&#x6570;<code>middleware</code>&#x3002;middleware&#x5C31;&#x662F;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#x7684;&#x51FD;&#x6570;<code>function (req, res, next){}</code>&#x3002;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x4E2A;request&#x8BF7;&#x6C42;&#x5230;&#x8FBE;server&#xFF0C;&#x4F1A;&#x7ECF;&#x8FC7;middleware&#x6570;&#x7EC4;&#x91CC;&#x9762;&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x51FD;&#x6570;&#x9010;&#x4E2A;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x53EF;&#x4EE5;&#x5728;Browsersync&#x5C42;&#x9762;&#x4E0A;&#x5B9A;&#x4E49;&#x5F88;&#x591A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x9002;&#x7528;&#x4E8E;Node&#x7684;<a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"external\">connect&#x6846;&#x67B6;</a>&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x90FD;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#xFF0C;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x7684;&#x4E24;&#x4E2A;&#x63D2;&#x4EF6;&#x90FD;&#x662F;&#x53EF;&#x7528;&#x4E8E;Browsersync&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;</p>\n<h4 id=\"connect-history-api-fallback\"><a href=\"#connect-history-api-fallback\" class=\"headerlink\" title=\"connect-history-api-fallback\"></a><a href=\"https://www.npmjs.com/package/connect-history-api-fallback\" target=\"_blank\" rel=\"external\">connect-history-api-fallback</a></h4><p>&#x8FD9;&#x4E2A;&#x4E2D;&#x95F4;&#x4EF6;&#x5BF9;&#x4E8E;&#x50CF;Angular&#x8FD9;&#x6837;&#x7684;&#x5355;&#x9875;&#x9762;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#x975E;&#x5E38;&#x7684;&#x5B9E;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;Browsersync&#x9ED8;&#x8BA4;&#x8D77;&#x6765;&#x7684;server&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;server&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;&#x65E0;&#x6CD5;&#x652F;&#x6301;<code>$locationProvider.html5Mode(true);</code>&#x7684;&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x7684;&#x8FBE;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x5982;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> historyApiFallback = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;connect-history-api-fallback&apos;</span>);</div><div class=\"line\"><span class=\"comment\">// ...</span></div><div class=\"line\">middleware: [</div><div class=\"line\">    historyApiFallback()</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6837;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x8DEF;&#x7531;&#x8BF7;&#x6C42;&#x90FD;&#x4F1A;fallback&#x5230;index.html&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x4E5F;&#x6B63;&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x8FD8;&#x652F;&#x6301;&#x7B80;&#x5355;&#x7684;rewrite&#xFF0C;&#x5982;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">historyApiFallback({</div><div class=\"line\">  rewrites: [</div><div class=\"line\">    { <span class=\"keyword\">from</span>: <span class=\"regexp\">/\\/soccer/</span>, to: <span class=\"string\">&apos;/soccer.html&apos;</span>}</div><div class=\"line\">  ]</div><div class=\"line\">});</div></pre></td></tr></table></figure>\n<p>&#x53EF;&#x8C13;&#x662F;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#xFF0C;&#x66F4;&#x591A;&#x7684;rewrite&#x89C4;&#x5219;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5B83;&#x7684;&#x6587;&#x6863;&#x3002;</p>\n<h4 id=\"proxy-middleware\"><a href=\"#proxy-middleware\" class=\"headerlink\" title=\"proxy-middleware\"></a><a href=\"https://www.npmjs.com/package/proxy-middleware\" target=\"_blank\" rel=\"external\">proxy-middleware</a></h4><p>&#x8FD9;&#x4E2A;&#x4E2D;&#x95F4;&#x4EF6;&#x5176;&#x5B9E;&#x4E0E;&#x4E0A;&#x9762;rewrite&#x7684;&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;rewrite&#x53EA;&#x662F;&#x9488;&#x5BF9;get&#x8BF7;&#x6C42;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;proxy&#x53EF;&#x4EE5;&#x4EE3;&#x7406;&#x4EFB;&#x4F55;&#x8BF7;&#x6C42;&#x3002;&#x8BBE;&#x60F3;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x8D77;&#x4E86;&#x4E2A;&#x672C;&#x5730;&#x7684;server&#xFF0C;&#x901A;&#x5E38;&#x4F7F;&#x7528;<a href=\"https://docs.angularjs.org/api/ngMock\" target=\"_blank\" rel=\"external\">ngMock</a>&#x6765;&#x5B9E;&#x73B0;&#x5BF9;API&#x7684;&#x6A21;&#x62DF;&#xFF0C;&#x4F46;&#x6709;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x8FD9;&#x4E2A;&#x672C;&#x5730;&#x7684;server&#x53EF;&#x4EE5;&#x5BF9;&#x63A5;&#x771F;&#x6B63;&#x7684;API server&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x4E2D;&#x95F4;&#x4EF6;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x7684;&#x5B8C;&#x6210;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A;&#x5C06;<code>/api</code>&#x5F00;&#x5934;&#x7684;&#x8BF7;&#x6C42;&#x4EE3;&#x7406;&#x5230;&#x771F;&#x6B63;&#x7684;API server&#x4E0A;&#x53BB;&#x3002;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x4E5F;&#x662F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> proxy = <span class=\"built_in\">require</span>(<span class=\"string\">&apos;proxy-middleware&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> proxyOptions = url.parse(<span class=\"string\">&apos;https://real-server.com/api&apos;</span>);</div><div class=\"line\">proxyOptions.route = <span class=\"string\">&apos;/api&apos;</span>;</div><div class=\"line\"><span class=\"comment\">// ...</span></div><div class=\"line\">middleware: [</div><div class=\"line\">    proxy(proxyOptions)</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<p>&#x8FD9;&#x6837;&#xFF0C;&#x6240;&#x6709;&#x4EE5;<code>/api</code>&#x5F00;&#x5934;&#x7684;API&#x8BF7;&#x6C42;&#x5C31;&#x4F1A;&#x88AB;&#x4EE3;&#x7406;&#x5230;<code>https://real-server.com/api</code>&#x4E0A;&#x53BB;&#xFF0C;&#x5982;<code>/api/user/123</code>&#x8BF7;&#x6C42;&#x7684;&#x771F;&#x5B9E;&#x5730;&#x5740;&#x662F;<code>https://real-server.com/api/user/123</code>&#x3002;</p>\n<h3 id=\"&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x76F8;&#x5173;\"><a href=\"#&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x76F8;&#x5173;\" class=\"headerlink\" title=\"&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x76F8;&#x5173;\"></a>&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x76F8;&#x5173;</h3><p>&#x8FD9;&#x90E8;&#x5206;&#x7684;&#x63D2;&#x4EF6;&#x4E0E;&#x4F60;&#x9009;&#x7528;&#x7684;&#x5177;&#x4F53;&#x7684;&#x8BED;&#x8A00;&#x4EE5;&#x53CA;&#x9884;&#x5904;&#x7406;&#x5668;&#x6709;&#x5173;&#x3002;</p>\n<h4 id=\"gulp-jshint-&#x4E0E;-gulp-jscs\"><a href=\"#gulp-jshint-&#x4E0E;-gulp-jscs\" class=\"headerlink\" title=\"gulp-jshint &#x4E0E; gulp-jscs\"></a><a href=\"https://www.npmjs.com/package/gulp-jshint\" target=\"_blank\" rel=\"external\">gulp-jshint</a> &#x4E0E; <a href=\"https://www.npmjs.com/package/gulp-jscs\" target=\"_blank\" rel=\"external\">gulp-jscs</a></h4><p>&#x5927;&#x540D;&#x9F0E;&#x9F0E;&#x7684;<a href=\"\">jshint</a>&#x548C;<a href=\"\">jscs</a>&#x7684;gulp&#x63D2;&#x4EF6;&#x7248;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x63D2;&#x4EF6;&#x9664;&#x4E86;&#x5E2E;&#x4F60;&#x505A;&#x4EE3;&#x7801;&#x7684;&#x4E00;&#x4E9B;&#x9759;&#x6001;&#x68C0;&#x67E5;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x6700;&#x5927;&#x7A0B;&#x5EA6;&#x7684;&#x5E2E;&#x52A9;&#x4F60;&#x5B9A;&#x4E49;&#x6240;&#x9700;&#x8981;&#x7684;&#x4EE3;&#x7801;&#x98CE;&#x683C;&#x3002;&#x5C24;&#x5176;&#x662F;<code>jscs</code>&#xFF0C;&#x5B9A;&#x4E49;&#x7684;&#x975E;&#x5E38;&#x7EC6;&#x81F4;&#x3002;&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x9700;&#x8981;<code>function (a, b) {</code>&#xFF0C;&#x5373;function&#x5173;&#x952E;&#x5B57;&#x540E;&#x9762;&#x7A7A;&#x4E00;&#x683C;&#xFF0C;&#x53C2;&#x6570;&#x4E4B;&#x95F4;&#x7A7A;&#x4E00;&#x683C;&#xFF0C;&#x53C2;&#x6570;&#x5217;&#x8868;&#x540E;&#x9762;&#x7684;&#x5C0F;&#x62EC;&#x53F7;&#x4E0E;&#x5927;&#x62EC;&#x53F7;&#x4E4B;&#x95F4;&#x7A7A;&#x4E00;&#x683C;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x9700;&#x6C42;&#x901A;&#x8FC7;<code>jscs</code>&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5176;&#x6587;&#x6863;&#x3002;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;task&#x653E;&#x5728;build&#x4E4B;&#x524D;&#xFF0C;&#x5F3A;&#x5236;&#x6240;&#x6709;&#x4EBA;&#x5728;build&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4FEE;&#x6539;&#x4E0D;&#x7B26;&#x5408;&#x8981;&#x6C42;&#x7684;&#x4EE3;&#x7801;&#x98CE;&#x683C;&#x3002;&#x6211;&#x4EEC;&#x8FD8;&#x5C1D;&#x8BD5;&#x8FC7;&#x5C06;<code>gulp jshint jscs</code>&#x653E;&#x5165;git commit&#x7684;hook&#x4E2D;&#xFF0C;&#x6BCF;&#x6B21;commit&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x98CE;&#x683C;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x7B26;&#x5408;&#x8981;&#x6C42;&#xFF0C;&#x4E0D;&#x51C6;&#x8FDB;&#x884C;commit&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>\n<h4 id=\"gulp-jade\"><a href=\"#gulp-jade\" class=\"headerlink\" title=\"gulp-jade\"></a><a href=\"https://www.npmjs.com/package/gulp-jade\" target=\"_blank\" rel=\"external\">gulp-jade</a></h4><p>&#x7F16;&#x8BD1;jade&#x6A21;&#x677F;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E5F;&#x4E0D;&#x8FC7;&#x591A;&#x4ECB;&#x7ECD;&#x3002;&#x53EA;&#x4ECB;&#x7ECD;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;jade&#x53D8;&#x91CF;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x901A;&#x5E38;&#x6211;&#x4EEC;&#x7684;Angular&#x5E94;&#x7528;&#x7684;<code>ng-app</code>&#x540D;&#x79F0;&#x5728;&#x6D4B;&#x8BD5;(e2e)&#x4E0E;&#x975E;&#x6D4B;&#x8BD5;&#x65F6;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E2A;&#x5B9A;&#x4E49;&#x6210;&#x53D8;&#x91CF;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;jade&#x6A21;&#x677F;&#x65F6;&#x4F20;&#x5165;&#x3002;&#x5982;&#x6211;&#x4EEC;&#x7684;index.jade&#x7684;&#x5934;&#x662F;&#x8FD9;&#x6837;&#x5B9A;&#x4E49;&#x7684;<code>html(lang=&quot;en&quot;, ng-app= app)</code>&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x4F7F;&#x7528;<code>.pipe($.jade({locals: {app: &apos;test&apos;}}))</code>&#x5373;&#x53EF;&#x6307;&#x5B9A;&#x60F3;&#x8981;&#x7684;<code>ng-app</code>&#x7684;&#x540D;&#x5B57;&#x3002;</p>\n<h4 id=\"gulp-stylus\"><a href=\"#gulp-stylus\" class=\"headerlink\" title=\"gulp-stylus\"></a><a href=\"https://www.npmjs.com/package/gulp-stylus\" target=\"_blank\" rel=\"external\">gulp-stylus</a></h4><p>&#x7F16;&#x8BD1;stylus&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x4E0D;&#x591A;&#x8BF4;&#x3002;</p>\n<h4 id=\"gulp-autoprefixer\"><a href=\"#gulp-autoprefixer\" class=\"headerlink\" title=\"gulp-autoprefixer\"></a><a href=\"https://www.npmjs.com/package/gulp-autoprefixer\" target=\"_blank\" rel=\"external\">gulp-autoprefixer</a></h4><p>&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x6700;&#x65E9;&#x5728;<a href=\"/2014/01/12/what-i-learn-from-making-resume/\">&#x4ECE;&#x505A;&#x7B80;&#x5386;&#x4E2D;&#x5B66;&#x5230;&#x7684;&#x77E5;&#x8BC6;</a>&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x5C31;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5F53;&#x65F6;&#x4ECB;&#x7ECD;&#x7684;&#x662F;grunt&#x7248;&#x672C;&#xFF0C;&#x73B0;&#x5728;&#x65F6;gulp&#x7248;&#x672C;&#x3002;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x7684;&#x57FA;&#x672C;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x8BA9;&#x4F60;&#x5728;&#x4E66;&#x5199;CSS3&#x7684;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#x65F6;&#x4E0D;&#x7528;&#x5173;&#x5FC3;&#x4E0D;&#x540C;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x524D;&#x7F00;&#x95EE;&#x9898;&#xFF0C;&#x5B83;&#x4F1A;&#x81EA;&#x52A8;&#x5E2E;&#x52A9;&#x6DFB;&#x52A0;&#x5404;&#x79CD;&#x6D4F;&#x89C8;&#x5668;&#x524D;&#x7F00;&#x3002;</p>\n","excerpt":"<p>这里介绍一些gulp比较常用的插件，包括util工具类、stream相关、inject相关、Angular相关、压缩工具类、server相关、特定语言相关等。<br>","more":"</p>\n<h3 id=\"util工具类\"><a href=\"#util工具类\" class=\"headerlink\" title=\"util工具类\"></a>util工具类</h3><p>这个分类下主要介绍一些辅助工具类的插件。</p>\n<h4 id=\"gulp-load-plugins\"><a href=\"#gulp-load-plugins\" class=\"headerlink\" title=\"gulp-load-plugins\"></a><a href=\"https://www.npmjs.com/package/gulp-load-plugins\">gulp-load-plugins</a></h4><p>顾名思义，本插件的功能就是帮你自动require你在<code>package.json</code>中声明的依赖。只要一句<code>var $ = require(&#39;gulp-load-plugins&#39;)()</code>，则<code>package.json</code>中声明的<code>gulp-</code>或<code>gulp.</code>开头的插件就会自动被放在变量<code>$</code>下面。如<code>$.util</code>就等于<code>require(&#39;gulp-util&#39;)</code>，而有两个连字符的插件则会自动命名为驼峰格式，如<code>$.taskListing</code>则等于<code>require(&#39;gulp-task-listing&#39;)</code>。有了这个插件，就不用一个一个的require了。这个插件还有一些常用的参数配置，这里列几个常用的：</p>\n<ul>\n<li><code>lazyload: true</code>，用到这个插件的时候再去require，默认为true。</li>\n<li><code>rename: {&#39;gulp-task-listing&#39;: &#39;list&#39;}</code>，如果有些插件名字太长，可以使用该参数重命名。</li>\n<li><code>scope: [&#39;dependencies&#39;]</code>，本插件默认会扫描<code>package.json</code>里的所有dependence，可以使用该参数进行限制。</li>\n</ul>\n<p>要使用这些参数只要在require的时候传入即可，如<code>require(&#39;gulp-load-plugins&#39;)({lazy: true})</code>。</p>\n<h4 id=\"gulp-task-loader\"><a href=\"#gulp-task-loader\" class=\"headerlink\" title=\"gulp-task-loader\"></a><a href=\"https://www.npmjs.com/package/gulp-task-loader\">gulp-task-loader</a></h4><p>这个插件的作用很简单，就是可以将gulpfile.js拆分成多个文件，放到目录下，是任务更清晰，结构更分明，使用方法如下：<br>clear.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> del.sync(<span class=\"keyword\">this</span>.opts.destDir);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>copy.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.gulp.src(<span class=\"keyword\">this</span>.opts.publicDir)</div><div class=\"line\">     .pipe(<span class=\"keyword\">this</span>.gulp.dest(<span class=\"keyword\">this</span>.opts.destDir));</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">module</span>.exports.dependencies = [<span class=\"string\">'clean'</span>];</div></pre></td></tr></table></figure></p>\n<p>gulpfile.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> config = &#123;</div><div class=\"line\">    pkg: <span class=\"built_in\">require</span>(<span class=\"string\">'./package.json'</span>),</div><div class=\"line\">    publicDir: [<span class=\"string\">'./&#123;public,public/**&#125;'</span>],</div><div class=\"line\">    destDir: <span class=\"string\">'dest'</span>,</div><div class=\"line\">    version: <span class=\"string\">\"0.01\"</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'gulp-task-loader'</span>)(config);</div><div class=\"line\">gulp.task(<span class=\"string\">'build'</span>, [<span class=\"string\">'clean'</span>, <span class=\"string\">'copy'</span>);</div></pre></td></tr></table></figure></p>\n<p>可以看到copy.js中最后有这样一行代码<code>module.exports.dependencies = [&#39;clean&#39;];</code>,这个是用做任务依赖的，只有前一个任务执行完毕后才能执行当前任务，使用起来还是很简单的</p>\n<h4 id=\"gulp-task-listing\"><a href=\"#gulp-task-listing\" class=\"headerlink\" title=\"gulp-task-listing\"></a><a href=\"https://www.npmjs.com/package/gulp-task-listing\">gulp-task-listing</a></h4><p>这个插件的作用也很容易猜，它可以打印出<code>gulpfile.js</code>中定义的所有task，这个插件我们在<a href=\"/2015/03/24/refactor-your-gulpfile/\">重构你的gulpfile</a>这篇文章的最后介绍过，值得一提的是它还可以根据task的名字确定它是不是一个子task，比如带有<code>:</code>、<code>-</code>、<code>_</code>的task就被认为是子task。我一般把这个插件作为默认的task来调用，如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'help'</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">'help'</span>, $.taskListing);</div></pre></td></tr></table></figure>\n<p>这样，如果只执行<code>gulp</code>的话就会打印出所有定义好的task，非常实用。</p>\n<h4 id=\"yargs\"><a href=\"#yargs\" class=\"headerlink\" title=\"yargs\"></a><a href=\"https://www.npmjs.com/package/yargs\">yargs</a></h4><p>严格的说，<code>yargs</code>不是专门用于gulp的，它是Node中处理命令行参数的通用解决方案。只要一句代码<code>var args = require(&#39;yargs&#39;).argv;</code>就可以让命令行的参数都放在变量<code>args</code>上，非常方便。它可以处理的参数类型也是多种多样的：</p>\n<ul>\n<li>单字符的简单参数，如传入<code>-m=5</code>或<code>-m 5</code>，则可得到<code>args.m = 5</code>。</li>\n<li>多字符参数（必须使用双连字符），如传入<code>--test=5</code>或<code>--test 5</code>，则可得到<code>args.test = 5</code>。</li>\n<li>不带值的参数，如传入<code>--mock</code>，则会被认为是布尔类型的参数，可得到<code>args.mock = true</code>。</li>\n</ul>\n<p>除此之外，还支持很多其他类型的传参方式，具体可参考<a href=\"https://www.npmjs.com/package/yargs\">它的文档</a>。</p>\n<h4 id=\"gulp-util\"><a href=\"#gulp-util\" class=\"headerlink\" title=\"gulp-util\"></a><a href=\"https://www.npmjs.com/package/gulp-util\">gulp-util</a></h4><p>gulp-util带有很多方便的函数，其中最常用的应该就是log了。<code>$.util.log()</code>支持传入多个参数，打印结果会将多个参数用空格连接起来。它与<code>console.log</code>的区别就是所有<code>$.util.log</code>的结果会自动带上时间前缀。另外，它还支持颜色，如<code>$.util.log($.util.colors.magenta(&#39;123&#39;));</code>打印出来的123是品红色的。其实<code>$.util.colors</code>就是一个<a href=\"https://github.com/sindresorhus/chalk\">chalk</a>的实例，而chalk是专门用来处理命令行打印着色的一个工具。</p>\n<h4 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a><a href=\"https://www.npmjs.com/package/del\">del</a></h4><p>grunt自身提供一个<a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a>用来处理支持glob匹配的删除，而del就是gulp上对应的工具。del支持和<code>gulp.src</code>参数同样的匹配，除此之外，它的第二个参数还支持一个回调函数，当删除完成以后执行，所以这是一个异步的删除。常用的调用方法为：<code>del([xxx], callback)</code>。</p>\n<h4 id=\"gulp-bytediff\"><a href=\"#gulp-bytediff\" class=\"headerlink\" title=\"gulp-bytediff\"></a><a href=\"https://www.npmjs.com/package/gulp-bytediff\">gulp-bytediff</a></h4><p>这是一个统计文件大小变化的工具，通常与压缩类工具放在一起实用，比如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(<span class=\"string\">'**/*.html'</span>)</div><div class=\"line\">    .pipe($.bytediff.start())</div><div class=\"line\">    .pipe($.minifyHtml(&#123;empty: <span class=\"literal\">true</span>&#125;))</div><div class=\"line\">    .pipe($.bytediff.stop(bytediffFormatter))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'dist'</span>));</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bytediffFormatter</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> difference = (data.savings &gt; <span class=\"number\">0</span>) ? <span class=\"string\">' smaller.'</span> : <span class=\"string\">' larger.'</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> data.fileName + <span class=\"string\">' went from '</span> +</div><div class=\"line\">        (data.startSize / <span class=\"number\">1000</span>).toFixed(<span class=\"number\">2</span>) + <span class=\"string\">' kB to '</span> +</div><div class=\"line\">        (data.endSize / <span class=\"number\">1000</span>).toFixed(<span class=\"number\">2</span>) + <span class=\"string\">' kB and is '</span> +</div><div class=\"line\">        formatPercent(<span class=\"number\">1</span> - data.percent, <span class=\"number\">2</span>) + <span class=\"string\">'%'</span> + difference;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在压缩的pipe前后加上<code>$.bytediff.start()</code>和<code>$.bytediff.stop(callback)</code>，即可统计压缩前后文件的变化。在callback中传入的参数data上，可以访问到很多变量，如文件名，变化前后的大小，变化百分比等等。</p>\n<h4 id=\"gulp-print\"><a href=\"#gulp-print\" class=\"headerlink\" title=\"gulp-print\"></a><a href=\"https://www.npmjs.com/package/gulp-print\">gulp-print</a></h4><p>这个插件的作用很简单，打印出stream里面的所有文件名，通常调试的时候比较需要。</p>\n<h4 id=\"gulp-bump\"><a href=\"#gulp-bump\" class=\"headerlink\" title=\"gulp-bump\"></a><a href=\"https://www.npmjs.com/package/gulp-bump\">gulp-bump</a></h4><p>这个插件也可以顾名思义：用来升级版本用的，废话不说，直接看例子吧：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> gulp</div><div class=\"line\">    .src(<span class=\"string\">'package.json'</span>)</div><div class=\"line\">    .pipe($.bump(options))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'dist'</span>));</div></pre></td></tr></table></figure>\n<p>重点来看这里的options，我们可直接传递一个具体的version进去，也可以按照Node的版本规范传递一个type进去，让其自己生成对应的version：</p>\n<ul>\n<li><code>version</code>，直接传递要升级到的版本号，如<code>1.2.3</code>。</li>\n<li><code>type</code>，可接受的值包括下面四个，倘若现在的版本号为<code>1.2.3</code>，则对应的新版本号为：<ul>\n<li>prerelease：<code>1.2.3-0</code></li>\n<li>patch：<code>1.2.4</code></li>\n<li>minor：<code>1.3.0</code></li>\n<li>major：<code>2.0.0</code></li>\n</ul>\n</li>\n</ul>\n<p>最终这个升级后的版本号会反映在<code>package.json</code>中，当然，你也可以在gulp.src中传入更多的文件（如<code>bower.json</code>）来替换更多的文件。</p>\n<h4 id=\"gulp-header\"><a href=\"#gulp-header\" class=\"headerlink\" title=\"gulp-header\"></a><a href=\"https://www.npmjs.com/package/gulp-header\">gulp-header</a></h4><p>这个工具用来在压缩后的JS、CSS文件中添加头部注释，你可以包含任意想要的信息，通常就是作者、描述、版本号、license等，比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getHeader</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> pkg = <span class=\"built_in\">require</span>(<span class=\"string\">'package.json'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> template = [<span class=\"string\">'/**'</span>,</div><div class=\"line\">        <span class=\"string\">' * &lt;%= pkg.name %&gt; - &lt;%= pkg.description %&gt;'</span>,</div><div class=\"line\">        <span class=\"string\">' * @authors &lt;%= pkg.authors %&gt;'</span>,</div><div class=\"line\">        <span class=\"string\">' * @version v&lt;%= pkg.version %&gt;'</span>,</div><div class=\"line\">        <span class=\"string\">' * @link &lt;%= pkg.homepage %&gt;'</span>,</div><div class=\"line\">        <span class=\"string\">' * @license &lt;%= pkg.license %&gt;'</span>,</div><div class=\"line\">        <span class=\"string\">' */'</span>,</div><div class=\"line\">        <span class=\"string\">''</span></div><div class=\"line\">    ].join(<span class=\"string\">'\\n'</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> $.header(template, &#123;</div><div class=\"line\">        pkg: pkg</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个函数将<code>package.json</code>中的各种信息提取出来，变成头部注释，只要在压缩的pipe中调用<code>.pipe(getHeader())</code>即可。</p>\n<h3 id=\"stream相关\"><a href=\"#stream相关\" class=\"headerlink\" title=\"stream相关\"></a>stream相关</h3><p>这个部分主要介绍一些跟stream操作有关的插件。</p>\n<h4 id=\"gulp-filter\"><a href=\"#gulp-filter\" class=\"headerlink\" title=\"gulp-filter\"></a><a href=\"https://www.npmjs.com/package/gulp-filter\">gulp-filter</a></h4><p>gulp-filter可以把stream里的文件根据一定的规则进行筛选过滤。比如<code>gulp.src</code>中传入匹配符匹配了很多文件，可以把这些文件pipe给gulp-filter作二次筛选，如<code>gulp.src(&#39;**/*.js&#39;).pipe($.filter(**/a/*.js))</code>，本来选中了所有子文件下的js文件，经过筛选后变成名为a的子文件夹下的js文件。那有人要问了，为什么不直接将需要的筛选传入<code>gulp.src</code>，干嘛要多筛选一步呢？这里面有两种情况：</p>\n<ul>\n<li><code>gulp.src</code>与<code>$.filter</code>中间可能需要别的处理，比如我对所有文件做了操作1以后，还需要筛选出一部分做操作2。</li>\n<li>第二种情况就要谈到gulp-filter的另外一个特性：筛选之后还可以restore回去。比如我对所有文件做了操作1，筛选了一部分做操作2，最后要把所有的文件都拷贝到最终的位置。代码如下：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> filter = $.filter(<span class=\"string\">'**/a/*.js'</span>);</div><div class=\"line\">gulp.src(<span class=\"string\">'**/*.js'</span>)</div><div class=\"line\">    .pipe(action1())</div><div class=\"line\">    .pipe(filter)</div><div class=\"line\">    .pipe(action2())</div><div class=\"line\">    .pipe(filter.restore())</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'dist'</span>))</div></pre></td></tr></table></figure>\n<p>可以看到，如果没有restore这个操作，那么拷贝到最终位置的文件将只包含被过滤出来的文件，这样一restore，所有的文件都被拷贝了。</p>\n<h4 id=\"gulp-flatten\"><a href=\"#gulp-flatten\" class=\"headerlink\" title=\"gulp-flatten\"></a><a href=\"https://www.npmjs.com/package/gulp-flatten\">gulp-flatten</a></h4><p>gulp-flatten非常实用，可能知道别的库中flatten函数的同学已经猜到它是干嘛的了。比如<code>gulp.src(&#39;**/*.js&#39;)</code>匹配了很多文件，包括<code>a/b/c.js</code>，<code>d/e.js</code>，<code>f/g/h/i/j/k.js</code>，<code>l.js</code>，这些文件的层级都不一样，一旦我们将这个文件pipe给<code>$.flatten()</code>，则所有的文件夹层级都会去掉，最终的文件将是<code>c.js</code>，<code>e.js</code>，<code>k.js</code>，<code>l.js</code>，在一些场景下还是非常有用的。</p>\n<h4 id=\"gulp-plumber\"><a href=\"#gulp-plumber\" class=\"headerlink\" title=\"gulp-plumber\"></a><a href=\"https://www.npmjs.com/package/gulp-plumber\">gulp-plumber</a></h4><p>这个插件的作用简单来说就是一旦pipe中的某一steam报错了，保证下面的steam还继续执行。因为pipe默认的onerror函数会把剩下的stream给unpipe掉，这个插件阻止了这种行为。那它一般用于哪种场景呢？比如，代码每次build之前要跑一遍jshint和jscs来确保所有代码都符合规范，但一旦某些代码不符合规范，整个build流程就会停止，这个时候就需要gulp-plumber出场了。如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'build'</span>, [<span class=\"string\">'jslint'</span>, <span class=\"string\">'xxxx'</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">'jslint'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> gulp</div><div class=\"line\">        .src(config.js.all)</div><div class=\"line\">        .pipe($.plumber())</div><div class=\"line\">        .pipe($.jshint())</div><div class=\"line\">        .pipe($.jscs()); </div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>这样，一旦jshint或jscs报错，整个build流程还是可以继续走下去的，而且gulp-plumber会给出一个报错提醒我们：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[<span class=\"number\">16</span>:<span class=\"number\">52</span>:<span class=\"number\">36</span>] Plumber found unhandled <span class=\"string\">error:</span></div><div class=\"line\"> Error <span class=\"keyword\">in</span> plugin <span class=\"string\">'gulp-jshint'</span></div><div class=\"line\"><span class=\"string\">Message:</span></div><div class=\"line\">    JSHint failed <span class=\"string\">for:</span> xxxx.js</div></pre></td></tr></table></figure>\n<h4 id=\"gulp-if\"><a href=\"#gulp-if\" class=\"headerlink\" title=\"gulp-if\"></a><a href=\"https://www.npmjs.com/package/gulp-if\">gulp-if</a></h4><p>这个插件的功能也很简单，可以条件性的添加stream，如<code>.pipe($.if(flag, action1()))</code>，则只会在<code>flag</code>变量为true时才会将<code>action1()</code>添加到stream中去。其实不用这个插件也可以达到类似的效果，那就是gulp-util里有一个函数叫做<code>noop()</code>，也就是no operation，这个函数其实是返回一个什么都不干的空stream。利用这个函数我们可以这么写：<code>.pipe(flag ? action1() : $.util.noop())</code>，与上例的效果是一样的。</p>\n<h4 id=\"merge-stream\"><a href=\"#merge-stream\" class=\"headerlink\" title=\"merge-stream\"></a><a href=\"https://www.npmjs.com/package/merge-stream\">merge-stream</a></h4><p>一个gulp的task只能返回一个stream，但有的时候有这么一种情景：有两类文件，它们的原始位置和处理后的位置都是不同的，但它们的处理流程相同。由于<code>gulp.src</code>和<code>gulp.dest</code>的参数不同，我们就需要写两个task来分别完成这个任务，一方面略显重复，另一方面逻辑上来讲这两个task本来就是处理同样的事情的。这种情况就需要merge-stream登场了，它的作用就是将多个stream合成一个返回。比如下面这个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</div><div class=\"line\">gulp.task(<span class=\"string\">'jade'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> stream1 = jade(src1, dest1);</div><div class=\"line\">    <span class=\"keyword\">var</span> stream2 = jade(src2, dest2);</div><div class=\"line\">    <span class=\"keyword\">return</span> merge(stream1, stream2);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jade</span> (<span class=\"params\">src, dest</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> gulp</div><div class=\"line\">        .src(src)</div><div class=\"line\">        .pipe($.jade())</div><div class=\"line\">        .pipe(gulp.dest(dest));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以看到，处理的流程被提取出来放入一个函数，它接受两个参数，分别是src和dest。然后在task中直接调用这个函数生成两个stream，然后返回merge-stream合并后的结果。</p>\n<h4 id=\"run-sequence\"><a href=\"#run-sequence\" class=\"headerlink\" title=\"run-sequence\"></a><a href=\"https://www.npmjs.com/package/run-sequence\">run-sequence</a></h4><p>gulp里的task都是异步并发执行的，有的时候我们需要一连串的task按顺序执行，这时就需要run-sequence登场了。它的调用很简单：<code>runSequence(&#39;task1&#39;, &#39;task2&#39;, [&#39;task3&#39;, &#39;task4&#39;], &#39;task5&#39;)</code>，这里的task都是gulp定义好的task名称，task1完成后才会执行task2，以此类推。注意到task3和task4被放在中括号里了，这表明，task3和task4可以并发执行的，但两个都执行完后才会执行task5。这里要说明的是，每个task要么返回一个stream，即<code>return gulp.src().pipe().pipe()</code>，要么支持回调函数，即<code>gulp.task(&#39;task1&#39;, function (done) { action1(done); })</code>，满足了这两点才能保证正常的执行顺序，因为这是gulp对<a href=\"https://github.com/gulpjs/gulp/blob/master/docs/API.md#async-task-support\">异步task的基本要求</a>。</p>\n<h3 id=\"inject相关\"><a href=\"#inject相关\" class=\"headerlink\" title=\"inject相关\"></a>inject相关</h3><p>这个部分主要介绍一些将JS/CSS自动插入到HTML的相关插件。</p>\n<h4 id=\"wiredep\"><a href=\"#wiredep\" class=\"headerlink\" title=\"wiredep\"></a><a href=\"https://www.npmjs.com/package/wiredep\">wiredep</a></h4><p>wiredep就是wire dependence的意思，它的作用就是把<code>bower.json</code>中声明的dependence自动的包含到HTML中去。要插入文件，wiredep需要解决两个问题：</p>\n<ul>\n<li>插入的位置：wiredep通过识别HTML中的注释来识别插入位置，如</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- bower:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div></pre></td></tr></table></figure>\n<p>不同类型的文件被插入到不同的区块。</p>\n<ul>\n<li>插入什么文件：要插入的文件列表自然来自<code>bower.json</code>，每个bower安装的依赖库，根目录下边都有一个自己的<code>bower.json</code>文件，其中的<code>main</code>字段指明了使用这个库需要包含的文件，wiredep最终包含的文件列表就来自这个字段。有些情况下，库自身的<code>bower.json</code>的main字段可能会多包含文件或少包含文件，如果想要定制这个列表，则可以在自己的<code>bower.json</code>中使用<code>overrides</code>字段，如下面的代码覆盖了<code>mdi</code>这个库的<code>main</code>字段。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"overrides\"</span>: &#123;</div><div class=\"line\">  <span class=\"string\">\"mdi\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"main\"</span>: [</div><div class=\"line\">      <span class=\"string\">\"css/materialdesignicons.css\"</span></div><div class=\"line\">    ]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>wiredep插件支持很多参数，常用的主要有两个：</p>\n<ul>\n<li>bowerJson：指定<code>bower.json</code>的内容，注意这个字段不是<code>bower.json</code>文件的位置，这个参数需要使用require后的结果赋值：<code>require(&#39;bower.json&#39;)</code>。</li>\n<li>directory：指定存放bower安装后的依赖包的路径，通常是bower_components。注意最终插入到HTML中的文件列表的路径是index.html文件相对于本文件夹的相对路径。</li>\n</ul>\n<p>使用wiredep也比较简单，直接把它传入到stream中即可，如<code>gulp.src(&#39;index.html&#39;).pipe(wiredep(options))</code>。</p>\n<h4 id=\"gulp-inject\"><a href=\"#gulp-inject\" class=\"headerlink\" title=\"gulp-inject\"></a><a href=\"https://www.npmjs.com/package/gulp-inject\">gulp-inject</a></h4><p>这个插件的作用与wiredep类似，不同的是可以自己任意指定需要插入文件的列表。它同样是利用注释来寻找插入的位置，它识别的默认注释为<code>&lt;!-- inject:js --&gt;</code>，但更加智能：</p>\n<ul>\n<li>支持各种模板语言：可以根据<code>gulp.src</code>指定的源文件自动识别注释和插入内容，除了支持HTML外，还支持jade、haml等。若源为jade文件，则识别的注释为<code>//- inject:js</code>，插入的内容为：<code>script(src=&quot;&lt;filename&gt;.js&quot;)</code>。</li>\n<li>配置非常灵活：<ul>\n<li>name：默认识别的注释标签格式为<code>&lt;!-- name:ext --&gt;</code>，这里的name默认值就是“inject”，而ext的默认值是要插入的文件的扩展名。那么name属性可配置意味着可以添加自定义的插入区块，如<code>&lt;!-- production:js --&gt;</code>，这个标签可以只插入生产环境需要包含的JS文件。</li>\n<li>starttag和endtag：支持自定义需要识别的注释内容。</li>\n<li>addPrefix和addSuffix：支持在插入文件的路径上自定义前缀、后缀。</li>\n<li>relative：指定插入文件的路径是否为相对路径。</li>\n<li>ingorePath：指定插入文件的路径前面会忽略掉指定的路径。</li>\n<li>read：这个参数通常给false，不需要真正的去读取文件。</li>\n</ul>\n</li>\n</ul>\n<p>这个插件的使用场景通常是，我们需要index里有多个区块，比如上面name的例子，只有当为production环境编译的时候才去包含相关的文件。</p>\n<h4 id=\"gulp-useref-与-gulp-rev、gulp-rev-replace\"><a href=\"#gulp-useref-与-gulp-rev、gulp-rev-replace\" class=\"headerlink\" title=\"gulp-useref 与 gulp-rev、gulp-rev-replace\"></a><a href=\"https://www.npmjs.com/package/gulp-useref\">gulp-useref</a> 与 <a href=\"https://www.npmjs.com/package/gulp-rev\">gulp-rev</a>、<a href=\"https://www.npmjs.com/package/gulp-rev-replace\">gulp-rev-replace</a></h4><p>这三个工具之所以放在一起讲，是因为它们一般都是一起使用的。它们要解决什么问题呢？通过上面的wiredep也好，gulp-inject也好，插入了一堆JS、CSS文件到HTML中，一旦部署到生产环境，这么多文件必然是要合并压缩的。光是压缩还不够，为了解决缓存问题，每次合并压缩后要给最终的文件加hash，这样每次文件内容一变动，hash也会跟着变动，就不存在浏览器依然使用缓存的老文件的问题。这样得到最终的文件以后，肯定还要将这个文件替换回HTML中去，一大堆的script和link标签替换成最终合并压缩带hash的版本。</p>\n<p>前面啰啰嗦嗦的一大堆工作就是这三个插件要解决的问题了。首先，gulp-useref根据注释将HTML中需要合并压缩的区块找出来，对区块内的所有文件进行合并。<strong>注意：它只负责合并，不负责压缩！</strong>所以合并出来的文件我们要自行压缩，压缩以后调用gulp-rev负责在文件名后追加hash。最后调用gulp-rev-replace负责把最终的文件名替换回HTML中去。扯了大半天，还是直接上例子吧。先来看看HTML中的注释：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- build:css static/styles/lib.css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:css static/styles/app.css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- inject:css --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endinject --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:js static/js/lib.js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- bower:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbower --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- build:js static/js/app.js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- inject:js --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endinject --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- endbuild --&gt;</span></div></pre></td></tr></table></figure>\n<p>gulp-useref识别的就是build开头的注释，build后面首先跟的是类型扩展名，然后后面的路径就是build区块中的所有文件进行合并后的文件路径，这个相对路径是相对于这个HTML的路径。上面的例子中我们用build区块把bower和inject进来的文件包起来，这些文件就可以被gulp-useref合并了。再来看gulp中useref相关task的定义：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> assets = $.useref.assets(&#123;searchPath: <span class=\"string\">'app/src/'</span>&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> cssFilter = $.filter(<span class=\"string\">'**/*.css'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> jsAppFilter = $.filter(<span class=\"string\">'**/app.js'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> jslibFilter = $.filter(<span class=\"string\">'**/lib.js'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">return</span> gulp</div><div class=\"line\">    .src(<span class=\"string\">'index.html'</span>)</div><div class=\"line\">    .pipe(assets)</div><div class=\"line\">    .pipe(cssFilter)</div><div class=\"line\">    .pipe($.csso())</div><div class=\"line\">    .pipe(cssFilter.restore())</div><div class=\"line\">    .pipe(jsAppFilter)</div><div class=\"line\">    .pipe($.uglify())</div><div class=\"line\">    .pipe(getHeader())</div><div class=\"line\">    .pipe(jsAppFilter.restore())</div><div class=\"line\">    .pipe(jslibFilter)</div><div class=\"line\">    .pipe($.uglify())</div><div class=\"line\">    .pipe(jslibFilter.restore())</div><div class=\"line\">    .pipe($.rev())</div><div class=\"line\">    .pipe(assets.restore())</div><div class=\"line\">    .pipe($.useref())</div><div class=\"line\">    .pipe($.revReplace())</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'dist'</span>));</div></pre></td></tr></table></figure>\n<p>首先一上来，先调用<code>$.useref.assets()</code>函数，这个函数返回一个stream，包含已经合并后的文件。可以尝试在第9行后面加上前面介绍过的gulp-print插件<code>.pipe($.print())</code>，打印出stream里的文件，发现就是前面HTML中4个build注释块后面的4个文件。注意这里调用的时候跟了一个<code>searchPath</code>的参数，它的用处就是指定从哪个路径开始寻找build区块底下的文件。比如build区块底下有这么一行<code>`，那最终gulp-useref将从这个路径</code>app/src/static/js/a.js<code>找到这个文件。第3到5行定义了3个filter，这主要是为了后面压缩准备的。下面正式看stream的pipe流程。先选出要处理的HTML文件，然后调用刚才得到的</code>assets<code>得到合并后的4个文件，第10到12行筛选出合并后的CSS文件进行压缩（压缩类插件下篇文章再讲），第13到16行筛选出app.js进行压缩，第17到19行筛选出lib.js进行压缩。之所以要区别对待app.js和lib.js，是因为app.js是我们自己写的代码，压缩后要加上header（第15行，使用前面介绍过的gulp-header插件），而lib.js是第三方的各种库，直接压缩即可。后面调用gulp-rev给压缩后的4个文件加hash，然后调用</code>assets.restore()<code>将src源换回HTML文件，这是为了后面调用</code>$.useref()<code>，因为</code>$.useref()`做替换的src源是HTML文件，同样后面调用gulp-rev-replace将带hash的文件替换回HTML，它要求的src源也必须是HTML文件。这里的顺序很重要，因为这几个插件接受的源不一样，gulp-rev接受的是JS、CSS文件，而gulp-useref和gulp-rev-replace接受的是HTML。还有一个问题：gulp-rev-replace是怎么知道gulp-rev进行hash前后的文件名对应关系呢？其实gulp-rev会生成一个manifest的文件，内容是类似下面的JSON：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"static/styles/lib.css\"</span>: <span class=\"string\">\"static/styles/lib-d41d8cd98f.css\"</span></div><div class=\"line\">    <span class=\"string\">\"static/js/lib.js\"</span>: <span class=\"string\">\"static/js/lib-273c2cin3f.js\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当然这个文件默认是不会生成在文件系统里的，可以通过<code>.pipe($.rev.manifest())</code>将这个文件保存到本地。有了这个文件，gulp-rev-replace甚至可以脱离gulp-rev独立工作哦！</p>\n<h4 id=\"gulp-html-replace\"><a href=\"#gulp-html-replace\" class=\"headerlink\" title=\"gulp-html-replace\"></a><a href=\"https://www.npmjs.com/package/gulp-html-replace\">gulp-html-replace</a></h4><p>gulp-html-replace同样是识别以build开头的注释,与<a href=\"https://www.npmjs.com/package/gulp-useref\">gulp-useref</a>不同的是不会对build区块中的所有文件进行合并，而是根据配置直接替换掉build区块中的内容下面以一个例子做说明：</p>\n<p>html片段<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- build:css --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/one.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/two.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- build:vendorJs --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/one.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/two.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- endbuild --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>相关任务：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(<span class=\"string\">'index.html'</span>)</div><div class=\"line\">    .pipe(htmlreplace(&#123;</div><div class=\"line\">        <span class=\"string\">'css'</span>: <span class=\"string\">'styles.min.css'</span>,</div><div class=\"line\">        <span class=\"string\">'vendorJs'</span>: <span class=\"string\">'/js/vendor.js'</span></div><div class=\"line\">    &#125;))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'dest/'</span>));</div></pre></td></tr></table></figure></p>\n<p>执行任务后的html片段：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"styles.min.css\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/js/vendor.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>很简单，不用再做过多的说明</p>\n<h4 id=\"gulp-file-concat\"><a href=\"#gulp-file-concat\" class=\"headerlink\" title=\"gulp-file-concat\"></a><a href=\"https://www.npmjs.com/package/gulp-file-concat\">gulp-file-concat</a></h4><p>顾名思义，文件合并，这个插件可以合并通过document.write引入的js和通过@import引入的css，下面看一个例子：<br>index.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"a.js\"&gt;&lt;\\/script&gt;'</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"b.js\"&gt;&lt;\\/script&gt;'</span>);</div><div class=\"line\">&#125;());</div></pre></td></tr></table></figure></p>\n<p>index.css:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">\"a.css\"</span>);</div><div class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">\"b.css\"</span>);</div></pre></td></tr></table></figure></p>\n<p>gulpfile.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> fileconcat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-file-concat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ngAnnotate = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-ng-annotate'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'index.js'</span>)</div><div class=\"line\">    .pipe(fileconcat(&#123;</div><div class=\"line\">        relativeUrls: <span class=\"string\">'./'</span></div><div class=\"line\">    &#125;))</div><div class=\"line\">    .pipe(ngAnnotate())</div><div class=\"line\">    .pipe(uglify())</div><div class=\"line\">    .pipe(rename(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</div><div class=\"line\">        path.basename = <span class=\"string\">'app'</span>;</div><div class=\"line\">        path.extname = <span class=\"string\">'.js'</span></div><div class=\"line\">    &#125;))</div><div class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'build/'</span>));</div><div class=\"line\"></div><div class=\"line\">  gulp.src(<span class=\"string\">'index.css'</span>)</div><div class=\"line\">      .pipe(fileconcat())</div><div class=\"line\">      .pipe(gulp.dest(<span class=\"string\">'build/'</span>));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>这个一个文件合并的插件，为什么要把这个插件放在这里来介绍，其实我觉得这个可以和<a href=\"https://www.npmjs.com/package/gulp-html-replace\">gulp-html-replace</a>联合使用，至于怎么用，请细细品味吧</p>\n<h3 id=\"Angular相关\"><a href=\"#Angular相关\" class=\"headerlink\" title=\"Angular相关\"></a>Angular相关</h3><p>这个部分介绍与Angular相关的一些插件。</p>\n<h4 id=\"gulp-angular-templatecache\"><a href=\"#gulp-angular-templatecache\" class=\"headerlink\" title=\"gulp-angular-templatecache\"></a><a href=\"https://www.npmjs.com/package/gulp-angular-templatecache\">gulp-angular-templatecache</a></h4><p>Angular自带的<code>$templateCache</code>服务可以把Angular中用到的所有模板缓存下来，而这个插件的功能就是直接将指定的HTML模板文件以JS字符串的形式注册在<code>$tempalteCache</code>服务中，这样所有的模板就会随JS文件直接一次性下载下来。这个插件使用起来也非常简单，gulp.src传入需要缓存的HTML模板文件，然后<code>.pipe($.angularTemplatecache(filename, options))</code>即可。其中filename表示生成后的js文件的名字，默认为templates.js，常用的options有：</p>\n<ul>\n<li><code>module</code>：指定希望将这个模板放入哪个Angular的module中。</li>\n<li><code>root</code>：指定注册后的模板路径前缀。</li>\n</ul>\n<p>生成后的文件如下：</p>\n<figure class=\"highlight javascript\"><figcaption><span>templates.js</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(<span class=\"string\">\"module name\"</span>).run([$templateCache,</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$templateCache</span>) </span>&#123;</div><div class=\"line\">    $templateCache.put(<span class=\"string\">\"template1.html\"</span>,</div><div class=\"line\">      <span class=\"comment\">// template1.html content (escaped) </span></div><div class=\"line\">    );</div><div class=\"line\">    $templateCache.put(<span class=\"string\">\"template2.html\"</span>,</div><div class=\"line\">      <span class=\"comment\">// template2.html content (escaped) </span></div><div class=\"line\">    );</div><div class=\"line\">    <span class=\"comment\">// etc. </span></div><div class=\"line\">  &#125;</div><div class=\"line\">]);</div></pre></td></tr></table></figure>\n<h4 id=\"gulp-ng-annotate\"><a href=\"#gulp-ng-annotate\" class=\"headerlink\" title=\"gulp-ng-annotate\"></a><a href=\"https://www.npmjs.com/package/gulp-ng-annotate\">gulp-ng-annotate</a></h4><p>这个插件是<a href=\"https://github.com/olov/ng-annotate\">ng-annotate</a>的gulp插件版，它解决的是Angular中依赖注入的小问题。Angular中通过参数名来进行依赖注入，一旦压缩，参数名就会变化导致注入失败，所以官方推荐通过添加字符串进行注入。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular</div><div class=\"line\">    .module(<span class=\"string\">'app.dashboard'</span>)</div><div class=\"line\">    .controller(<span class=\"string\">'DashboardController'</span>, DashboardController);</div><div class=\"line\"></div><div class=\"line\">DashboardController.$inject = [<span class=\"string\">'userAPI'</span>];</div><div class=\"line\"><span class=\"comment\">/* @ngInject */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DashboardController</span> (<span class=\"params\">userAPI</span>) </span>&#123;&#125;</div></pre></td></tr></table></figure>\n<p>上面的例子中我们定义了一个叫<code>DashboardController</code>的controller，它依赖一个<code>userAPI</code>的service。这个插件的作用就是根据第6行的注释<code>/* @ngInject */</code>来帮你生成第5行的内容。当然是在你忘记写的情况下，如果你自己写了它不会重复生成。除了这种使用<code>$inject</code>赋值的方式，它同样支持inline定义的方式，如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* @ngInject */</span></div><div class=\"line\">.controller(<span class=\"string\">'DashboardController'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">userAPI</span>) </span>&#123;&#125;);</div></pre></td></tr></table></figure>\n<p>会生成</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.controller(<span class=\"string\">'DashboardController'</span>, [<span class=\"string\">'userAPI'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">userAPI</span>) </span>&#123;&#125;]);</div></pre></td></tr></table></figure>\n<p>它常用的参数就是<code>{add: true}</code>，表明仅在不存在的情况下才会进行添加。</p>\n<blockquote>\n<p>推荐在HTML头上使用<a href=\"https://docs.angularjs.org/error/$injector/strictdi\">ng-strict-di</a>属性，这样即便在不压缩的情况下，一旦你忘记显式的用字符串声明依赖，Angular将立刻报错。</p>\n</blockquote>\n<h4 id=\"gulp-protractor\"><a href=\"#gulp-protractor\" class=\"headerlink\" title=\"gulp-protractor\"></a><a href=\"https://www.npmjs.com/package/gulp-protractor\">gulp-protractor</a></h4><p>Angular的e2e测试工具<a href=\"https://github.com/angular/protractor\">protractor</a>的配套插件，可以通过它非常方便的在gulp中调用protractor。有了这玩意，你就不需要手动在gulp中调用protractor的可执行文件，然后处理进程神马的，只要一句简单的<code>.pipe($.protractor.protractor(options)</code>即可。常用的options包括：</p>\n<ul>\n<li><code>configFile</code>：即protractor的配置文件路径。</li>\n<li><code>args</code>：调用protractor时传入的参数，是个数组。最常用的就是指定protractor只跑一个suite了，如<code>[&#39;--suite&#39;, &#39;loginSuite&#39;]</code>，这样protractor只会跑配置文件中定义的loginSuite所包括的spec文件了。</li>\n</ul>\n<h4 id=\"gulp-order\"><a href=\"#gulp-order\" class=\"headerlink\" title=\"gulp-order\"></a><a href=\"https://www.npmjs.com/package/gulp-order\">gulp-order</a></h4><p>这个插件严格来说不是专门给Angular用的，但非常适合用在Angular的场景下。如果你的程序使用的是Angular自带的包管理系统，那么有一个无法避开的问题就是：所有<code>angular.module</code>的定义要最先执行，也就是说包含module定义的文件的script标签要在别的文件之前。而我们在使用gulp-inject这类插件将JS文件插入的时候通常都是通过匹配符直接选中一堆文件插入的。这时就需要解决插入的顺序问题，而这个插件就是干这个事的。它通过一个数组参数来指定排序，这个数组包含一组匹配模式，匹配到靠前模式的文件在前，匹配靠后的文件在后。如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp</div><div class=\"line\">    .src(<span class=\"string\">'**/*.js'</span>)</div><div class=\"line\">    .pipe($.order([</div><div class=\"line\">        <span class=\"string\">'**/app.module.js'</span>,</div><div class=\"line\">        <span class=\"string\">'**/*.module.js'</span>,</div><div class=\"line\">        <span class=\"string\">'**/*.js'</span></div><div class=\"line\">    ]))</div></pre></td></tr></table></figure>\n<p>这样，定义<code>app</code>module的文件就会在最前面，然后是其它各个module的定义，最后是剩余的JS文件。</p>\n<h3 id=\"压缩工具类\"><a href=\"#压缩工具类\" class=\"headerlink\" title=\"压缩工具类\"></a>压缩工具类</h3><p>这个部分介绍对CSS、HTML、JS、图片等资源进行压缩的插件。</p>\n<h4 id=\"gulp-csso\"><a href=\"#gulp-csso\" class=\"headerlink\" title=\"gulp-csso\"></a><a href=\"https://www.npmjs.com/package/gulp-csso\">gulp-csso</a></h4><p>压缩CSS的工具，官方说它比其它工具压得更小，因为它可以重建CSS代码结构信息，不知道什么鬼。</p>\n<h4 id=\"gulp-minify-html\"><a href=\"#gulp-minify-html\" class=\"headerlink\" title=\"gulp-minify-html\"></a><a href=\"https://www.npmjs.com/package/gulp-minify-html\">gulp-minify-html</a></h4><p>压缩HTML的工具，通常在给gulp-angular-templatecache处理前先使用，这样$tempalteCache得到的就是压缩后的HTML字符串了。</p>\n<h4 id=\"gulp-uglify\"><a href=\"#gulp-uglify\" class=\"headerlink\" title=\"gulp-uglify\"></a><a href=\"https://www.npmjs.com/package/gulp-uglify\">gulp-uglify</a></h4><p>压缩JS的工具，这个不多介绍了。</p>\n<h4 id=\"gulp-imagemin\"><a href=\"#gulp-imagemin\" class=\"headerlink\" title=\"gulp-imagemin\"></a><a href=\"https://www.npmjs.com/package/gulp-imagemin\">gulp-imagemin</a></h4><p>压缩图片的工具。在发布到生产环境之前对图片进行压缩是一个非常好的习惯，可以极大的提高页面加载的速度。如果你用<a href=\"https://developers.google.com/speed/pagespeed/\">Google PageSpeed</a>给网页评过分的话，它可以给出页面上能被继续压缩的图片。使用这个插件可以在保证质量损失很小的情况下压缩图片。</p>\n<h3 id=\"server相关\"><a href=\"#server相关\" class=\"headerlink\" title=\"server相关\"></a>server相关</h3><p>这部分介绍与本地起server相关的插件。</p>\n<h4 id=\"browser-sync\"><a href=\"#browser-sync\" class=\"headerlink\" title=\"browser-sync\"></a><a href=\"https://www.npmjs.com/package/browser-sync\">browser-sync</a></h4><p><a href=\"http://www.browsersync.io/\">Browsersync</a>应该算是本地起server的标配了吧，最大的特性是可以在不同浏览器之间同步（这也是名字的由来吧），这在测试时非常有用：起server以后根据配置自动打开多个浏览器，你操作一个，其他的浏览器会同步你的操作。另外，它还可以配合gulp的<code>watch()</code>函数实现类似live-reload的功能。之所以没有gulp对应的插件，是因为这玩意本来就可以直接require进来使用。支持非常多的参数，一整篇文章也介绍不完，具体可以参考<a href=\"http://www.browsersync.io/docs/options/\">它的文档</a>。这里要简单介绍的就是server底下的配置，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">server: &#123;</div><div class=\"line\">    baseDir: <span class=\"string\">'./app/'</span>,</div><div class=\"line\">    index: <span class=\"string\">'index.html'</span>,</div><div class=\"line\">    middleware: [</div><div class=\"line\">        <span class=\"comment\">// middleware</span></div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>前两个参数就不多说了，一看就明白意思，重点来看第3个参数<code>middleware</code>。middleware就是中间件，类似这样的函数<code>function (req, res, next){}</code>。简单来说，一个request请求到达server，会经过middleware数组里面的中间件函数逐个处理，这里就可以在Browsersync层面上定义很多自定义的操作。适用于Node的<a href=\"https://github.com/senchalabs/connect\">connect框架</a>的中间件都可以在这里使用，下面介绍的两个插件都是可用于Browsersync的中间件。</p>\n<h4 id=\"connect-history-api-fallback\"><a href=\"#connect-history-api-fallback\" class=\"headerlink\" title=\"connect-history-api-fallback\"></a><a href=\"https://www.npmjs.com/package/connect-history-api-fallback\">connect-history-api-fallback</a></h4><p>这个中间件对于像Angular这样的单页面应用来说非常的实用。我们知道，Browsersync默认起来的server是一个静态server，默认是无法支持<code>$locationProvider.html5Mode(true);</code>的。使用这个插件可以轻松的达到这一点，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> historyApiFallback = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-history-api-fallback'</span>);</div><div class=\"line\"><span class=\"comment\">// ...</span></div><div class=\"line\">middleware: [</div><div class=\"line\">    historyApiFallback()</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<p>这样，所有的路由请求都会fallback到index.html处理，这也正是我们想要的。除此之外，这个插件还支持简单的rewrite，如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">historyApiFallback(&#123;</div><div class=\"line\">  rewrites: [</div><div class=\"line\">    &#123; <span class=\"keyword\">from</span>: <span class=\"regexp\">/\\/soccer/</span>, to: <span class=\"string\">'/soccer.html'</span>&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>可谓是非常方便，更多的rewrite规则可以参考它的文档。</p>\n<h4 id=\"proxy-middleware\"><a href=\"#proxy-middleware\" class=\"headerlink\" title=\"proxy-middleware\"></a><a href=\"https://www.npmjs.com/package/proxy-middleware\">proxy-middleware</a></h4><p>这个中间件其实与上面rewrite的类似，只不过rewrite只是针对get请求，而这个proxy可以代理任何请求。设想这样一个场景，我们起了个本地的server，通常使用<a href=\"https://docs.angularjs.org/api/ngMock\">ngMock</a>来实现对API的模拟，但有的时候我们希望这个本地的server可以对接真正的API server，而这个中间件可以轻松的完成这一点：将<code>/api</code>开头的请求代理到真正的API server上去。它的使用也是非常简单：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> proxy = <span class=\"built_in\">require</span>(<span class=\"string\">'proxy-middleware'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> proxyOptions = url.parse(<span class=\"string\">'https://real-server.com/api'</span>);</div><div class=\"line\">proxyOptions.route = <span class=\"string\">'/api'</span>;</div><div class=\"line\"><span class=\"comment\">// ...</span></div><div class=\"line\">middleware: [</div><div class=\"line\">    proxy(proxyOptions)</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<p>这样，所有以<code>/api</code>开头的API请求就会被代理到<code>https://real-server.com/api</code>上去，如<code>/api/user/123</code>请求的真实地址是<code>https://real-server.com/api/user/123</code>。</p>\n<h3 id=\"特定语言相关\"><a href=\"#特定语言相关\" class=\"headerlink\" title=\"特定语言相关\"></a>特定语言相关</h3><p>这部分的插件与你选用的具体的语言以及预处理器有关。</p>\n<h4 id=\"gulp-jshint-与-gulp-jscs\"><a href=\"#gulp-jshint-与-gulp-jscs\" class=\"headerlink\" title=\"gulp-jshint 与 gulp-jscs\"></a><a href=\"https://www.npmjs.com/package/gulp-jshint\">gulp-jshint</a> 与 <a href=\"https://www.npmjs.com/package/gulp-jscs\">gulp-jscs</a></h4><p>大名鼎鼎的<a href=\"\">jshint</a>和<a href=\"\">jscs</a>的gulp插件版。这两个插件除了帮你做代码的一些静态检查外，还可以最大程度的帮助你定义所需要的代码风格。尤其是<code>jscs</code>，定义的非常细致。比如我们需要<code>function (a, b) {</code>，即function关键字后面空一格，参数之间空一格，参数列表后面的小括号与大括号之间空一格。这样的需求通过<code>jscs</code>的配置文件可以轻松的实现，具体可以参考其文档。可以将这两个task放在build之前，强制所有人在build代码的时候修改不符合要求的代码风格。我们还尝试过将<code>gulp jshint jscs</code>放入git commit的hook中，每次commit的时候自动检查代码风格，如果不符合要求，不准进行commit的操作。</p>\n<h4 id=\"gulp-jade\"><a href=\"#gulp-jade\" class=\"headerlink\" title=\"gulp-jade\"></a><a href=\"https://www.npmjs.com/package/gulp-jade\">gulp-jade</a></h4><p>编译jade模板的插件，这个也不过多介绍。只介绍一个使用jade变量的场景，通常我们的Angular应用的<code>ng-app</code>名称在测试(e2e)与非测试时是不一样的，所以可以把这个定义成变量，在编译jade模板时传入。如我们的index.jade的头是这样定义的<code>html(lang=&quot;en&quot;, ng-app= app)</code>，在编译时使用<code>.pipe($.jade({locals: {app: &#39;test&#39;}}))</code>即可指定想要的<code>ng-app</code>的名字。</p>\n<h4 id=\"gulp-stylus\"><a href=\"#gulp-stylus\" class=\"headerlink\" title=\"gulp-stylus\"></a><a href=\"https://www.npmjs.com/package/gulp-stylus\">gulp-stylus</a></h4><p>编译stylus的插件，不多说。</p>\n<h4 id=\"gulp-autoprefixer\"><a href=\"#gulp-autoprefixer\" class=\"headerlink\" title=\"gulp-autoprefixer\"></a><a href=\"https://www.npmjs.com/package/gulp-autoprefixer\">gulp-autoprefixer</a></h4><p>这个插件最早在<a href=\"/2014/01/12/what-i-learn-from-making-resume/\">从做简历中学到的知识</a>这篇文章中就介绍过，只不过当时介绍的是grunt版本，现在时gulp版本。这个插件的基本作用就是让你在书写CSS3的相关属性时不用关心不同浏览器的前缀问题，它会自动帮助添加各种浏览器前缀。</p>"},{"title":"流程图","grammar_flow":true,"grammar_sequence":true,"_content":"\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```","source":"_posts/流程图.md","raw":"---\ntitle: 流程图\ntags: 新建,模板,小书匠\ngrammar_flow: true\ngrammar_sequence: true\n\n---\n\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```","slug":"流程图","published":1,"date":"2016-08-21T12:31:56.786Z","updated":"2016-08-21T12:31:56.786Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4lk7vv00121ov6xnsqnhm1","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#x5C0F;&#x660E;-&gt;&#x5C0F;&#x674E;: &#x4F60;&#x597D; &#x5C0F;&#x674E;, &#x6700;&#x8FD1;&#x600E;&#x4E48;&#x6837;?</div><div class=\"line\">Note right of &#x5C0F;&#x674E;: &#x5C0F;&#x674E;&#x60F3;&#x4E86;&#x60F3;</div><div class=\"line\">&#x5C0F;&#x674E;--&gt;&#x5C0F;&#x660E;: &#x8FD8;&#x662F;&#x8001;&#x6837;&#x5B50;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: &#x5F00;&#x59CB;</div><div class=\"line\">e=&gt;end: &#x7ED3;&#x675F;</div><div class=\"line\">op=&gt;operation: &#x64CD;&#x4F5C;&#x6B65;&#x9AA4;</div><div class=\"line\">cond=&gt;condition: &#x662F; &#x6216;&#x8005; &#x5426;?</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">小明-&gt;小李: 你好 小李, 最近怎么样?</div><div class=\"line\">Note right of 小李: 小李想了想</div><div class=\"line\">小李--&gt;小明: 还是老样子</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: 开始</div><div class=\"line\">e=&gt;end: 结束</div><div class=\"line\">op=&gt;operation: 操作步骤</div><div class=\"line\">cond=&gt;condition: 是 或者 否?</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cis4lk7ub00011ov6ax3lyg1b","category_id":"cis4lk7uq00041ov62qitmu60","_id":"cis4lk7v8000c1ov6tlsokpb6"},{"post_id":"cis4lk7ug00021ov6i6tawigp","category_id":"cis4lk7v000091ov6ueb83yv6","_id":"cis4lk7vf000j1ov6d8ku0w5y"},{"post_id":"cis4lk7ur00051ov6ytj4845o","category_id":"cis4lk7vb000f1ov6saa0icgt","_id":"cis4lk7vj000p1ov6u1iw3rvl"},{"post_id":"cis4lk7us00061ov6jychndrl","category_id":"cis4lk7vf000l1ov6m6z2bfgo","_id":"cis4lk7vr000x1ov6fujjloo9"},{"post_id":"cis4lk7uv00081ov6we9c2cqg","category_id":"cis4lk7vf000l1ov6m6z2bfgo","_id":"cis4lk7vy00141ov6cwan7wq1"},{"post_id":"cis4lk7vs00101ov68il7cnkk","category_id":"cis4lk7vf000l1ov6m6z2bfgo","_id":"cis4lk7vz00181ov6hf0n1dgo"},{"post_id":"cis4lk7v5000b1ov6mdgiq6eg","category_id":"cis4lk7vs000z1ov62i9gtxaf","_id":"cis4lk7w0001a1ov6ofgw2c59"},{"post_id":"cis4lk7v8000d1ov6soo0fss5","category_id":"cis4lk7vz00161ov6952k4flx","_id":"cis4lk7w2001f1ov6wovnqid0"},{"post_id":"cis4lk7vc000h1ov6z8onualp","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7w8001k1ov6tqr6e84a"},{"post_id":"cis4lk7vd000i1ov6n14l0o5y","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7wa001n1ov60f07lu8w"},{"post_id":"cis4lk7vg000m1ov68d7ldmq1","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7wd001q1ov6kmaus4u7"},{"post_id":"cis4lk7vh000o1ov61dqm1niu","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7we001s1ov6tuf3lg9h"},{"post_id":"cis4lk7vl000t1ov667ws1r6d","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7wf001u1ov6so77z3j1"},{"post_id":"cis4lk7vn000v1ov6ar2n233m","category_id":"cis4lk7w1001c1ov6pm3b8xjt","_id":"cis4lk7wg001v1ov6h8dsxiv3"}],"PostTag":[{"post_id":"cis4lk7ub00011ov6ax3lyg1b","tag_id":"cis4lk7uj00031ov6febs0va1","_id":"cis4lk7v2000a1ov6o4dpx7rt"},{"post_id":"cis4lk7ug00021ov6i6tawigp","tag_id":"cis4lk7uu00071ov6qlead8wt","_id":"cis4lk7vc000g1ov6jeu36ryf"},{"post_id":"cis4lk7ur00051ov6ytj4845o","tag_id":"cis4lk7vb000e1ov63rmnv6ea","_id":"cis4lk7vh000n1ov6shuhgwwd"},{"post_id":"cis4lk7vg000m1ov68d7ldmq1","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vj000q1ov6jum4marn"},{"post_id":"cis4lk7us00061ov6jychndrl","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vm000u1ov6rn8nrvym"},{"post_id":"cis4lk7vh000o1ov61dqm1niu","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vr000w1ov6p3ymub3h"},{"post_id":"cis4lk7vl000t1ov667ws1r6d","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vu00111ov6wtg4clhe"},{"post_id":"cis4lk7uv00081ov6we9c2cqg","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vx00131ov67rwp65hh"},{"post_id":"cis4lk7vn000v1ov6ar2n233m","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7vz00171ov6j3ylrnif"},{"post_id":"cis4lk7vs00101ov68il7cnkk","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7w000191ov674ske36d"},{"post_id":"cis4lk7v5000b1ov6mdgiq6eg","tag_id":"cis4lk7vr000y1ov6vgvpqfe7","_id":"cis4lk7w1001d1ov6kxg9zimh"},{"post_id":"cis4lk7v8000d1ov6soo0fss5","tag_id":"cis4lk7vy00151ov6xybepbdu","_id":"cis4lk7w2001e1ov6bzk74kth"},{"post_id":"cis4lk7vc000h1ov6z8onualp","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7w6001i1ov66uro5fpq"},{"post_id":"cis4lk7vd000i1ov6n14l0o5y","tag_id":"cis4lk7vf000k1ov6ftw5ar76","_id":"cis4lk7wa001m1ov6l8e48zw0"},{"post_id":"cis4lk7vv00121ov6xnsqnhm1","tag_id":"cis4lk7w7001j1ov6lllmvjwe","_id":"cis4lk7wc001p1ov64bjx3qoa"}],"Tag":[{"name":"angularjs","_id":"cis4lk7uj00031ov6febs0va1"},{"name":"hexo,博客,blog,搭建","_id":"cis4lk7uu00071ov6qlead8wt"},{"name":"tool,grunt,javascript,自动管理","_id":"cis4lk7vb000e1ov63rmnv6ea"},{"name":"javascript","_id":"cis4lk7vf000k1ov6ftw5ar76"},{"name":"tool,nodejs,javascript,环境,搭建","_id":"cis4lk7vr000y1ov6vgvpqfe7"},{"name":"tool,npm,安装,优化","_id":"cis4lk7vy00151ov6xybepbdu"},{"name":"新建,模板,小书匠","_id":"cis4lk7w7001j1ov6lllmvjwe"}]}}