<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白云雅阁</title>
  <subtitle>读懂别人的故事，写好自己的人生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ronghuaxueleng.github.io/"/>
  <updated>2016-03-21T10:31:47.207Z</updated>
  <id>http://ronghuaxueleng.github.io/</id>
  
  <author>
    <name>caoqiang</name>
    <email>caoqianghappy@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nodejs-express</title>
    <link href="http://ronghuaxueleng.github.io/2016/03/21/nodejs-express/"/>
    <id>http://ronghuaxueleng.github.io/2016/03/21/nodejs-express/</id>
    <published>2016-03-21T10:31:47.000Z</published>
    <updated>2016-03-21T10:31:47.207Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Grunt：任务自动管理工具</title>
    <link href="http://ronghuaxueleng.github.io/2016/03/21/grunt-install/"/>
    <id>http://ronghuaxueleng.github.io/2016/03/21/grunt-install/</id>
    <published>2016-03-20T16:00:00.000Z</published>
    <updated>2016-03-21T10:05:18.472Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;在Javascript的开发过程中，经常会遇到一些重复性的任务，比如合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等。通常，我们需要使用不同的工具，来完成不同的任务，既重复劳动又非常耗时。Grunt就是为了解决这个问题而发明的工具，可以帮助我们自动管理和运行各种任务。&lt;/p&gt;
&lt;p&gt;简单说，Grunt是一个自动任务运行器，会按照预先设定的顺序自动运行一系列的任务。这可以简化工作流程，减轻重复性工作带来的负担。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Grunt基于Node.js，安装之前要先安装Node.js，然后运行下面的命令。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install grunt-cli -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grunt-cli表示安装的是grunt的命令行界面，参数g表示全局安装。&lt;/p&gt;
&lt;p&gt;Grunt使用模块结构，除了安装命令行界面以外，还要根据需要安装相应的模块。这些模块应该采用局部安装，因为不同项目可能需要同一个模块的不同版本。&lt;/p&gt;
&lt;p&gt;首先，在项目的根目录下，创建一个文本文件package.json，指定当前项目所需的模块。下面就是一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;my-project-name&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Your Name&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;grunt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.x.x&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-jshint&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-concat&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.1.1&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-uglify&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.1.0&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-watch&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.1.4&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这个package.json文件中，除了注明项目的名称和版本以外，还在devDependencies属性中指定了项目依赖的grunt模块和版本：grunt核心模块为最新的0.x.x版，jshint插件为最新版本，concat插件不低于0.1.1版，uglify插件不低于0.1.0版，watch插件不低于0.1.4版。&lt;/p&gt;
&lt;p&gt;然后，在项目的根目录下运行下面的命令，这些插件就会被自动安装在node_modules子目录。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这种方法是针对已有package.json的情况。如果想要自动生成package.json文件，可以使用npm init命令，按照屏幕提示回答所需模块的名称和版本即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm init&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果已有的package.json文件不包括Grunt模块，可以在直接安装Grunt模块的时候，加上–save-dev参数，该模块就会自动被加入package.json文件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt; --save-dev&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比如，对应上面package.json文件指定的模块，需要运行以下npm命令。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt --save-dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt-contrib-jshint --save-dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt-contrib-concat --save-dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt-contrib-uglify --save-dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt-contrib-watch --save-dev&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;命令脚本文件Gruntfile-js&quot;&gt;&lt;a href=&quot;#命令脚本文件Gruntfile-js&quot; class=&quot;headerlink&quot; title=&quot;命令脚本文件Gruntfile.js&quot;&gt;&lt;/a&gt;命令脚本文件Gruntfile.js&lt;/h2&gt;&lt;p&gt;模块安装完以后，下一步在项目的根目录下，新建脚本文件Gruntfile.js。它是grunt的配置文件，就好像package.json是npm的配置文件一样。Gruntfile.js就是一般的Node.js模块的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;grunt&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 配置Grunt各种模块的参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.initConfig(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    jshint: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* jshint的参数 */&lt;/span&gt; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    concat: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* concat的参数 */&lt;/span&gt; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    uglify: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* uglify的参数 */&lt;/span&gt; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    watch:  &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* watch的参数 */&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 从node_modules目录加载模块文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-jshint&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-concat&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-uglify&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-watch&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 每行registerTask定义一个任务&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.registerTask(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;jshint&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;concat&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;uglify&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.registerTask(&lt;span class=&quot;string&quot;&gt;&#39;check&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;jshint&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码用到了grunt代码的三个方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;grunt.initConfig&lt;/strong&gt;：定义各种模块的参数，每一个成员项对应一个同名模块。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;grunt.loadNpmTasks&lt;/strong&gt;：加载完成任务所需的模块。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;grunt.registerTask&lt;/strong&gt;：定义具体的任务。第一个参数为任务名，第二个参数是一个数组，表示该任务需要依次使用的模块。default任务名表示，如果直接输入grunt命令，后面不跟任何参数，这时所调用的模块（该例为jshint，concat和uglify）；该例的check任务则表示使用jshint插件对代码进行语法检查。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的代码一共加载了四个模块：jshint（检查语法错误）、concat（合并文件）、uglify（压缩代码）和watch（自动执行）。接下来，有两种使用方法。&lt;/p&gt;
&lt;p&gt;（1）命令行执行某个模块，比如&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt jshint&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码表示运行jshint模块。&lt;/p&gt;
&lt;p&gt;（2）命令行执行某个任务。比如&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt check&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码表示运行check任务。如果运行成功，就会显示“Done, without errors.”。&lt;/p&gt;
&lt;p&gt;如果没有给出任务名，只键入grunt，就表示执行默认的default任务。&lt;/p&gt;
&lt;h2 id=&quot;Gruntfile-js实例：grunt-contrib-cssmin模块&quot;&gt;&lt;a href=&quot;#Gruntfile-js实例：grunt-contrib-cssmin模块&quot; class=&quot;headerlink&quot; title=&quot;Gruntfile.js实例：grunt-contrib-cssmin模块&quot;&gt;&lt;/a&gt;Gruntfile.js实例：grunt-contrib-cssmin模块&lt;/h2&gt;&lt;p&gt;下面通过cssmin模块，演示如何编写Gruntfile.js文件。cssmin模块的作用是最小化CSS文件。&lt;/p&gt;
&lt;p&gt;首先，在项目的根目录下安装该模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install grunt-contrib-cssmin --save-dev&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，新建文件Gruntfile.js。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;grunt&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.initConfig(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    cssmin: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      minify: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		cwd: &lt;span class=&quot;string&quot;&gt;&#39;css/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		src: [&lt;span class=&quot;string&quot;&gt;&#39;*.css&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;!*.min.css&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		dest: &lt;span class=&quot;string&quot;&gt;&#39;css/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		ext: &lt;span class=&quot;string&quot;&gt;&#39;.min.css&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      combine: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    files: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  &lt;span class=&quot;string&quot;&gt;&#39;css/out.min.css&#39;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;css/part1.min.css&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;css/part2.min.css&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-cssmin&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grunt.registerTask(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;cssmin:minify&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;cssmin:combine&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面详细解释上面代码中的三个方法，下面一个个来看。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）grunt.loadNpmTasks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;grunt.loadNpmTasks方法载入模块文件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt.loadNpmTasks(&lt;span class=&quot;string&quot;&gt;&#39;grunt-contrib-cssmin&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你需要使用几个模块，这里就要写几条grunt.loadNpmTasks语句，将各个模块一一加载。&lt;/p&gt;
&lt;p&gt;如果加载模块很多，这部分会非常冗长。而且，还存在一个问题，就是凡是在这里加载的模块，也同时出现在package.json文件中。如果使用npm命令卸载模块以后，模块会自动从package.json文件中消失，但是必须手动从Gruntfile.js文件中清除，这样很不方便，一旦忘记，还会出现运行错误。这里有一个解决办法，就是安装load-grunt-tasks模块，然后在Gruntfile.js文件中，用下面的语句替代所有的grunt.loadNpmTasks语句。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;load-grunt-tasks&#39;&lt;/span&gt;)(grunt);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条语句的作用是自动分析package.json文件，自动加载所找到的grunt模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）grunt.initConfig&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;grunt.initConfig方法用于模块配置，它接受一个对象作为参数。该对象的成员与使用的同名模块一一对应。由于我们要配置的是cssmin模块，所以里面有一个cssmin成员（属性）。&lt;/p&gt;
&lt;p&gt;cssmin（属性）指向一个对象，该对象又包含多个成员。除了一些系统设定的成员（比如options），其他自定义的成员称为目标（target）。一个模块可以有多个目标（target），上面代码里面，cssmin模块共有两个目标，一个是“minify”，用于压缩css文件；另一个是“combine”，用于将多个css文件合并一个文件。&lt;/p&gt;
&lt;p&gt;每个目标的具体设置，需要参考该模板的文档。就cssmin来讲，minify目标的参数具体含义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;expand&lt;/strong&gt;：如果设为true，就表示下面文件名的占位符（即*号）都要扩展成具体的文件名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cwd&lt;/strong&gt;：需要处理的文件（input）所在的目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;src&lt;/strong&gt;：表示需要处理的文件。如果采用数组形式，数组的每一项就是一个文件名，可以使用通配符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dest&lt;/strong&gt;：表示处理后的文件名或所在目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ext&lt;/strong&gt;：表示处理后的文件后缀名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了上面这些参数，还有一些参数也是grunt所有模块通用的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt;：一个返回布尔值的函数，用于过滤文件名。只有返回值为true的文件，才会被grunt处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dot&lt;/strong&gt;：是否匹配以点号（.）开头的系统文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;makeBase&lt;/strong&gt;：如果设置为true，就只匹配文件路径的最后一部分。比如，a?b可以匹配/xyz/123/acb，而不匹配/xyz/acb/123。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于通配符，含义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*：匹配任意数量的字符，不包括/。&lt;/li&gt;
&lt;li&gt;?：匹配单个字符，不包括/。&lt;/li&gt;
&lt;li&gt;**：匹配任意数量的字符，包括/。&lt;/li&gt;
&lt;li&gt;{}：允许使用逗号分隔的列表，表示“or”（或）关系。&lt;/li&gt;
&lt;li&gt;!：用于模式的开头，表示只返回不匹配的情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如，foo/*.js匹配foo目录下面的文件名以.js结尾的文件，foo/**/*.js匹配foo目录和它的所有子目录下面的文件名以.js结尾的文件，!*.css表示匹配所有后缀名不为“.css”的文件。&lt;/p&gt;
&lt;p&gt;使用通配符设置src属性的更多例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;src: &lt;span class=&quot;string&quot;&gt;&#39;foo/th*.js&#39;&lt;/span&gt;&amp;#125;grunt-contrib-uglify&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;src: &lt;span class=&quot;string&quot;&gt;&#39;foo/&amp;#123;a,b&amp;#125;*.js&#39;&lt;/span&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;src: [&lt;span class=&quot;string&quot;&gt;&#39;foo/a*.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;foo/b*.js&#39;&lt;/span&gt;]&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至于combine目标，就只有一个files参数，表示输出文件是css子目录下的out.min.css，输入文件则是css子目录下的part1.min.css和part2.min.css。&lt;/p&gt;
&lt;p&gt;files参数的格式可以是一个对象，也可以是一个数组。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;files: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;dest/b.js&#39;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;src/bb.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;src/bbb.js&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;dest/b1.js&#39;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;src/bb1.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;src/bbb1.js&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// or&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;files: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;src: [&lt;span class=&quot;string&quot;&gt;&#39;src/aa.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;src/aaa.js&#39;&lt;/span&gt;], dest: &lt;span class=&quot;string&quot;&gt;&#39;dest/a.js&#39;&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;src: [&lt;span class=&quot;string&quot;&gt;&#39;src/aa1.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;src/aaa1.js&#39;&lt;/span&gt;], dest: &lt;span class=&quot;string&quot;&gt;&#39;dest/a1.js&#39;&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;],&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果minify目标和combine目标的属性设置有重合的部分，可以另行定义一个与minify和combine平行的options属性。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt.initConfig(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   cssmin: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  options: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* ... */&lt;/span&gt; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     minify: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* ... */&lt;/span&gt; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     combine: &amp;#123; &lt;span class=&quot;comment&quot;&gt;/* ... */&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）grunt.registerTask&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;grunt.registerTask方法定义如何调用具体的任务。“default”任务表示如果不提供参数，直接输入grunt命令，则先运行“cssmin:minify”，后运行“cssmin:combine”，即先压缩再合并。如果只执行压缩，或者只执行合并，则需要在grunt命令后面指明“模块名:目标名”。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt # 默认情况下，先压缩后合并&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt cssmin:minify # 只压缩不合并&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt css:combine # 只合并不压缩&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不指明目标，只是指明模块，就表示将所有目标依次运行一遍。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;grunt cssmin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;常用模块设置&quot;&gt;&lt;a href=&quot;#常用模块设置&quot; class=&quot;headerlink&quot; title=&quot;常用模块设置&quot;&gt;&lt;/a&gt;常用模块设置&lt;/h2&gt;&lt;p&gt;grunt的&lt;a href=&quot;http://gruntjs.com/plugins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;模块&lt;/a&gt;已经超过了2000个，且还在快速增加。下面是一些常用的模块（按字母排序）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-clean&lt;/strong&gt;：删除文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-compass&lt;/strong&gt;：使用compass编译sass文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-concat&lt;/strong&gt;：合并文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-copy&lt;/strong&gt;：复制文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-cssmin&lt;/strong&gt;：压缩以及合并CSS文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-imagemin&lt;/strong&gt;：图像压缩模块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-jshint&lt;/strong&gt;：检查JavaScript语法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-uglify&lt;/strong&gt;：压缩以及合并JavaScript文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grunt-contrib-watch&lt;/strong&gt;：监视文件变动，做出相应动作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模块的前缀如果是grunt-contrib，就表示该模块由grunt开发团队维护；如果前缀是grunt（比如grunt-pakmanager），就表示由第三方开发者维护。&lt;/p&gt;
&lt;p&gt;以下选几个模块，看看它们配置参数的写法，也就是说如何在grunt.initConfig方法中配置各个模块。&lt;/p&gt;
&lt;h3 id=&quot;grunt-contrib-jshint&quot;&gt;&lt;a href=&quot;#grunt-contrib-jshint&quot; class=&quot;headerlink&quot; title=&quot;grunt-contrib-jshint&quot;&gt;&lt;/a&gt;grunt-contrib-jshint&lt;/h3&gt;&lt;p&gt;jshint用来检查语法错误，比如分号的使用是否正确、有没有忘记写括号等等。它在grunt.initConfig方法里面的配置代码如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jshint: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		eqeqeq: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		trailing: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	files: [&lt;span class=&quot;string&quot;&gt;&#39;Gruntfile.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;lib/**/*.js&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码先指定jshint的&lt;a href=&quot;http://www.jshint.com/docs/options/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;检查项目&lt;/a&gt;，eqeqeq表示要用严格相等运算符取代相等运算符，trailing表示行尾不得有多余的空格。然后，指定files属性，表示检查目标是Gruntfile.js文件，以及lib目录的所有子目录下面的JavaScript文件。&lt;/p&gt;
&lt;h3 id=&quot;grunt-contrib-concat&quot;&gt;&lt;a href=&quot;#grunt-contrib-concat&quot; class=&quot;headerlink&quot; title=&quot;grunt-contrib-concat&quot;&gt;&lt;/a&gt;grunt-contrib-concat&lt;/h3&gt;&lt;p&gt;concat用来合并同类文件，它不仅可以合并JavaScript文件，还可以合并CSS文件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;concat: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  js: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: [&lt;span class=&quot;string&quot;&gt;&#39;lib/module1.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;lib/module2.js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;lib/plugin.js&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dest: &lt;span class=&quot;string&quot;&gt;&#39;dist/script.js&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  css: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: [&lt;span class=&quot;string&quot;&gt;&#39;style/normalize.css&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;style/base.css&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;style/theme.css&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dest: &lt;span class=&quot;string&quot;&gt;&#39;dist/screen.css&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;js目标用于合并JavaScript文件，css目标用语合并CSS文件。两者的src属性指定需要合并的文件（input），dest属性指定输出的目标文件（output）。&lt;/p&gt;
&lt;h3 id=&quot;grunt-contrib-uglify&quot;&gt;&lt;a href=&quot;#grunt-contrib-uglify&quot; class=&quot;headerlink&quot; title=&quot;grunt-contrib-uglify&quot;&gt;&lt;/a&gt;grunt-contrib-uglify&lt;/h3&gt;&lt;p&gt;uglify模块用来压缩代码，减小文件体积。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;uglify: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    banner: bannerContent,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sourceMapRoot: &lt;span class=&quot;string&quot;&gt;&#39;../&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sourceMap: &lt;span class=&quot;string&quot;&gt;&#39;distrib/&#39;&lt;/span&gt;+name+&lt;span class=&quot;string&quot;&gt;&#39;.min.js.map&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sourceMapUrl: name+&lt;span class=&quot;string&quot;&gt;&#39;.min.js.map&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  target : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	cwd: &lt;span class=&quot;string&quot;&gt;&#39;js/origin&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	src : &lt;span class=&quot;string&quot;&gt;&#39;*.js&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	dest : &lt;span class=&quot;string&quot;&gt;&#39;js/&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码中的options属性指定压缩后文件的文件头，以及sourceMap设置；target目标指定输入和输出文件。&lt;/p&gt;
&lt;h3 id=&quot;grunt-contrib-copy&quot;&gt;&lt;a href=&quot;#grunt-contrib-copy&quot; class=&quot;headerlink&quot; title=&quot;grunt-contrib-copy&quot;&gt;&lt;/a&gt;grunt-contrib-copy&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gruntjs/grunt-contrib-copy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;copy模块&lt;/a&gt;用于复制文件与目录。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;copy: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  main: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: &lt;span class=&quot;string&quot;&gt;&#39;src/*&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dest: &lt;span class=&quot;string&quot;&gt;&#39;dest/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码将src子目录（只包含它下面的第一层文件和子目录），拷贝到dest子目录下面（即dest/src目录）。如果要更准确控制拷贝行为，比如只拷贝文件、不拷贝目录、不保持目录结构，可以写成下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;copy: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  main: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    cwd: &lt;span class=&quot;string&quot;&gt;&#39;src/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: &lt;span class=&quot;string&quot;&gt;&#39;**&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dest: &lt;span class=&quot;string&quot;&gt;&#39;dest/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    flatten: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    filter: &lt;span class=&quot;string&quot;&gt;&#39;isFile&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;grunt-contrib-watch&quot;&gt;&lt;a href=&quot;#grunt-contrib-watch&quot; class=&quot;headerlink&quot; title=&quot;grunt-contrib-watch&quot;&gt;&lt;/a&gt;grunt-contrib-watch&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gruntjs/grunt-contrib-watch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;watch模块&lt;/a&gt;用来在后台运行，监听指定事件，然后自动运行指定的任务。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;watch: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   scripts: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    files: &lt;span class=&quot;string&quot;&gt;&#39;**/*.js&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tasks: &lt;span class=&quot;string&quot;&gt;&#39;jshint&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      livereload: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   css: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    files: &lt;span class=&quot;string&quot;&gt;&#39;**/*.sass&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tasks: [&lt;span class=&quot;string&quot;&gt;&#39;sass&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      livereload: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置好上面的代码，打开另一个进程，运行grunt watch。此后，任何的js代码变动，文件保存后就会自动运行jshint任务；任何sass文件变动，文件保存后就会自动运行sass任务。&lt;/p&gt;
&lt;p&gt;需要注意的是，这两个任务的options参数之中，都设置了livereload，表示任务运行结束后，自动在浏览器中重载（reload）。这需要在浏览器中安装&lt;a href=&quot;http://livereload.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;livereload插件&lt;/a&gt;。安装后，livereload的默认端口为localhost:35729，但是也可以用livereload: 1337的形式重设端口（localhost:1337）。&lt;/p&gt;
&lt;h3 id=&quot;其他模块&quot;&gt;&lt;a href=&quot;#其他模块&quot; class=&quot;headerlink&quot; title=&quot;其他模块&quot;&gt;&lt;/a&gt;其他模块&lt;/h3&gt;&lt;p&gt;下面是另外一些有用的模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）grunt-contrib-clean&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于删除文件或目录。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;clean: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  build: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: [&lt;span class=&quot;string&quot;&gt;&quot;path/to/dir/one&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;path/to/dir/two&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（2）grunt-autoprefixer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于为CSS语句加上浏览器前缀。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;autoprefixer: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  build: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    cwd: &lt;span class=&quot;string&quot;&gt;&#39;build&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    src: [ &lt;span class=&quot;string&quot;&gt;&#39;**/*.css&#39;&lt;/span&gt; ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dest: &lt;span class=&quot;string&quot;&gt;&#39;build&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）grunt-contrib-connect&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于在本机运行一个Web Server。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;connect: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  server: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      port: &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      base: &lt;span class=&quot;string&quot;&gt;&#39;build&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      hostname: &lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;connect模块会随着grunt运行结束而结束，为了使它一直处于运行状态，可以把它放在watch模块之前运行。因为watch模块需要手动中止，所以connect模块也就会一直运行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（4）grunt-htmlhint&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于检查HTML语法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;htmlhint: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    build: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;tag-pair&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;tagname-lowercase&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;attr-lowercase&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;attr-value-double-quotes&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;spec-char-escape&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;id-unique&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;head-script-disabled&#39;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        src: [&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码用于检查index.html文件：HTML标记是否配对、标记名和属性名是否小写、属性值是否包括在双引号之中、特殊字符是否转义、HTML元素的id属性是否为唯一值、head部分是否没有script标记。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（5）grunt-contrib-sass模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于将SASS文件转为CSS文件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sass: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    build: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            style: &lt;span class=&quot;string&quot;&gt;&#39;compressed&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        files: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;build/css/master.css&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;assets/sass/master.scss&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码指定输出文件为build/css/master.css，输入文件为assets/sass/master.scss。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（6）grunt-markdown&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该模块用于将markdown文档转为HTML文档。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;markdown: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    all: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      files: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          src: &lt;span class=&quot;string&quot;&gt;&#39;*.md&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          dest: &lt;span class=&quot;string&quot;&gt;&#39;docs/html/&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          ext: &lt;span class=&quot;string&quot;&gt;&#39;.html&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      options: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        template: &lt;span class=&quot;string&quot;&gt;&#39;templates/index.html&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码指定将md后缀名的文件，转为docs/html/目录下的html文件。template属性指定转换时采用的模板，模板样式如下。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=content%&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;在Javascript的开发过程中，经常会遇到一些重复性的任务，比如合并文件、压缩代码、检查语法错误、将Sass代码转成CSS代码等等。通常，我们需要使用不同的工具，来完成不同的任务，既重复劳动又非常耗时。Grunt就是为了解决这个问题而发明的工具，可以帮助我们自
    
    </summary>
    
      <category term="tool,grunt,javascript,自动管理" scheme="http://ronghuaxueleng.github.io/categories/tool-grunt-javascript-%E8%87%AA%E5%8A%A8%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>NPM安装及优化步骤--详细版</title>
    <link href="http://ronghuaxueleng.github.io/2015/12/15/npm-setting/"/>
    <id>http://ronghuaxueleng.github.io/2015/12/15/npm-setting/</id>
    <published>2015-12-15T11:12:59.000Z</published>
    <updated>2016-03-21T10:06:49.313Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;h2 id=&quot;npm的常用命令&quot;&gt;&lt;a href=&quot;#npm的常用命令&quot; class=&quot;headerlink&quot; title=&quot;npm的常用命令&quot;&gt;&lt;/a&gt;npm的常用命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;npm install xxx 安装模块  
npm install xxx@1.1.1   安装1.1.1版本的xxx  
npm install xxx -g 将模块安装到全局环境中。  
npm ls 查看安装的模块及依赖  
npm ls -g 查看全局安装的模块及依赖  
npm uninstall xxx  (-g) 卸载模块  
npm cache clean 清理缓存  
npm help xxx  查看帮助  
npm view moudleName dependencies  查看包的依赖关系  
npm view moduleNames  查看node模块的package.json文件夹  
npm view moduleName labelName  查看package.json文件夹下某个标签的内容  
npm view moduleName repository.url  查看包的源文件地址  
npm view moduleName engines   查看包所依赖的Node的版本  
npm help folders   查看npm使用的所有文件夹  
npm rebuild moduleName    用于更改包内容后进行重建  
npm outdated   检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新  
npm update moduleName   更新node模块  
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;npm获取配置有6种方式，优先级由高到低&quot;&gt;&lt;a href=&quot;#npm获取配置有6种方式，优先级由高到低&quot; class=&quot;headerlink&quot; title=&quot;npm获取配置有6种方式，优先级由高到低&quot;&gt;&lt;/a&gt;npm获取配置有6种方式，优先级由高到低&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1、命令行参数。 --proxy http://server:port即将proxy的值设为http://server:port。
2、环境变量。 以npm_config_为前缀的环境变量将会被认为是npm的配置属性。如设置proxy可以加入这样的环境变量npm_config_proxy=http://server:port。
3、用户配置文件。可以通过npm config get userconfig查看文件路径。如果是mac系统的话默认路径就是$HOME/.npmrc。
4、全局配置文件。可以通过npm config get globalconfig查看文件路径。mac系统的默认路径是/usr/local/etc/npmrc。
5、内置配置文件。安装npm的目录下的npmrc文件。
6、默认配置。 npm本身有默认配置参数，如果以上5条都没设置，则npm会使用默认配置参数。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;针对npm配置的命令行操作&quot;&gt;&lt;a href=&quot;#针对npm配置的命令行操作&quot; class=&quot;headerlink&quot; title=&quot;针对npm配置的命令行操作&quot;&gt;&lt;/a&gt;针对npm配置的命令行操作&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;npm config set &amp;lt;key&amp;gt; &amp;lt;value&amp;gt; [--global]
npm config get &amp;lt;key&amp;gt;
npm config delete &amp;lt;key&amp;gt;
npm config list
npm config edit
npm get &amp;lt;key&amp;gt;
npm set &amp;lt;key&amp;gt; &amp;lt;value&amp;gt; [--global]
在设置配置属性时属性值默认是被存储于用户配置文件中，如果加上--global，则被存储在全局配置文件中。
如果要查看npm的所有配置属性（包括默认配置），可以使用npm config ls -l。
如果要查看npm的各种配置的含义，可以使用npm help config。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于国内网络的种种限制问题，直接运行npm install xxx安装模块支持的时候，有时会出现网络卡断，下载失败的情况，解决办法有2种：&lt;/p&gt;
&lt;p&gt;1、为npm设置代理&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set proxy http://server:port
npm config set https-proxy http://server:port
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果代理需要认证的话可以这样来设置。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set proxy http://username:password@server:port
npm config set https-proxy http://username:pawword@server:port
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2、国内镜像&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;清华大学Node Packaged Modules镜像：
http://npm.tuna.tsinghua.edu.cn
淘宝：
http://registry.npm.taobao.org
cnpmjs:
http://r.cnpmjs.org
未知：
http://registry.cnpmjs.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法一：通过config命令指定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set registry http://registry.cnpmjs.org 
npm info underscore （如果上面配置正确这个命令会有字符串response）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法二：在命令行中指定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm --registry http://registry.cnpmjs.org info underscore
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法三：在配置文件中指定，编辑安装npm的目录下的npmrc文件加入下面内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;registry = http://registry.cnpmjs.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法四：利用定制的cnpm代替npm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#安装该模块，然后通过该命令来安装所需模块
npm install -g cnpm --registry=http://registry.npm.taobao.org
# 利用cnpm来安装模块
cnpm install [name]# 利用cnpm来同步模块
cnpm sync connect
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法五：利用alias添加一个基于npm的新命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias cnpm=&amp;quot;npm --registry=http://registry.npm.taobao.org \--cache=$HOME/.npm/.cache/cnpm \--disturl=http://npm.taobao.org/dist \--userconfig=$HOME/.cnpmrc&amp;quot;#Or alias it in .bashrc or .zshrc$ echo &amp;apos;\n#alias for cnpm\nalias cnpm=&amp;quot;npm --registry=registry.npm.taobao.org \  --cache=$HOME/.npm/.cache/cnpm \  --disturl=http://npm.taobao.org/dist \  --userconfig=$HOME/.cnpmrc&amp;quot;&amp;apos; &amp;gt;&amp;gt; ~/.zshrc &amp;amp;&amp;amp; source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;npm的常用命令&quot;&gt;&lt;a href=&quot;#npm的常用命令&quot; class=&quot;headerlink&quot; title=&quot;npm的常用命令&quot;&gt;&lt;/a&gt;npm的常用命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;npm install xxx 安装模块  
npm instal
    
    </summary>
    
      <category term="tool,npm,安装,优化" scheme="http://ronghuaxueleng.github.io/categories/tool-npm-%E5%AE%89%E8%A3%85-%E4%BC%98%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>快速搭建 Node.js 开发环境</title>
    <link href="http://ronghuaxueleng.github.io/2015/12/08/nodejs-install/"/>
    <id>http://ronghuaxueleng.github.io/2015/12/08/nodejs-install/</id>
    <published>2015-12-08T11:12:59.000Z</published>
    <updated>2016-03-21T10:01:22.489Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本,&lt;br&gt;那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净.&lt;br&gt;如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;osx-linux-环境&quot;&gt;&lt;a href=&quot;#osx-linux-环境&quot; class=&quot;headerlink&quot; title=&quot;osx, linux 环境&quot;&gt;&lt;/a&gt;osx, linux 环境&lt;/h1&gt;&lt;p&gt;如果你是 windows 环境开发, 请跳过这里, 直接查看下一章.&lt;/p&gt;
&lt;h2 id=&quot;git-clone-nvm&quot;&gt;&lt;a href=&quot;#git-clone-nvm&quot; class=&quot;headerlink&quot; title=&quot;git clone nvm&quot;&gt;&lt;/a&gt;git clone nvm&lt;/h2&gt;&lt;p&gt;直接从 github clone nvm 到本地, 这里假设大家都使用 ~/git 目录存放 git 项目:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/git
git clone https://github.com/creationix/nvm.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置终端启动时自动执行 source ~/git/nvm/nvm.sh,&lt;br&gt;在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source ~/git/nvm/nvm.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新打开你的终端, 输入 nvm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nvm

Node Version Manager

Usage:
    nvm help                    Show this message
    nvm --version               Print out the latest released version of nvm
    nvm install [-s] &amp;lt;version&amp;gt;  Download and install a &amp;lt;version&amp;gt;, [-s] from source
    nvm uninstall &amp;lt;version&amp;gt;     Uninstall a version
    nvm use &amp;lt;version&amp;gt;           Modify PATH to use &amp;lt;version&amp;gt;
    nvm run &amp;lt;version&amp;gt; [&amp;lt;args&amp;gt;]  Run &amp;lt;version&amp;gt; with &amp;lt;args&amp;gt; as arguments
    nvm current                 Display currently activated version
    nvm ls                      List installed versions
    nvm ls &amp;lt;version&amp;gt;            List versions matching a given description
    nvm ls-remote               List remote versions available for install
    nvm deactivate              Undo effects of NVM on current shell
    nvm alias [&amp;lt;pattern&amp;gt;]       Show all aliases beginning with &amp;lt;pattern&amp;gt;
    nvm alias &amp;lt;name&amp;gt; &amp;lt;version&amp;gt;  Set an alias named &amp;lt;name&amp;gt; pointing to &amp;lt;version&amp;gt;
    nvm unalias &amp;lt;name&amp;gt;          Deletes the alias named &amp;lt;name&amp;gt;
    nvm copy-packages &amp;lt;version&amp;gt; Install global NPM packages contained in &amp;lt;version&amp;gt; to current version
Example:
    nvm install v0.10.24        Install a specific version number
    nvm use 0.10                Use the latest available 0.10.x release
    nvm run 0.10.24 myApp.js    Run myApp.js using node v0.10.24
    nvm alias default 0.10.24   Set default node version on a shell
Note:
    to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;通过-nvm-安装任意版本的-node&quot;&gt;&lt;a href=&quot;#通过-nvm-安装任意版本的-node&quot; class=&quot;headerlink&quot; title=&quot;通过 nvm 安装任意版本的 node&quot;&gt;&lt;/a&gt;通过 nvm 安装任意版本的 node&lt;/h2&gt;&lt;p&gt;nvm 默认是从 &lt;a href=&quot;http://nodejs.org/dist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nodejs.org/dist/&lt;/a&gt; 下载的, 国外服务器, 必然很慢,&lt;br&gt;好在 nvm 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist nvm install 0.11.11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;于是你就会看到一段非常快速进度条:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;######################################################################## 100.0%
Now using node v0.11.11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你不想每次都输入环境变量 NVM_NODEJS_ORG_MIRROR, 那么我建议你加入到 .bashrc 文件中:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# nvm
export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist
source ~/git/nvm/nvm.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nvm ls
     nvm
 v0.8.26
v0.10.26
v0.11.11
-&amp;gt;  v0.11.12
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;windows-环境&quot;&gt;&lt;a href=&quot;#windows-环境&quot; class=&quot;headerlink&quot; title=&quot;windows 环境&quot;&gt;&lt;/a&gt;windows 环境&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;git-clone-nvmw&quot;&gt;&lt;a href=&quot;#git-clone-nvmw&quot; class=&quot;headerlink&quot; title=&quot;git clone nvmw&quot;&gt;&lt;/a&gt;git clone nvmw&lt;/h2&gt;&lt;p&gt;直接从 github clone nvmw 到本地, 这里假设大家都使用 d:\git 目录存放 git 项目:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ d:
$ cd git
$ git clone https://github.com/hakobera/nvmw.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置 d:\git\nvmw 目录到你的 PATH 环境变量中:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set &amp;quot;PATH=d:\git\nvmw;%PATH%&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新打开你的终端, 输入 nvmw&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nvmw
Usage:
  nvmw help                    Show this message
  nvmw install [version]       Download and install a [version]
  nvmw uninstall [version]     Uninstall a [version]
  nvmw use [version]           Modify PATH to use [version]
  nvmw ls                      List installed versions
Example:
  nvmw install v0.6.0          Install a specific version number
  nvmw use v0.6.0              Use the specific version
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;通过-nvmw-安装任意版本的-node&quot;&gt;&lt;a href=&quot;#通过-nvmw-安装任意版本的-node&quot; class=&quot;headerlink&quot; title=&quot;通过 nvmw 安装任意版本的 node&quot;&gt;&lt;/a&gt;通过 nvmw 安装任意版本的 node&lt;/h2&gt;&lt;p&gt;nvmw 默认是从 &lt;a href=&quot;http://nodejs.org/dist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nodejs.org/dist/&lt;/a&gt; 下载的, 国外服务器, 必然很慢,&lt;br&gt;好在 nvmw 以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ set &amp;quot;NVMW_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist&amp;quot;
$ nvmw install 0.11.11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;于是你就会看到一段非常快速进度条:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;######################################################################## 100.0%
Now using node v0.11.11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你不想每次都输入环境变量 NVMW_NODEJS_ORG_MIRROR, 那么我建议你在全局环境变量中增加它.&lt;/p&gt;
&lt;p&gt;然后你可以继续非常方便地安装各个版本的 node 了, 你可以查看一下你当前已经安装的版本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nvmw ls
v0.10.26
v0.11.12
Current: v0.11.12
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到此, 无论是 windows 环境, 还是 osx, linux 环境, 都能快速安装多个版本的 node 了.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本,&lt;br&gt;那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净.&lt;br&gt;如果你使用 Win
    
    </summary>
    
      <category term="tool,nodejs,javascript,环境,搭建" scheme="http://ronghuaxueleng.github.io/categories/tool-nodejs-javascript-%E7%8E%AF%E5%A2%83-%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>使用hexo搭建属于自己的博客</title>
    <link href="http://ronghuaxueleng.github.io/2015/11/25/hello-world/"/>
    <id>http://ronghuaxueleng.github.io/2015/11/25/hello-world/</id>
    <published>2015-11-24T16:00:00.000Z</published>
    <updated>2016-07-15T08:42:03.085Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;在搭建这个博客期间参考了很多资料，因为不是所有的资料都能完整并且顺利搭建出来，经过我本人实践，整理出来这篇文章，希望可以帮助大家减少不必要的麻烦，不用再到处找搭建方法，本文的共分为一下几章：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一节： 什么是hexo&lt;br&gt;第二节： 为什么要用hexo&lt;br&gt;第三节： 谁使用hexo&lt;br&gt;第四节： 怎样搭建hexo博客&lt;br&gt;第五节： 如何更换自己的主题&lt;br&gt;第六节： 如何发表文章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第一节：什么是hexo&quot;&gt;&lt;a href=&quot;#第一节：什么是hexo&quot; class=&quot;headerlink&quot; title=&quot;第一节：什么是hexo&quot;&gt;&lt;/a&gt;第一节：什么是hexo&lt;/h2&gt;&lt;p&gt; hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，hexo：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;快速、简单且功能强大的 Node.js 博客框架。&lt;br&gt;A fast, simple &amp;amp; powerful blog framework, powered by Node.js.&lt;br&gt;类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第二节：为什么要用hexo&quot;&gt;&lt;a href=&quot;#第二节：为什么要用hexo&quot; class=&quot;headerlink&quot; title=&quot;第二节：为什么要用hexo&quot;&gt;&lt;/a&gt;第二节：为什么要用hexo&lt;/h2&gt;&lt;p&gt;还是引用作者的话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不可思议的快速 ─ 只要一眨眼静态文件即生成完成&lt;br&gt;支持 Markdown&lt;br&gt;仅需一道指令即可部署到 GitHub Pages 和 Heroku&lt;br&gt;已移植 Octopress 插件&lt;br&gt;高扩展性、自订性&lt;br&gt;兼容于 Windows, Mac &amp;amp; Linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在加几个自己体会到的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;易用：不仅部署简单，平时使用中仅需要hexo new hexo generate hexo server hexo deploy四个命令。不像Jekyll需要很多繁琐的git命令。&lt;/li&gt;
&lt;li&gt;轻：文件少、小，易理解，方便自定义。&lt;/li&gt;
&lt;li&gt;用户多：虽然赶不上Jekyll和Octopress，但遇到什么问题都能搜索到答案，或者找到同样使用hexo的用户进行参考和咨询。&lt;/li&gt;
&lt;li&gt;简单：我本人不太爱倒腾这东西，但是当我看到本博客的模板后，在看完教程后，都停不下来，用了一晚上就搭起来了&lt;/li&gt;
&lt;li&gt;省时：不必浪费时间在你不关注的东西上，专心写你的博客&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第三节：谁使用hexo&quot;&gt;&lt;a href=&quot;#第三节：谁使用hexo&quot; class=&quot;headerlink&quot; title=&quot;第三节：谁使用hexo&quot;&gt;&lt;/a&gt;第三节：谁使用hexo&lt;/h2&gt;&lt;p&gt;这是一个免费开源的博客程序，任何人都可以使用和修改。但是不同于wordpress，hexo由于需要使用&lt;strong&gt;Github,Git,Markdown,Node.js&lt;/strong&gt;这样的工具，好多插件、widget都需要自己安装、设置。所以&lt;strong&gt;适合那些有一定计算机基础，喜欢折腾的人&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第四节：怎样搭建hexo博客&quot;&gt;&lt;a href=&quot;#第四节：怎样搭建hexo博客&quot; class=&quot;headerlink&quot; title=&quot;第四节：怎样搭建hexo博客&quot;&gt;&lt;/a&gt;第四节：怎样搭建hexo博客&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo安装&lt;/em&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;安装Git&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载 &lt;a href=&quot;http://git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;msysgit&lt;/a&gt; 并执行即可完成安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;安装Node.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在Windows环境下安装&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;非常简单，仅须下载安装文件并执行即可完成安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;设置软件包国内镜像&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set registry http://registry.npm.taobao.org
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;安装hexo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;创建hexo文件夹&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;安装完成后，在你喜爱的文件夹下（如F:\hexo），执行以下指令(在F:\hexo内点击鼠标右键，选择Git bash)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行完这一步后，你会发现文件夹下生成了一些文件和文件夹，用文本编辑器打开package.json文件，将里面的内容改为以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;hexo-site&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.0&amp;quot;,
  &amp;quot;private&amp;quot;: true,
  &amp;quot;hexo&amp;quot;: {
    &amp;quot;version&amp;quot;: &amp;quot;3.1.1&amp;quot;
  },
  &amp;quot;dependencies&amp;quot;: {
    &amp;quot;hexo&amp;quot;: &amp;quot;^3.1.0&amp;quot;,
    &amp;quot;hexo-deployer-git&amp;quot;: &amp;quot;0.0.4&amp;quot;,
    &amp;quot;hexo-deployer-heroku&amp;quot;: &amp;quot;0.0.3&amp;quot;,
    &amp;quot;hexo-deployer-openshift&amp;quot;: &amp;quot;0.0.1&amp;quot;,
    &amp;quot;hexo-deployer-rsync&amp;quot;: &amp;quot;^0.1.1&amp;quot;,
    &amp;quot;hexo-generator-archive&amp;quot;: &amp;quot;^0.1.3&amp;quot;,
    &amp;quot;hexo-generator-category&amp;quot;: &amp;quot;^0.1.3&amp;quot;,
    &amp;quot;hexo-generator-feed&amp;quot;: &amp;quot;^1.0.3&amp;quot;,
    &amp;quot;hexo-generator-index&amp;quot;: &amp;quot;^0.1.3&amp;quot;,
    &amp;quot;hexo-generator-sitemap&amp;quot;: &amp;quot;^1.0.1&amp;quot;,
    &amp;quot;hexo-generator-tag&amp;quot;: &amp;quot;^0.1.2&amp;quot;,
    &amp;quot;hexo-renderer-ejs&amp;quot;: &amp;quot;^0.1.0&amp;quot;,
    &amp;quot;hexo-renderer-marked&amp;quot;: &amp;quot;^0.2.5&amp;quot;,
    &amp;quot;hexo-renderer-stylus&amp;quot;: &amp;quot;^0.2.3&amp;quot;,
    &amp;quot;hexo-server&amp;quot;: &amp;quot;^0.1.2&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;安装依赖包&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;本地查看&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;现在我们已经搭建起本地的hexo博客了，执行以下命令(在F:\hexo)，然后到浏览器输入localhost:4000看看。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate
hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注册Github账号&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;已有账号可以跳过，没有的，请在&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;进行注册，很简单，这里就不介绍了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;创建repository&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在自己Github主页右下角，创建一个新的repository。比如我的Github账号是ronghuaxueleng，那么我应该创建的repository名字应该是&lt;a href=&quot;http://ronghuaxueleng.github.io&quot;&gt;ronghuaxueleng.github.io&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/img/github_build.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/github_created.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;部署&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑_config.yml(在F:\hexo下)。你在部署时，要把下面的nothingcpd都换成你的账号名。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
  type: git
  repository: http://github.com/ronghuaxueleng/ronghuaxueleng.github.io.git
  branch: master
  ##注意：&amp;quot;：&amp;quot;后边需要有一个&amp;quot;空格&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;执行下列指令即可完成部署。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate
hexo deploy
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;第五节：如何更换自己的主题&quot;&gt;&lt;a href=&quot;#第五节：如何更换自己的主题&quot; class=&quot;headerlink&quot; title=&quot;第五节：如何更换自己的主题&quot;&gt;&lt;/a&gt;第五节：如何更换自己的主题&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;使用&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在hexo主目录下&lt;br&gt;$ git clone &lt;a href=&quot;https://github.com/litten/hexo-theme-yilia.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/litten/hexo-theme-yilia.git&lt;/a&gt; themes/yilia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改hexo根目录下_config.yml ：&lt;br&gt;theme: yilia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.更新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd themes/yilia
git pull
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;配置&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;主题配置文件在主题目录yalia下的_config.yml：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Header
menu:
  主页: /
  所有文章: /archives
  # 随笔: /tags/随笔

# SubNav
subnav:
  github: &amp;quot;#&amp;quot;
  weibo: &amp;quot;#&amp;quot;
  rss: &amp;quot;#&amp;quot;
  facebook: &amp;quot;#&amp;quot;
  # google: &amp;quot;#&amp;quot;
  # twitter: &amp;quot;#&amp;quot;
  # linkedin: &amp;quot;#&amp;quot;

rss: /atom.xml

# Content
excerpt_link: more
fancybox: true

# Miscellaneous
google_analytics: &amp;apos;&amp;apos;
favicon: /favicon.png

#你的头像
avatar: &amp;quot;https://avatars2.githubusercontent.com/u/2024949?v=2&amp;amp;s=150&amp;quot;
#是否开启分享
share: true
#是否开启多说评论，填写你在多说申请的项目名称
duoshuo: true
#是否开启云标签
tagcloud: true

#是否开启友情链接
#不开启——
#friends: false
#开启——
friends:
  奥巴马的博客: http://localhost:4000/
  卡卡的美丽传说: http://localhost:4000/
  本泽马的博客: http://localhost:4000/
  吉格斯的博客: http://localhost:4000/
  习大大大不同: http://localhost:4000/
  托蒂的博客: http://localhost:4000/

#是否开启“关于我”。
#不开启——
#aboutme: false
#开启——
aboutme: 我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;体验&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate
hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后在浏览器中输入：localhost:4000 查看主题效果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate
hexo deploy

最后在浏览器中输入： ronghuaxueleng.github.com 
ps：ronghuaxueleng换成你自己的repo名字，查看效果
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;这里有hexo的各种主题，喜欢折腾的可以去看看&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://hexo.io/themes/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;第六节：如何发表文章&quot;&gt;&lt;a href=&quot;#第六节：如何发表文章&quot; class=&quot;headerlink&quot; title=&quot;第六节：如何发表文章&quot;&gt;&lt;/a&gt;第六节：如何发表文章&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1. step1：输入 hexo new “my first post”&lt;/strong&gt;&lt;br&gt;ps:引号可以不加，最好不加，此时 查看source/_posts/下面会产生post.md的文件，此文件需要用markdown语言编辑，后面会有一篇专门介绍markdown语法的blog&lt;br&gt;以后每次运行上面的命令都会产生文件，会产生post1-1.md，post-2.md等依次增加&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step2: 在F:\hexo\source_posts中打开这个文件（打开方式用“记事本”即可）, 然后将下面内容 拷贝到里面&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; layout: post
 title: &amp;quot;我的博客情缘&amp;quot;
 date: 2014-12-17 13:15
 comments: true
 tags: 
    - 随笔
    - 心情
    - 个人
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;step3: 输入 hexo server&lt;/strong&gt;&lt;br&gt;访问localhost:4000预览效果。（退出server用Ctrl+c）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step4: 输入 hexo deploy&lt;/strong&gt;&lt;br&gt;同步到github。访问网站看看效果。ronghuaxueleng.github.io(ronghuaxueleng换成你自己的repo)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在为止，我们已经搭建起博客，进行一些基本配置，设置了主题，并学会了怎么发表文章。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;在搭建这个博客期间参考了很多资料，因为不是所有的资料都能完整并且顺利搭建出来，经过我本人实践，整理出来这篇文章，希望可以帮助大家减少不必要的麻烦，不用再到处找搭建方法，本文的共分为一下几章：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一节： 什么是hexo&lt;br&gt;
    
    </summary>
    
      <category term="hexo,博客,blog,搭建" scheme="http://ronghuaxueleng.github.io/categories/hexo-%E5%8D%9A%E5%AE%A2-blog-%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
</feed>
